%!PS-Adobe-2.0
%%Creator: dvips 5.58 Copyright 1986, 1994 Radical Eye Software
%%Title: problems.dvi
%%CreationDate: Thu Jan 23 11:35:46 1997
%%Pages: 33
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%EndComments
%DVIPSCommandLine: dvips problems -o problems.ps
%DVIPSParameters: dpi=300, comments removed
%DVIPSSource:  TeX output 1997.01.23:1132
%%BeginProcSet: tex.pro
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR[matrix currentmatrix{dup dup round sub abs 0.00001 lt{round}if}
forall round exch round exch]setmatrix}N /@landscape{/isls true N}B
/@manualfeed{statusdict /manualfeed true put}B /@copies{/#copies X}B
/FMat[1 0 0 -1 0 0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{
/nn 8 dict N nn begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N
string /base X array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N
end dup{/foo setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{
/sf 1 N /fntrx FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]
N df-tail}B /E{pop nn dup definefont setfont}B /ch-width{ch-data dup
length 5 sub get}B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{
128 ch-data dup length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub
get 127 sub}B /ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data
dup type /stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N
/rc 0 N /gp 0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup
/base get 2 index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx
0 ch-xoff ch-yoff ch-height sub ch-xoff ch-width add ch-yoff
setcachedevice ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff
.1 sub]{ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}
if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore userdict
/eop-hook known{eop-hook}if showpage}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale rulex ruley false
RMat{BDot}imagemask grestore}}{{gsave TR -.1 .1 TR rulex ruley scale 1 1
false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave newpath transform
round exch round exch itransform moveto rulex 0 rlineto 0 ruley neg
rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta 0 N /tail
{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}B /c{-4 M}
B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{3 M}B /k{
4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w}B /q{
p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p
a}B /bos{/SS save N}B /eos{SS restore}B end
%%EndProcSet
%%BeginProcSet: special.pro
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale true def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{SDict
begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /showpage{}N /erasepage{}N /copypage{}N newpath
}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{
end}repeat grestore SpecialSave restore end}N /@defspecial{SDict begin}
N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{
/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end
%%EndProcSet
TeXDict begin 39158280 55380996 1000 300 300
(/home/nile/rww/THESIS/problems.dvi) @start /Fa 40 122
df<0001F03C00071C47000C1CC7000C19C6001C0180001C038000180380003803800038
0380003807000038070003FFFFF000700700007007000070070000700E0000700E0000E0
0E0000E00E0000E00E0000E01C0000E01C0001C01C0001C01C0001C01C0001C0380001C0
3800038038000380380003803000030070000300700007006000C630E000E638C000CC31
8000781E00002025819C19>11 D<FFC0FFC0FFC00A037D890F>45
D<3078F06005047C830D>I<000018000000180000003800000038000000780000007800
0000B800000138000001380000023C0000021C0000041C00000C1C0000081C0000101C00
00101C0000201C0000201C00007FFC0000C01C0000801C0001001C0001001E0002000E00
02000E0004000E000C000E001C001E00FF00FFC01A1D7E9C1F>65
D<01FFFF00003C0380003801C0003800E0003800E0003800E0007000E0007001E0007001
E0007003C000E0038000E00F0000E01E0000FFFC0001C00E0001C0070001C0078001C007
800380078003800780038007800380078007000F0007000E0007001E0007003C000E00F0
00FFFFC0001B1C7E9B1D>I<0003F020001E0C60003002E000E003C001C001C0038001C0
070000C00E0000801E0000801C0000803C0000803C000000780000007800000078000000
F0000000F0000000F0000000F0000000F0000400F0000400F0000400F000080070000800
7000100038002000180040000C0180000706000001F800001B1E7A9C1E>I<01FFFF0000
3C03C0003800E0003800E000380070003800700070007800700038007000380070007800
E0007800E0007800E0007800E0007801C000F001C000F001C000F001C000E0038001E003
8001C0038003C0038003800700070007000E0007001C00070038000E00E000FFFF80001D
1C7E9B1F>I<01FFFFF0003C00F000380030003800200038002000380020007000200070
0020007008200070080000E0100000E0100000E0300000FFF00001C0200001C0200001C0
200001C02000038040800380008003800080038001000700010007000300070002000700
06000E003C00FFFFFC001C1C7E9B1C>I<03FF0078007000700070007000E000E000E000
E001C001C001C001C0038003800380038007000700070007000E000E000E000E001E00FF
C0101C7D9B10>73 D<003FF80003C0000380000380000380000380000700000700000700
000700000E00000E00000E00000E00001C00001C00001C00001C00003800003800003800
003800607000E07000C0600080E00081C0004380003E0000151D7C9B16>I<01FE0001FE
003E0001E0002E0003C0002E0005C0002E0005C0002E0009C0004E000B80004E00138000
4E002380004700238000870047000087004700008700870000870107000107010E000107
020E000107040E000107040E000207081C000203881C000203901C000203A01C000403A0
38000403C038000403C038000C038038001C03007800FF8307FF00271C7E9B25>77
D<01FC00FF80001C001C00002E001800002E001000002E00100000270010000047002000
0043002000004380200000438020000081C040000081C040000081C040000080E0400001
00E080000100708000010070800001007080000200390000020039000002003900000200
1D000004001E000004000E000004000E00000C000E00001C00040000FF80040000211C7E
9B1F>I<0007F000001C1C0000700E0000E0070001C0038003800380070003800E0003C0
1E0003C01C0003C03C0003C03C0003C0780003C0780003C0780003C0F0000780F0000780
F0000780F0000F00F0000F00F0000E00F0001E00F0003C0070003800700070007800E000
3801C0001C0380000E0E000003F800001A1E7A9C20>I<01FFFE00003C0380003801C000
3800E0003800E0003800E0007001E0007001E0007001E0007001C000E003C000E0038000
E0070000E01C0001FFF00001C0000001C0000001C0000003800000038000000380000003
800000070000000700000007000000070000000F000000FFE000001B1C7E9B1C>I<000F
8400304C00403C00801801001803001803001806001006001006000007000007000003E0
0003FC0001FF00007F800007C00001C00001C00000C00000C02000C02000C06001806001
80600300600200F00400CC180083E000161E7D9C17>83 D<1FFFFFC01C0701C0300E00C0
200E0080600E0080400E0080401C0080801C0080801C0080001C00000038000000380000
00380000003800000070000000700000007000000070000000E0000000E0000000E00000
00E0000001C0000001C0000001C0000001C0000003C000007FFE00001A1C799B1E>I<FF
801FC03C0007001C0004001C0004001C0008001C0010001C0010001C0020001C0020001C
0040001C0080001C0080000E0100000E0100000E0200000E0400000E0400000E0800000E
0800000E1000000E2000000F200000074000000740000007800000070000000700000006
000000060000001A1D779B1F>86 D<FF83FF07F03C007001C038007001803800F0010038
00F001003801700200380170040038027004003802700800380470080038047010003808
70100038087020003810702000383070400038207040001C407080001C407080001C8071
00001C807100001D007200001D007200001E007400001E007400001C003800001C003800
00180030000018002000001000200000241D779B29>I<01E307170C0F180F380E300E70
0E700EE01CE01CE01CE01CE039E039E0396079319A1E0C10127C9115>97
D<3F00070007000E000E000E000E001C001C001C001C0039E03A183C0C380C700C700E70
0E700EE01CE01CE01CE018E038E030E06060C031801E000F1D7C9C13>I<00F803040E04
1C0E181C300070007000E000E000E000E000E000E0046008601030600F800F127C9113>
I<0007E00000E00000E00001C00001C00001C00001C000038000038000038000038001E7
000717000C0F00180F00380E00300E00700E00700E00E01C00E01C00E01C00E01C00E039
00E03900E03900607900319A001E0C00131D7C9C15>I<00F807040C0418023804300470
087FF0E000E000E000E000E00060046008301030600F800F127C9113>I<0003C0000670
000C70001C60001C00001C0000380000380000380000380000380003FF80007000007000
00700000700000700000E00000E00000E00000E00000E00001C00001C00001C00001C000
01C000038000038000038000030000030000070000C60000E60000CC0000780000142581
9C0D>I<0078C001C5C00303C00603C00E03800C03801C03801C03803807003807003807
00380700380E00380E00380E00181E000C7C00079C00001C00001C00003800003800C030
00E07000C1C0007F0000121A7E9113>I<0FC00001C00001C00003800003800003800003
80000700000700000700000700000E3E000EC3000F03800E03801E03801C03801C03801C
0380380700380700380700380E00700E40700E40701C40701C80E00C80600700121D7E9C
15>I<01800380010000000000000000000000000000001C002600470047008E008E000E
001C001C001C0038003800710071007100720072003C00091C7C9B0D>I<0FC00001C000
01C0000380000380000380000380000700000700000700000700000E07800E08800E11C0
0E21C01C41801C80001D00001E00003FC00038E000387000387000707100707100707100
707200E03200601C00121D7E9C13>107 D<1F800380038007000700070007000E000E00
0E000E001C001C001C001C0038003800380038007000700070007000E200E200E200E400
64003800091D7D9C0B>I<1C1E0780266318C04683A0E04703C0E08E0380E08E0380E00E
0380E00E0380E01C0701C01C0701C01C0701C01C070380380E0388380E0388380E070838
0E0710701C0320300C01C01D127C9122>I<383E004CC3004D03804E03809E03809C0380
1C03801C0380380700380700380700380E00700E40700E40701C40701C80E00C80600700
12127C9117>I<00F800030C000E06001C0300180300300300700380700380E00700E007
00E00700E00E00E00E00E01C0060180060300030E0000F800011127C9115>I<03878004
C86004D03004E03009C03009C03801C03801C0380380700380700380700380600700E007
00C00701800783000E86000E78000E00000E00001C00001C00001C00001C0000380000FF
0000151A809115>I<01E107130C0F180F380E300E700E700EE01CE01CE01CE01CE038E0
38E038607831F01E700070007000E000E000E000E001C00FF8101A7C9113>I<1C3C2642
468747078E068E000E000E001C001C001C001C0038003800380038007000300010127C91
12>I<01F006080C080C1C18181C001F001FC00FF007F0007800386030E030C030806060
C01F000E127D9111>I<03000700070007000E000E000E000E00FFE01C001C001C003800
3800380038007000700070007000E080E080E100E100660038000B1A7C990E>I<1C0180
2E03804E03804E03808E07008E07001C07001C0700380E00380E00380E00380E00301C80
301C80301C80383C80184D000F860011127C9116>I<1E01832703874703874703838707
018707010E07010E07011C0E021C0E021C0E021C0E04180C04181C04181C081C1E080C26
3007C3C018127C911C>119 D<1C01802E03804E03804E03808E07008E07001C07001C07
00380E00380E00380E00380E00301C00301C00301C00383C001878000FB8000038000030
00007000E06000E0C0008180004300003C0000111A7C9114>121
D E /Fb 7 116 df<FFFFFFE00000FFFFFFFE0000FFFFFFFF800003FC007FE00003FC00
0FF00003FC0007F80003FC0007FC0003FC0003FC0003FC0003FE0003FC0003FE0003FC00
03FE0003FC0003FE0003FC0003FE0003FC0003FE0003FC0003FC0003FC0007F80003FC00
07F80003FC001FE00003FC007FC00003FFFFFE000003FFFFF8000003FC00FC000003FC00
7F000003FC003F800003FC003F800003FC001FC00003FC001FE00003FC001FE00003FC00
1FE00003FC001FE00003FC001FE00003FC001FF00003FC001FF00003FC001FF00003FC00
1FF00703FC001FF80703FC000FF80703FC0007F80EFFFFF003FE1CFFFFF001FFF8FFFFF0
003FF030297DA834>82 D<003FF80000FFFE0003F01F0007E03F800FC03F801F803F803F
801F007F000E007F0000007F000000FF000000FF000000FF000000FF000000FF000000FF
000000FF0000007F0000007F0000007F8000003F8001C01F8001C00FC0038007E0070003
F01E0000FFFC00003FE0001A1B7E9A1F>99 D<003FE00001FFF80003F07E0007C01F000F
801F801F800F803F800FC07F000FC07F0007C07F0007E0FF0007E0FF0007E0FFFFFFE0FF
FFFFE0FF000000FF000000FF0000007F0000007F0000007F0000003F8000E01F8000E00F
C001C007E0038003F81F0000FFFE00001FF0001B1B7E9A20>101
D<0007F0003FFC00FE3E01F87F03F87F03F07F07F07F07F03E07F00007F00007F00007F0
0007F00007F00007F000FFFFC0FFFFC0FFFFC007F00007F00007F00007F00007F00007F0
0007F00007F00007F00007F00007F00007F00007F00007F00007F00007F00007F00007F0
0007F00007F00007F0007FFF807FFF807FFF80182A7EA915>I<FFC07F0000FFC1FFC000
FFC787E0000FCE03F0000FD803F0000FD803F8000FF003F8000FF003F8000FE003F8000F
E003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE0
03F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003
F800FFFE3FFF80FFFE3FFF80FFFE3FFF80211B7D9A26>110 D<FFC1F0FFC7FCFFCE3E0F
D87F0FD87F0FF07F0FF03E0FF01C0FE0000FE0000FE0000FE0000FE0000FE0000FE0000F
E0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE000FFFF00FFFF00FFFF0018
1B7E9A1C>114 D<03FE300FFFF01E03F03800F0700070F00070F00070F80070FE0000FF
E0007FFE007FFF803FFFE01FFFF007FFF800FFF80007FC6000FCE0007CE0003CF0003CF0
0038F80038FC0070FF01E0F7FFC0C1FF00161B7E9A1B>I E /Fc
2 106 df<00200060006000C000C000C0018001800180030003000300060006000C000C
000C00180018001800300030003000600060006000C000C000C0000B1D7E9511>61
D<06070600000000384C4C8C98181830323264643808147F930C>105
D E /Fd 1 49 df<081C1C3838383070706060C0C0060D7E8D09>48
D E /Fe 2 122 df<0F1F0011A18020C38020C300418000018000018000018000030000
030200C30200E70400C5080078F000110E7F8D14>120 D<1C02260646064606860C0C0C
0C0C0C0C18181818181818380C7007B000300060706070C021801E000F147F8D11>I
E /Ff 24 122 df<0102040C1818303070606060E0E0E0E0E0E0E0E0E0E0606060703030
18180C04020108227D980E>40 D<8040203018180C0C0E06060607070707070707070707
0606060E0C0C18183020408008227E980E>I<60F0F06004047D830A>46
D<40007FFE7FFC7FF8C008801080200040008000800100030003000200060006000E000E
000E000E000E0004000F167E9512>55 D<7FFFF860381840380840380880380480380480
380400380000380000380000380000380000380000380000380000380000380000380000
380000380000380000380003FF8016177F9619>84 D<3FC0706070302038003803F81E38
30387038E039E039E07970FF1F1E100E7F8D12>97 D<F800003800003800003800003800
0038000038000038000038000039F0003E0C003806003807003803003803803803803803
80380380380300380700380600361C0021F00011177F9614>I<07F01838303870106000
E000E000E000E000600070083008183007C00D0E7F8D10>I<003E00000E00000E00000E
00000E00000E00000E00000E00000E0007CE001C3E00300E00700E00600E00E00E00E00E
00E00E00E00E00600E00700E00301E00182E0007CF8011177F9614>I<0FC01860303070
38E018FFF8E000E000E000600070083010183007C00D0E7F8D10>I<03E006700E701C20
1C001C001C001C001C00FF801C001C001C001C001C001C001C001C001C001C001C001C00
7F800C1780960B>I<0F9E18E33060707070707070306018C02F80200060003FE03FF83F
FC600EC006C006C006600C38380FE010157F8D12>I<F800003800003800003800003800
0038000038000038000038000038F8003B1C003C0E00380E00380E00380E00380E00380E
00380E00380E00380E00380E00380E00FE3F8011177F9614>I<307878300000000000F8
383838383838383838383838FE07177F960A>I<F8383838383838383838383838383838
383838383838FE07177F960A>108 D<F8F83E003B1CC7003C0F0380380E0380380E0380
380E0380380E0380380E0380380E0380380E0380380E0380380E0380380E0380FE3F8FE0
1B0E7F8D1E>I<F8F8003B1C003C0E00380E00380E00380E00380E00380E00380E00380E
00380E00380E00380E00FE3F80110E7F8D14>I<07C018303018600C600CE00EE00EE00E
E00EE00E701C3018183007C00F0E7F8D12>I<F9F0003E1C003806003807003803003803
80380380380380380380380300380700380E003E1C0039F0003800003800003800003800
00380000FE000011147F8D14>I<F9E03A703C7038203800380038003800380038003800
38003800FF000C0E7F8D0E>114 D<1F4060C0C040C040E000FF007F801FC001E0806080
60C060E0C09F000B0E7F8D0E>I<080008000800180018003800FFC03800380038003800
38003800380038403840384038401C800F000A147F930E>I<F83E00380E00380E00380E
00380E00380E00380E00380E00380E00380E00380E00381E001C2E0007CF80110E7F8D14
>I<FE1F380E3C0C1C081C080E100E100720072007E003C003C00180018001000100E200
E200A400780010147F8D13>121 D E /Fg 1 50 df<1878981818181818181818181818
18FF08107D8F0F>49 D E /Fh 3 113 df<0000300000600000C0000180000300000700
000E00000C0000180000380000300000700000E00000C00001C000018000038000038000
0300000700000600000E00000E00000C00001C00001C00001C0000180000380000380000
380000380000700000700000700000700000700000700000700000E00000E00000E00000
E00000E00000E00000E00000E00000E00000E00000E00000E00000E00000E00000E00000
E00000E00000E00000E00000E00000E00000700000700000700000700000700000700000
7000003800003800003800003800001800001C00001C00001C00000C00000E00000E0000
06000007000003000003800003800001800001C00000C00000E000007000003000003800
001800000C00000E000007000003000001800000C0000060000030146377811F>18
D<C000006000003000001800000C00000E000007000003000001800001C00000C00000E0
00007000003000003800001800001C00001C00000C00000E000006000007000007000003
000003800003800003800001800001C00001C00001C00001C00000E00000E00000E00000
E00000E00000E00000E00000700000700000700000700000700000700000700000700000
700000700000700000700000700000700000700000700000700000700000700000700000
700000E00000E00000E00000E00000E00000E00000E00001C00001C00001C00001C00001
80000380000380000380000300000700000700000600000E00000C00001C00001C000018
0000380000300000700000E00000C00001C0000180000300000700000E00000C00001800
00300000600000C0000014637F811F>I<00000000020000000006000000000C00000000
0C00000000180000000018000000003000000000300000000060000000006000000000C0
00000000C000000001800000000180000000030000000003000000000600000000060000
00000C000000000C00000000180000000018000000003000000000300000000060000800
0060001C0000C0003C0000C000CE000180000E000180000E000300000700030000070006
0000038006000003800C000001C00C000001C018000001E018000000E030000000E03000
00007060000000706000000038C000000038C00000001D800000001D800000001F000000
000F000000000E000000000600000027327C812A>112 D E /Fi
5 56 df<0C001C00EC000C000C000C000C000C000C000C000C000C000C000C000C000C00
0C000C00FFC00A137D9211>49 D<1F0060C06060F070F030603000700070006000C001C0
0180020004000810101020207FE0FFE00C137E9211>I<0FC03070703870387038003800
3000E00FC0007000380018001C601CF01CF018E03860701FC00E137F9211>I<07C00C20
1070207060006000C000CF00D0C0E060C020C030C030C03040306020206010C00F000C13
7E9211>54 D<40007FFC7FF8401080308020004000800100010003000200060006000E00
0E000E000E000E0004000E147E9311>I E /Fj 3 113 df<FFFFFF80FFFFFF8019027D8A
20>0 D<00000030000000001800000000180000000018000000000C000000000C000000
0006000000000300000000038000000000C0FFFFFFFFF8FFFFFFFFF800000000C0000000
0380000000030000000006000000000C000000000C000000001800000000180000000018
00000000300025167E942A>33 D<000000004000000000C0000000018000000001800000
0003000000000300000000060000000006000000000C000000000C000000001800000000
18000000003000000000300000000060000000006000000000C000000000C00000000180
00000001800000000300000C000300003C000600004E000600008E000C000007000C0000
070018000003801800000380300000038030000001C060000001C060000000E0C0000000
E0C0000000718000000071800000003B000000003B000000001E000000001E000000000C
000000000C000000222A7E8123>112 D E /Fk 2 49 df<FFFFC0FFFFC012027D871A>0
D<040E0E1C1C1C38383070706060C0C0070F7F8F0A>48 D E /Fl
17 122 df<0780101FC0103FE0207FF020603040C0184080088000088000048000050000
0500000600000600000600000400000400000400000C00000C00000C0000180000180000
1800001800003000003000002000141B7F9115>13 D<01F807000C001800380030007000
7FC0E000E000E000E000E00060006000300018600F800D127E9111>15
D<007800CC0186030606060E060C061C07180738063806300E700E700E7FFEE01CE01CE0
1CE018E038C038C070C060C060C0C0C180618062003C00101D7E9C13>18
D<0180300380700380700380700700E00700E00700E00700E00E01C00E01C00E01C00E01
C01C03881C03881C03881E07883E19903BE0E03800003800007000007000007000007000
00E00000E00000C00000151B7F9119>22 D<0FFFF81FFFF83FFFF8608400418400810400
010400030C00030C00020C00060C00060C000E0C000C0C001C0E001C0E00380E00180600
15127E9118>25 D<60F0F06004047C830C>58 D<60F0F0701010101020204080040C7C83
0C>I<00010003000600060006000C000C000C0018001800180030003000300060006000
C000C000C0018001800180030003000300060006000C000C000C00180018001800300030
003000600060006000C000C00010297E9E15>61 D<00000C0000000C0000001C0000001C
0000003C0000005C0000005C0000009E0000008E0000010E0000020E0000020E0000040E
0000040E0000080E0000100E0000100E0000200700003FFF000040070000800700008007
0001000700010007000200070004000700040007001C000780FF803FF01C1D7F9C1F>65
D<01FFFF00003C01C0003800E0003800F0003800700038007000700070007000F0007000
F0007001E000E003C000E0078000E01F0000FFFC0001C00F0001C0078001C003C001C003
C0038003C0038003C0038003C0038003C0070007800700070007000E0007001C000E0078
00FFFFC0001C1C7E9B1F>I<01FE0000FF003E0000F0002E0001E0002E0002E0002E0002
E0002E0004E0004E0009C0004E0009C000470011C000470011C000870023800087004380
0087004380008700838001070107000107010700010382070001038207000203840E0002
03880E000203880E000203900E000403A01C000403A01C000401C01C000C01C01C001C01
803C00FF8103FF80281C7E9B28>77 D<0003F800000E0E000038038000E001C001C001C0
038000E0070000E00F0000F01E0000F01C0000F03C0000F03C0000F0780000F0780000F0
780000F0F00001E0F00001E0F00001E0F00003C0F00003C0F0000780F0000780F0000F00
70000E0070001C00380038003C0070001C01C0000707800001FC00001C1E7E9C20>79
D<0003F800000E0E000038038000E001C001C001C0038000E0070000E00F0000F01E0000
F01C0000F03C0000F03C0000F0780000F0780000F0780000F0F00001E0F00001E0F00001
E0F00003C0F00003C0F0000380F0000780F0000F00703C0E0070421C0038823800388270
001C83C0000787810001FF0100000303000003020000038E000003FC000003F8000001F8
000001E0001C257E9C21>81 D<01FFFE00003C03C0003800E0003800F000380070003800
70007000F0007000F0007000F0007001E000E001C000E0078000E01E0000FFF00001C038
0001C00C0001C00E0001C00E0003800E0003800E0003800E0003800E0007001E0007001E
0807001E0807001E100F000F10FFE00F20000003C01D1D7E9B20>I<1FFFFFF01C038070
30070030200700206007002040070020400E0020800E0020800E0020000E0000001C0000
001C0000001C0000001C0000003800000038000000380000003800000070000000700000
007000000070000000E0000000E0000000E0000000E0000001E000007FFF00001C1C7F9B
18>84 D<07878008C84010F0C020F1E020E3C040E18000E00000E00001C00001C00001C0
0001C000638080F38080F38100E5810084C60078780013127E9118>120
D<1C00C02701C04701C04701C08703808703800E03800E03801C07001C07001C07001C07
00180E00180E00180E001C1E000C3C0007DC00001C00001800603800F03000F06000E0C0
004180003E0000121A7E9114>I E /Fm 74 128 df<007E1F0001C1B1800303E3C00703
C3C00E03C1800E01C0000E01C0000E01C0000E01C0000E01C0000E01C000FFFFFC000E01
C0000E01C0000E01C0000E01C0000E01C0000E01C0000E01C0000E01C0000E01C0000E01
C0000E01C0000E01C0000E01C0000E01C0000E01C0000E01C0007F87FC001A1D809C18>
11 D<007E0001C1800301800703C00E03C00E01800E00000E00000E00000E00000E0000
FFFFC00E01C00E01C00E01C00E01C00E01C00E01C00E01C00E01C00E01C00E01C00E01C0
0E01C00E01C00E01C00E01C00E01C07F87F8151D809C17>I<007FC001C1C00303C00703
C00E01C00E01C00E01C00E01C00E01C00E01C00E01C0FFFFC00E01C00E01C00E01C00E01
C00E01C00E01C00E01C00E01C00E01C00E01C00E01C00E01C00E01C00E01C00E01C00E01
C07FCFF8151D809C17>I<60F0F8680808081010204080050C7C9C0C>39
D<00800100020006000C000C00180018003000300030006000600060006000E000E000E0
00E000E000E000E000E000E000E000E000E0006000600060006000300030003000180018
000C000C000600020001000080092A7C9E10>I<8000400020003000180018000C000C00
060006000600030003000300030003800380038003800380038003800380038003800380
038003000300030003000600060006000C000C00180018003000200040008000092A7E9E
10>I<000600000006000000060000000600000006000000060000000600000006000000
06000000060000000600000006000000060000FFFFFFE0FFFFFFE0000600000006000000
060000000600000006000000060000000600000006000000060000000600000006000000
060000000600001B1C7E9720>43 D<60F0F0701010101020204080040C7C830C>I<FFE0
FFE00B0280890E>I<60F0F06004047C830C>I<03C00C301818300C300C700E60066006E0
07E007E007E007E007E007E007E007E007E007E007E007E00760066006700E300C300C18
180C3007E0101D7E9B15>48 D<010007003F00C700070007000700070007000700070007
00070007000700070007000700070007000700070007000700070007000700FFF80D1C7C
9B15>I<07C01830201C400C400EF00FF80FF807F8077007000F000E000E001C001C0038
0070006000C00180030006010C01180110023FFE7FFEFFFE101C7E9B15>I<07E0183020
1C201C781E780E781E381E001C001C00180030006007C00030001C001C000E000F000F70
0FF80FF80FF80FF00E401C201C183007C0101D7E9B15>I<000C00000C00001C00003C00
003C00005C0000DC00009C00011C00031C00021C00041C000C1C00081C00101C00301C00
201C00401C00C01C00FFFFC0001C00001C00001C00001C00001C00001C00001C0001FFC0
121C7F9B15>I<300C3FF83FF03FC020002000200020002000200023E02C303018301C20
0E000E000F000F000F600FF00FF00FF00F800E401E401C2038187007C0101D7E9B15>I<
00F0030C04040C0E181E301E300C700070006000E3E0E430E818F00CF00EE006E007E007
E007E007E007600760077006300E300C18180C3003E0101D7E9B15>I<4000007FFF807F
FF007FFF0040020080040080040080080000100000100000200000600000400000C00000
C00001C00001800001800003800003800003800003800007800007800007800007800007
8000078000030000111D7E9B15>I<03E00C301008200C200660066006700670067C0C3E
183FB01FE007F007F818FC307E601E600FC007C003C003C003C00360026004300C1C1007
E0101D7E9B15>I<03C00C301818300C700C600EE006E006E007E007E007E007E0076007
700F300F18170C2707C700060006000E300C780C78187018203010C00F80101D7E9B15>
I<60F0F0600000000000000000000060F0F06004127C910C>I<7FFFFFC0FFFFFFE00000
000000000000000000000000000000000000000000000000000000000000FFFFFFE07FFF
FFC01B0C7E8F20>61 D<000600000006000000060000000F0000000F0000000F00000017
8000001780000037C0000023C0000023C0000043E0000041E0000041E0000080F0000080
F0000080F000010078000100780001FFF80002003C0002003C0002003C0004001E000400
1E000C001F000C000F001E001F00FF00FFF01C1D7F9C1F>65 D<FFFFC0000F0078000F00
3C000F001E000F000E000F000F000F000F000F000F000F000F000F000E000F001E000F00
3C000F00F8000FFFF0000F003C000F001E000F000F000F0007000F0007800F0007800F00
07800F0007800F0007800F000F000F000F000F001E000F007800FFFFE000191C7F9B1D>
I<001F808000E0618001801980070007800E0003801C0003801C00018038000180780000
807800008070000080F0000000F0000000F0000000F0000000F0000000F0000000F00000
00F0000000700000807800008078000080380000801C0001001C0001000E000200070004
000180080000E03000001FC000191E7E9C1E>I<FFFFC0000F00F0000F003C000F000E00
0F0007000F0007000F0003800F0003C00F0001C00F0001C00F0001E00F0001E00F0001E0
0F0001E00F0001E00F0001E00F0001E00F0001E00F0001C00F0001C00F0003C00F000380
0F0007800F0007000F000E000F001C000F007000FFFFC0001B1C7E9B20>I<FFFFFC0F00
3C0F000C0F00040F00040F00060F00020F00020F01020F01000F01000F01000F03000FFF
000F03000F01000F01000F01000F01010F00010F00020F00020F00020F00060F00060F00
0C0F003CFFFFFC181C7E9B1C>I<FFFFF80F00780F00180F00080F00080F000C0F00040F
00040F01040F01000F01000F01000F03000FFF000F03000F01000F01000F01000F01000F
00000F00000F00000F00000F00000F00000F00000F0000FFF800161C7E9B1B>I<FFF0FF
F00F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F
000F000F000F000F000F000F000FFFFF000F000F000F000F000F000F000F000F000F000F
000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F00FFF0FF
F01C1C7F9B1F>72 D<FFF00F000F000F000F000F000F000F000F000F000F000F000F000F
000F000F000F000F000F000F000F000F000F000F000F000F000F00FFF00C1C7F9B0F>I<
07FF80007C00003C00003C00003C00003C00003C00003C00003C00003C00003C00003C00
003C00003C00003C00003C00003C00003C00003C00003C00003C00703C00F83C00F83C00
F8380070780040700030E0000F8000111D7F9B15>I<FFF01FE00F0007800F0006000F00
04000F0008000F0010000F0020000F0040000F0080000F0100000F0200000F0600000F0F
00000F1780000F2780000F43C0000F81E0000F01E0000F00F0000F0078000F0078000F00
3C000F003E000F001E000F000F000F000F800F000FC0FFF03FF01C1C7F9B20>I<FFF800
0F80000F00000F00000F00000F00000F00000F00000F00000F00000F00000F00000F0000
0F00000F00000F00000F00000F00000F00080F00080F00080F00180F00180F00100F0030
0F00700F01F0FFFFF0151C7E9B1A>I<FF8000FF800F8000F8000F8000F8000BC0017800
0BC00178000BC001780009E002780009E002780008F004780008F004780008F004780008
7808780008780878000878087800083C107800083C107800083C107800081E207800081E
207800081E207800080F407800080F407800080780780008078078000807807800080300
78001C03007800FF8307FF80211C7E9B26>I<FF001FF00F8003800FC001000BC0010009
E0010008F0010008F0010008780100083C0100083E0100081E0100080F0100080F810008
0781000803C1000801E1000801F1000800F1000800790008007D0008003D0008001F0008
001F0008000F0008000700080003001C000300FF8001001C1C7F9B1F>I<003F800000E0
E0000380380007001C000E000E001C0007003C00078038000380780003C0780003C07000
01C0F00001E0F00001E0F00001E0F00001E0F00001E0F00001E0F00001E0F00001E07000
01C0780003C0780003C0380003803C0007801C0007000E000E0007001C000380380000E0
E000003F80001B1E7E9C20>I<FFFF800F00E00F00780F003C0F001C0F001E0F001E0F00
1E0F001E0F001E0F001C0F003C0F00780F00E00FFF800F00000F00000F00000F00000F00
000F00000F00000F00000F00000F00000F00000F0000FFF000171C7E9B1C>I<FFFF0000
0F01E0000F0078000F003C000F001C000F001E000F001E000F001E000F001E000F001C00
0F003C000F0078000F01E0000FFF00000F01E0000F0070000F0078000F003C000F003C00
0F003C000F003C000F003C000F003C000F003C100F003C100F001C100F001C10FFF00E20
000003C01C1D7E9B1F>82 D<07E0801C1980300580300380600180E00180E00080E00080
E00080F00000F800007C00007FC0003FF8001FFE0007FF0000FF80000F800007C00003C0
0001C08001C08001C08001C0C00180C00180E00300D00200CC0C0083F800121E7E9C17>
I<7FFFFFC0700F01C0600F00C0400F0040400F0040C00F0020800F0020800F0020800F00
20000F0000000F0000000F0000000F0000000F0000000F0000000F0000000F0000000F00
00000F0000000F0000000F0000000F0000000F0000000F0000000F0000000F0000001F80
0003FFFC001B1C7F9B1E>I<FFF01FF00F0003800F0001000F0001000F0001000F000100
0F0001000F0001000F0001000F0001000F0001000F0001000F0001000F0001000F000100
0F0001000F0001000F0001000F0001000F0001000F0001000F0001000700020007800200
0380040001C0040000E0180000706000000F80001C1D7F9B1F>I<FFE00FF01F0003C01F
0001800F0001000F000100078002000780020007C0020003C0040003C0040003E00C0001
E0080001E0080000F0100000F0100000F810000078200000782000003C4000003C400000
3C4000001E8000001E8000001F8000000F0000000F00000006000000060000000600001C
1D7F9B1F>I<FFE1FFC0FF1F003E003C1E003C00180F001E00100F001E00100F001E0010
07801F002007801F002007801F002003C027804003C027804003C027804001E043C08001
E043C08001E043C08000F081E10000F081E10000F081E10000F900F300007900F2000079
00F200007E007E00003E007C00003E007C00003C003C00001C003800001C003800001800
18000008001000281D7F9B2B>I<FFF003FC0F8001E0078000C007C0008003C0010003E0
030001E0020000F0040000F8040000780800007C1800003C1000003E2000001F2000000F
4000000FC000000780000007800000078000000780000007800000078000000780000007
8000000780000007800000078000007FF8001E1C809B1F>89 D<FEFEC0C0C0C0C0C0C0C0
C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0FEFE07297C9E0C
>91 D<FEFE06060606060606060606060606060606060606060606060606060606060606
060606060606FEFE0729809E0C>93 D<1FC000307000783800781C00301C00001C00001C
0001FC000F1C00381C00701C00601C00E01C40E01C40E01C40603C40304E801F87001212
7E9115>97 D<FC00001C00001C00001C00001C00001C00001C00001C00001C00001C0000
1C00001C7C001D87001E01801C00C01C00E01C00601C00701C00701C00701C00701C0070
1C00701C00601C00E01C00C01E018019070010FC00141D7F9C17>I<03F80C0C181E301E
700C6000E000E000E000E000E000E00060007002300218040C1803E00F127F9112>I<00
1F8000038000038000038000038000038000038000038000038000038000038003F3800E
0B80180780300380700380600380E00380E00380E00380E00380E00380E0038060038070
03803003801807800E1B8003E3F0141D7F9C17>I<07E00C301818300C700E6006E006FF
FEE000E000E000E00060007002300218040C1803E00F127F9112>I<00F8018C071E061E
0E0C0E000E000E000E000E000E00FFE00E000E000E000E000E000E000E000E000E000E00
0E000E000E000E000E000E007FE00F1D809C0D>I<00038007C4C01C78C0383880301800
701C00701C00701C00701C003018003838001C700027C0002000002000003000003FF800
1FFF001FFF802003806001C0C000C0C000C0C000C06001803003001C0E0007F800121C7F
9215>I<FC00001C00001C00001C00001C00001C00001C00001C00001C00001C00001C00
001C7C001C87001D03001E03801C03801C03801C03801C03801C03801C03801C03801C03
801C03801C03801C03801C03801C0380FF9FF0141D7F9C17>I<18003C003C0018000000
000000000000000000000000FC001C001C001C001C001C001C001C001C001C001C001C00
1C001C001C001C001C00FF80091D7F9C0C>I<00C001E001E000C0000000000000000000
000000000007E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000
E000E000E000E000E000E060E0F0C0F1C061803E000B25839C0D>I<FC00001C00001C00
001C00001C00001C00001C00001C00001C00001C00001C00001C0FE01C07801C06001C0C
001C10001C20001C40001CE0001DE0001E70001C78001C38001C3C001C1C001C0E001C0F
001C0F80FF9FE0131D7F9C16>I<FC001C001C001C001C001C001C001C001C001C001C00
1C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C00FF80
091D7F9C0C>I<FC7E07E0001C838838001D019018001E01E01C001C01C01C001C01C01C
001C01C01C001C01C01C001C01C01C001C01C01C001C01C01C001C01C01C001C01C01C00
1C01C01C001C01C01C001C01C01C001C01C01C00FF8FF8FF8021127F9124>I<FC7C001C
87001D03001E03801C03801C03801C03801C03801C03801C03801C03801C03801C03801C
03801C03801C03801C0380FF9FF014127F9117>I<03F0000E1C00180600300300700380
600180E001C0E001C0E001C0E001C0E001C0E001C06001807003803003001806000E1C00
03F00012127F9115>I<FC7C001D87001E01801C01C01C00E01C00E01C00701C00701C00
701C00701C00701C00701C00E01C00E01C01C01E01801D07001CFC001C00001C00001C00
001C00001C00001C00001C0000FF8000141A7F9117>I<03E0800E198018058038078070
0380700380E00380E00380E00380E00380E00380E003807003807003803807801807800E
1B8003E380000380000380000380000380000380000380000380001FF0141A7F9116>I<
FCE01D381E781E781C301C001C001C001C001C001C001C001C001C001C001C001C00FFC0
0D127F9110>I<1F9020704030C010C010E010F8007F803FE00FF000F880388018C018C0
18E010D0608FC00D127F9110>I<04000400040004000C000C001C003C00FFE01C001C00
1C001C001C001C001C001C001C001C101C101C101C101C100C100E2003C00C1A7F9910>
I<FC1F801C03801C03801C03801C03801C03801C03801C03801C03801C03801C03801C03
801C03801C03801C07800C07800E1B8003E3F014127F9117>I<FF07E03C03801C01001C
01000E02000E02000F060007040007040003880003880003C80001D00001D00000E00000
E00000E00000400013127F9116>I<FF3FC7E03C0703C01C0701801C0701001C0B01000E
0B82000E0B82000E1182000711C4000711C4000720C40003A0E80003A0E80003C0680001
C0700001C0700001803000008020001B127F911E>I<FF0FE01E07001C06000E04000708
0003900003B00001E00000E00000F00001F000013800021C00041C000C0E001807003C07
80FE1FF014127F9116>I<FF07E03C03801C01001C01000E02000E02000F060007040007
040003880003880003C80001D00001D00000E00000E00000E00000400000400000800000
8000F08000F10000F30000660000380000131A7F9116>I<7FFC70386038407040F040E0
41C003C0038007000F040E041C043C0C380870087038FFF80E127F9112>I<FFFFF01401
808B15>I<6060F0F0F0F060600C047C9C15>127 D E /Fn 20 117
df<03F8000F1E001C07003C07803803807803C07803C07803C0F803E0F803E0F803E0F8
03E0F803E0F803E0F803E0F803E0F803E0F803E0F803E0F803E07803C07803C03803803C
07801C07000F1E0003F800131B7E9A18>48 D<00600001E0000FE000FFE000F3E00003E0
0003E00003E00003E00003E00003E00003E00003E00003E00003E00003E00003E00003E0
0003E00003E00003E00003E00003E00003E00003E0007FFF807FFF80111B7D9A18>I<07
F8001FFE00383F80780FC0FC07C0FC07E0FC03E0FC03E07803E00007E00007C00007C000
0F80001F00001E0000380000700000E0000180600300600600600800E01FFFC03FFFC07F
FFC0FFFFC0FFFFC0131B7E9A18>I<07F8001FFE003C1F003C0F807C07C07E07C07C07C0
3807C0000F80000F80001E00003C0003F800001E00000F800007C00007C00007E03007E0
7807E0FC07E0FC07E0FC07C0780F80781F001FFE0007F800131B7E9A18>I<0001800003
80000780000F80001F80003F80006F8000CF80008F80018F80030F80060F800C0F80180F
80300F80600F80C00F80FFFFF8FFFFF8000F80000F80000F80000F80000F80000F8000FF
F800FFF8151B7F9A18>I<3801803FFF003FFE003FFC003FF8003FC00030000030000030
000030000031F800361E00380F803007800007C00007E00007E00007E07807E0F807E0F8
07E0F807C0F007C0600F80381F001FFE0007F000131B7E9A18>I<007E0003FF00078180
0F03C01E07C03C07C07C0380780000780000F80000F8F800FB0E00FA0780FC0380FC03C0
F803E0F803E0F803E0F803E07803E07803E07803C03C03C03C07801E0F0007FE0003F800
131B7E9A18>I<6000007FFFE07FFFE07FFFC07FFF807FFF80E00300C00600C00C00C018
0000300000300000600000E00000E00001E00001C00003C00003C00003C00003C00007C0
0007C00007C00007C00007C00007C000038000131C7D9B18>I<03F8000FFE001E0F8038
07803803C07803C07C03C07E03C07F83803FC7003FFE001FFC000FFE0007FF001DFF8038
7FC0781FE0700FE0F003E0F001E0F001E0F001E07801C07803803E07801FFE0003F80013
1B7E9A18>I<03F8000FFE001E0F003C07807807807803C0F803C0F803C0F803E0F803E0
F803E0F803E07807E03807E03C0BE00E1BE003E3E00003E00003C00003C03807C07C0780
7C0700780F00383C001FF8000FE000131B7E9A18>I<FFFFF800FFFFFE000FC03F800FC0
0F800FC007C00FC007E00FC007E00FC007E00FC007E00FC007E00FC007C00FC007C00FC0
0F800FC03F000FFFFC000FC000000FC000000FC000000FC000000FC000000FC000000FC0
00000FC000000FC000000FC000000FC00000FFFC0000FFFC00001B1C7E9B21>80
D<7FFFFFE07FFFFFE0781F81E0701F80E0601F8060E01F8070C01F8030C01F8030C01F80
30C01F8030001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F80
00001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F800007FFFE
0007FFFE001C1C7E9B21>84 D<FF0000FF00001F00001F00001F00001F00001F00001F00
001F00001F00001F00001F3F801FE1E01F80701F00781F003C1F003C1F003E1F003E1F00
3E1F003E1F003E1F003E1F003C1F003C1F00781F80701EC1E01C3F00171D7F9C1B>98
D<03FC000F07001C03803C01C07801C07801E0F801E0F801E0FFFFE0F80000F80000F800
007800007800603C00601E00C00F038001FC0013127F9116>101
D<FF00FF001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F
001F001F001F001F001F001F001F001F001F00FFE0FFE00B1D7F9C0E>108
D<FF0FC07E00FF31E18F001F40F207801F80FC07C01F80FC07C01F00F807C01F00F807C0
1F00F807C01F00F807C01F00F807C01F00F807C01F00F807C01F00F807C01F00F807C01F
00F807C01F00F807C0FFE7FF3FF8FFE7FF3FF825127F9128>I<01FC000F07801C01C03C
01E07800F07800F0F800F8F800F8F800F8F800F8F800F8F800F87800F07800F03C01E01E
03C00F078001FC0015127F9118>111 D<FE3E00FE47001E8F801E8F801E8F801F07001F
00001F00001F00001F00001F00001F00001F00001F00001F00001F0000FFE000FFE00011
127F9114>114 D<1FD830786018E018E018F000FF807FE07FF01FF807FC007CC01CC01C
E01CE018F830CFC00E127E9113>I<0300030003000300070007000F000F003FFCFFFC1F
001F001F001F001F001F001F001F001F001F0C1F0C1F0C1F0C0F08079803F00E1A7F9913
>I E end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 300dpi
TeXDict begin
%%PaperSize: A4

%%EndSetup
%%Page: 1 1
1 0 bop 262 307 a Fn(T)l(est)15 b(Problem)e(1)h Fm(\(Linear\))g([6,)f
(p.14])262 357 y Fl(\017y)300 342 y Fk(00)331 357 y Fj(\000)c
Fl(y)14 b Fm(=)d(0,)60 b Fl(y)q Fm(\(0\))12 b(=)g(1)p
Fl(;)18 b(y)q Fm(\(1\))12 b(=)g(0.)262 407 y(Exact)i(solution)f(is)h
Fl(y)q Fm(\()p Fl(x)p Fm(\))e(=)g(\(exp\()p Fj(\000)p
Fl(x=)885 377 y Fj(p)p 920 377 17 2 v 30 x Fl(\017)p
Fm(\))d Fj(\000)h Fm(exp\(\()p Fl(x)f Fj(\000)h Fm(2\))p
Fl(=)1232 377 y Fj(p)p 1266 377 V 1266 407 a Fl(\017)p
Fm(\)\))p Fl(=)p Fm(\(1)f Fj(\000)h Fm(exp\()p Fj(\000)p
Fm(2)p Fl(=)1577 377 y Fj(p)p 1612 377 V 30 x Fl(\017)o
Fm(\)\).)262 457 y(The)k(solution)f(has)h(a)g(b)q(oundary)f(la)o(y)o
(er)h(of)f(width)h Fl(O)q Fm(\()1114 427 y Fj(p)p 1148
427 V 1148 457 a Fl(\017)p Fm(\))g(at)g Fl(x)d Fm(=)h(0.)439
1762 y @beginspecial 72 @llx 72 @lly 540 @urx 720 @ury
2834 @rwi @setspecial
%%BeginDocument: ../PLOTS/pr1.ps

/Mathdict 150 dict def
Mathdict begin
/Mlmarg		1.0 72 mul def
/Mrmarg		1.0 72 mul def
/Mbmarg		1.0 72 mul def
/Mtmarg		1.0 72 mul def
/Mwidth		8.5 72 mul def
/Mheight	11 72 mul def
/Mtransform	{  } bind def
/Mnodistort	true def
/Mfixwid	true	def
/Mfixdash	false def
/Mrot		0	def
/Mpstart {
MathPictureStart
} bind def
/Mpend {
MathPictureEnd
} bind def
/Mscale {
0 1 0 1
5 -1 roll
MathScale
} bind def
/ISOLatin1Encoding dup where
{ pop pop }
{
[
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft
/logicalnot /hyphen /registered /macron
/degree /plusminus /twosuperior /threesuperior
/acute /mu /paragraph /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright
/onequarter /onehalf /threequarters /questiondown
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis
] def
} ifelse
/MFontDict 50 dict def
/MStrCat
{
exch
dup length
2 index length add
string
dup 3 1 roll
copy
length
exch dup
4 2 roll exch
putinterval
} def
/MCreateEncoding
{
1 index
255 string cvs
(-) MStrCat
1 index MStrCat
cvn exch
(Encoding) MStrCat
cvn dup where
{
exch get
}
{
pop
StandardEncoding
} ifelse
3 1 roll
dup MFontDict exch known not
{
1 index findfont
dup length dict
begin
{1 index /FID ne
{def}
{pop pop}
ifelse} forall
/Encoding 3 index
def
currentdict
end
1 index exch definefont pop
MFontDict 1 index
null put
}
if
exch pop
exch pop
} def
/ISOLatin1 { (ISOLatin1) MCreateEncoding } def
/ISO8859 { (ISOLatin1) MCreateEncoding } def
/Mcopyfont {
dup
maxlength
dict
exch
{
1 index
/FID
eq
{
pop pop
}
{
2 index
3 1 roll
put
}
ifelse
}
forall
} def
/Plain	/Courier findfont Mcopyfont definefont pop
/Bold	/Courier-Bold findfont Mcopyfont definefont pop
/Italic /Courier-Oblique findfont Mcopyfont definefont pop
/MathPictureStart {
gsave
Mtransform
Mlmarg
Mbmarg
translate
Mwidth
Mlmarg Mrmarg add
sub
/Mwidth exch def
Mheight
Mbmarg Mtmarg add
sub
/Mheight exch def
/Mtmatrix
matrix currentmatrix
def
/Mgmatrix
matrix currentmatrix
def
} bind def
/MathPictureEnd {
grestore
} bind def
/MFill {
0 0 		moveto
Mwidth 0 	lineto
Mwidth Mheight 	lineto
0 Mheight 	lineto
fill
} bind def
/MPlotRegion {
3 index
Mwidth mul
2 index
Mheight mul
translate
exch sub
Mheight mul
/Mheight
exch def
exch sub
Mwidth mul
/Mwidth
exch def
} bind def
/MathSubStart {
Momatrix
Mgmatrix Mtmatrix
Mwidth Mheight
7 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
Mgmatrix setmatrix
9 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
2 copy translate
/Mtmatrix matrix currentmatrix def
3 -1 roll
exch sub
/Mheight exch def
sub
/Mwidth exch def
} bind def
/MathSubEnd {
/Mheight exch def
/Mwidth exch def
/Mtmatrix exch def
dup setmatrix
/Mgmatrix exch def
/Momatrix exch def
} bind def
/Mdot {
moveto
0 0 rlineto
stroke
} bind def
/Mtetra {
moveto
lineto
lineto
lineto
fill
} bind def
/Metetra {
moveto
lineto
lineto
lineto
closepath
gsave
fill
grestore
0 setgray
stroke
} bind def
/Mistroke {
flattenpath
0 0 0
{
4 2 roll
pop pop
}
{
4 -1 roll
2 index
sub dup mul
4 -1 roll
2 index
sub dup mul
add sqrt
4 -1 roll
add
3 1 roll
}
{
stop
}
{
stop
}
pathforall
pop pop
currentpoint
stroke
moveto
currentdash
3 -1 roll
add
setdash
} bind def
/Mfstroke {
stroke
currentdash
pop 0
setdash
} bind def
/Mrotsboxa {
gsave
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
grestore
Msboxa
3  -1 roll
/Mtmatrix
exch def
/Mrot
0 def
} bind def
/Msboxa {
newpath
5 -1 roll
Mvboxa
pop
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Msboxa1
5 -3 roll
Msboxa1
Mboxrot
[
7 -2 roll
2 copy
[
3 1 roll
10 -1 roll
9 -1 roll
]
6 1 roll
5 -2 roll
]
} bind def
/Msboxa1 {
sub
2 div
dup
2 index
1 add
mul
3 -1 roll
-1 add
3 -1 roll
mul
} bind def
/Mvboxa	{
Mfixwid
{
Mvboxa1
}
{
dup
Mwidthcal
0 exch
{
add
}
forall
exch
Mvboxa1
4 index
7 -1 roll
add
4 -1 roll
pop
3 1 roll
}
ifelse
} bind def
/Mvboxa1 {
gsave
newpath
[ true
3 -1 roll
{
Mbbox
5 -1 roll
{
0
5 1 roll
}
{
7 -1 roll
exch sub
(m) stringwidth pop
.3 mul
sub
7 1 roll
6 -1 roll
4 -1 roll
Mmin
3 -1 roll
5 index
add
5 -1 roll
4 -1 roll
Mmax
4 -1 roll
}
ifelse
false
}
forall
{ stop } if
counttomark
1 add
4 roll
]
grestore
} bind def
/Mbbox {
1 dict begin
0 0 moveto
/temp (T) def
{	gsave
currentpoint newpath moveto
temp 0 3 -1 roll put temp
false charpath flattenpath currentpoint
pathbbox
grestore moveto lineto moveto} forall
pathbbox
newpath
end
} bind def
/Mmin {
2 copy
gt
{ exch } if
pop
} bind def
/Mmax {
2 copy
lt
{ exch } if
pop
} bind def
/Mrotshowa {
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
Mgmatrix setmatrix
Mshowa
/Mtmatrix
exch def
/Mrot 0 def
} bind def
/Mshowa {
4 -2 roll
moveto
2 index
Mtmatrix setmatrix
Mvboxa
7 1 roll
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Mshowa1
4 1 roll
Mshowa1
rmoveto
currentpoint
Mfixwid
{
Mshowax
}
{
Mshoway
}
ifelse
pop pop pop pop
Mgmatrix setmatrix
} bind def
/Mshowax {	
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
Mfixdash
{
Mfixdashp		
}
if
show
} for
} bind def
/Mfixdashp {
dup
length
1
gt
1 index
true exch
{
45
eq
and
} forall
and
{
gsave
(--)		
stringwidth pop
(-)
stringwidth pop
sub
2 div
0 rmoveto
dup
length
1 sub
{
(-)
show
}
repeat
grestore
}
if
} bind def	
/Mshoway {
3 index
Mwidthcal
5 1 roll
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
[
6 index
aload
length
2 add
-1 roll
{
pop
Strform
stringwidth
pop
neg 
exch
add
0 rmoveto
}
exch
kshow
cleartomark
} for
pop	
} bind def
/Mwidthcal {
[
exch
{
Mwidthcal1
}
forall
]
[
exch
dup
Maxlen
-1 add
0 1
3 -1 roll
{
[
exch
2 index
{		 
1 index	
Mget
exch
}
forall		
pop
Maxget
exch
}
for
pop
]
Mreva
} bind def
/Mreva	{
[
exch
aload
length
-1 1
{1 roll}
for
]
} bind def
/Mget	{
1 index
length
-1 add
1 index
ge
{
get
}
{
pop pop
0
}
ifelse
} bind def
/Maxlen	{
[
exch
{
length
}
forall
Maxget
} bind def
/Maxget	{
counttomark
-1 add
1 1
3 -1 roll
{
pop
Mmax
}
for
exch
pop
} bind def
/Mwidthcal1 {
[
exch
{
Strform
stringwidth
pop
}
forall
]
} bind def
/Strform {
/tem (x) def
tem 0
3 -1 roll
put
tem
} bind def
/Mshowa1 {
2 copy
add
4 1 roll
sub
mul
sub
-2 div
} bind def
/MathScale {
Mwidth
Mheight
Mlp
translate
scale
/yscale exch def
/ybias exch def
/xscale exch def
/xbias exch def
/Momatrix
xscale yscale matrix scale
xbias ybias matrix translate
matrix concatmatrix def
/Mgmatrix
matrix currentmatrix
def
} bind def
/Mlp {
3 copy
Mlpfirst
{
Mnodistort
{
Mmin
dup
} if
4 index
2 index
2 index
Mlprun
11 index
11 -1 roll
10 -4 roll
Mlp1
8 index
9 -5 roll
Mlp1
4 -1 roll
and
{ exit } if
3 -1 roll
pop pop
} loop
exch
3 1 roll
7 -3 roll
pop pop pop
} bind def
/Mlpfirst {
3 -1 roll
dup length
2 copy
-2 add
get
aload
pop pop pop
4 -2 roll
-1 add
get
aload
pop pop pop
6 -1 roll
3 -1 roll
5 -1 roll
sub
div
4 1 roll
exch sub
div
} bind def
/Mlprun {
2 copy
4 index
0 get
dup
4 1 roll
Mlprun1
3 copy
8 -2 roll
9 -1 roll
{
3 copy
Mlprun1
3 copy
11 -3 roll
/gt Mlpminmax
8 3 roll
11 -3 roll
/lt Mlpminmax
8 3 roll
} forall
pop pop pop pop
3 1 roll
pop pop
aload pop
5 -1 roll
aload pop
exch
6 -1 roll
Mlprun2
8 2 roll
4 -1 roll
Mlprun2
6 2 roll
3 -1 roll
Mlprun2
4 2 roll
exch
Mlprun2
6 2 roll
} bind def
/Mlprun1 {
aload pop
exch
6 -1 roll
5 -1 roll
mul add
4 -2 roll
mul
3 -1 roll
add
} bind def
/Mlprun2 {
2 copy
add 2 div
3 1 roll
exch sub
} bind def
/Mlpminmax {
cvx
2 index
6 index
2 index
exec
{
7 -3 roll
4 -1 roll
} if
1 index
5 index
3 -1 roll
exec
{
4 1 roll
pop
5 -1 roll
aload
pop pop
4 -1 roll
aload pop
[
8 -2 roll
pop
5 -2 roll
pop
6 -2 roll
pop
5 -1 roll
]
4 1 roll
pop
}
{
pop pop pop
} ifelse
} bind def
/Mlp1 {
5 index
3 index	sub
5 index
2 index mul
1 index
le
1 index
0 le
or
dup
not
{
1 index
3 index	div
.99999 mul
8 -1 roll
pop
7 1 roll
}
if
8 -1 roll
2 div
7 -2 roll
pop sub
5 index
6 -3 roll
pop pop
mul sub
exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
outflag
1
eq
{
/outflag 0 def
/intop 0 def
/inrht 0 def
} if		
5 index
gsave
Mtmatrix setmatrix
Mvboxa pop
grestore
3 -1 roll
pop
dup
intop
gt
{
/intop
exch def
}
{ pop }
ifelse
dup
inrht
gt
{
/inrht
exch def
}
{ pop }
ifelse
pop
/inflag
1 def
} bind def
/Mouter {
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
inflag
1 eq
{
dup
0 lt
{
dup
intop
mul
neg
/yadtop
exch def
} if
dup
0 gt
{
dup
intop
mul
/yadbot
exch def
}
if
pop
dup
0 lt
{
dup
inrht
mul
neg
/xadrht
exch def
} if
dup
0 gt
{
dup
inrht
mul
/xadlft
exch def
} if
pop
/outflag 1 def
}
{ pop pop}
ifelse
/inflag 0 def
/inrht 0 def
/intop 0 def
} bind def	
/Mboxout {
outflag
1
eq
{
4 -1
roll
xadlft
leadjust
add
sub
4 1 roll
3 -1
roll
yadbot
leadjust
add
sub
3 1
roll
exch
xadrht
leadjust
add
add
exch
yadtop
leadjust
add
add
/outflag 0 def
/xadlft 0 def
/yadbot 0 def
/xadrht 0 def
/yadtop 0 def
} if
} bind def
/leadjust {
(m) stringwidth pop
.5 mul
} bind def
/Mrotcheck {
dup
90
eq
{
yadbot
/yadbot
xadrht
def	
/xadrht
yadtop
def
/yadtop
xadlft
def
/xadlft
exch
def
}
if
dup
cos
1 index
sin
Checkaux
dup
cos
1 index
sin neg
exch
Checkaux
3 1 roll
pop pop
} bind def
/Checkaux {
4 index
exch
4 index
mul
3 1 roll
mul add
4 1 roll
} bind def
/Mboxrot {
Mrot
90 eq
{
brotaux
4 2
roll
}
if
Mrot
180 eq
{
4 2
roll
brotaux
4 2
roll
brotaux
}	
if
Mrot
270 eq
{
4 2
roll
brotaux
}
if
} bind def
/brotaux {
neg
exch
neg
} bind def
/Mabsproc {
0
matrix defaultmatrix
dtransform idtransform
dup mul exch
dup mul
add sqrt
} bind def
/Mabswid {
Mabsproc
setlinewidth	
} bind def
/Mabsdash {
exch
[
exch
{
Mabsproc
}
forall
]
exch
setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop}
repeat
} bind def
} ifelse
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/setcmykcolor where
{ pop}
{ /setcmykcolor {
4 1
roll
[
4 1 
roll
]
{
1 index
sub
1
sub neg
dup
0
lt
{
pop
0
}
if
dup
1
gt
{
pop
1
}
if
exch
} forall
pop
setrgbcolor
} bind def
} ifelse
/Mcharproc
{
currentfile
(x)
readhexstring
pop
0 get
exch
div
} bind def
/Mshadeproc
{
dup
3 1
roll
{
dup
Mcharproc
3 1
roll
} repeat
1 eq
{
setgray
}
{
3 eq
{
setrgbcolor
}
{
setcmykcolor
} ifelse
} ifelse
} bind def
/Mrectproc
{
3 index
2 index
moveto
2 index
3 -1
roll
lineto
dup
3 1
roll
lineto
lineto
fill
} bind def
/Mcolorimage
{
7 1
roll
pop
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
9 index
Mshadeproc
Mrectproc
} for
pop
} for
pop pop pop pop
} bind def
/Mimage
{
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
Mcharproc
setgray
Mrectproc
} for
pop
} for
pop pop pop
} bind def

MathPictureStart
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0454545 0.909091 0.0280925 0.561849 [
[(0)] .04545 0 0 2 0 Minner Mrotsboxa
[(0.2)] .22727 0 0 2 0 Minner Mrotsboxa
[(0.4)] .40909 0 0 2 0 Minner Mrotsboxa
[(0.6)] .59091 0 0 2 0 Minner Mrotsboxa
[(0.8)] .77273 0 0 2 0 Minner Mrotsboxa
[(1)] .95455 0 0 2 0 Minner Mrotsboxa
[()] .5 0 0 2 0 0 -1 Mouter Mrotsboxa
[(0)] -0.0125 .02809 1 0 0 Minner Mrotsboxa
[(0.2)] -0.0125 .14046 1 0 0 Minner Mrotsboxa
[(0.4)] -0.0125 .25283 1 0 0 Minner Mrotsboxa
[(0.6)] -0.0125 .3652 1 0 0 Minner Mrotsboxa
[(0.8)] -0.0125 .47757 1 0 0 Minner Mrotsboxa
[(1)] -0.0125 .58994 1 0 0 Minner Mrotsboxa
[(Epsilon = 0.1, 0.01, 0.001)] .5 .61803 0 -4 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 .61903 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 g
p
p
.002 w
.04545 0 m
.04545 .00625 L
s
P
[(0)] .04545 0 0 2 0 Minner Mrotshowa
p
.002 w
.22727 0 m
.22727 .00625 L
s
P
[(0.2)] .22727 0 0 2 0 Minner Mrotshowa
p
.002 w
.40909 0 m
.40909 .00625 L
s
P
[(0.4)] .40909 0 0 2 0 Minner Mrotshowa
p
.002 w
.59091 0 m
.59091 .00625 L
s
P
[(0.6)] .59091 0 0 2 0 Minner Mrotshowa
p
.002 w
.77273 0 m
.77273 .00625 L
s
P
[(0.8)] .77273 0 0 2 0 Minner Mrotshowa
p
.002 w
.95455 0 m
.95455 .00625 L
s
P
[(1)] .95455 0 0 2 0 Minner Mrotshowa
p
.001 w
.08182 0 m
.08182 .00375 L
s
P
p
.001 w
.11818 0 m
.11818 .00375 L
s
P
p
.001 w
.15455 0 m
.15455 .00375 L
s
P
p
.001 w
.19091 0 m
.19091 .00375 L
s
P
p
.001 w
.26364 0 m
.26364 .00375 L
s
P
p
.001 w
.3 0 m
.3 .00375 L
s
P
p
.001 w
.33636 0 m
.33636 .00375 L
s
P
p
.001 w
.37273 0 m
.37273 .00375 L
s
P
p
.001 w
.44545 0 m
.44545 .00375 L
s
P
p
.001 w
.48182 0 m
.48182 .00375 L
s
P
p
.001 w
.51818 0 m
.51818 .00375 L
s
P
p
.001 w
.55455 0 m
.55455 .00375 L
s
P
p
.001 w
.62727 0 m
.62727 .00375 L
s
P
p
.001 w
.66364 0 m
.66364 .00375 L
s
P
p
.001 w
.7 0 m
.7 .00375 L
s
P
p
.001 w
.73636 0 m
.73636 .00375 L
s
P
p
.001 w
.80909 0 m
.80909 .00375 L
s
P
p
.001 w
.84545 0 m
.84545 .00375 L
s
P
p
.001 w
.88182 0 m
.88182 .00375 L
s
P
p
.001 w
.91818 0 m
.91818 .00375 L
s
P
p
.001 w
.00909 0 m
.00909 .00375 L
s
P
p
.001 w
.99091 0 m
.99091 .00375 L
s
P
[()] .5 0 0 2 0 0 -1 Mouter Mrotshowa
p
.002 w
0 0 m
1 0 L
s
P
p
.002 w
0 .02809 m
.00625 .02809 L
s
P
[(0)] -0.0125 .02809 1 0 0 Minner Mrotshowa
p
.002 w
0 .14046 m
.00625 .14046 L
s
P
[(0.2)] -0.0125 .14046 1 0 0 Minner Mrotshowa
p
.002 w
0 .25283 m
.00625 .25283 L
s
P
[(0.4)] -0.0125 .25283 1 0 0 Minner Mrotshowa
p
.002 w
0 .3652 m
.00625 .3652 L
s
P
[(0.6)] -0.0125 .3652 1 0 0 Minner Mrotshowa
p
.002 w
0 .47757 m
.00625 .47757 L
s
P
[(0.8)] -0.0125 .47757 1 0 0 Minner Mrotshowa
p
.002 w
0 .58994 m
.00625 .58994 L
s
P
[(1)] -0.0125 .58994 1 0 0 Minner Mrotshowa
p
.001 w
0 .05057 m
.00375 .05057 L
s
P
p
.001 w
0 .07304 m
.00375 .07304 L
s
P
p
.001 w
0 .09551 m
.00375 .09551 L
s
P
p
.001 w
0 .11799 m
.00375 .11799 L
s
P
p
.001 w
0 .16294 m
.00375 .16294 L
s
P
p
.001 w
0 .18541 m
.00375 .18541 L
s
P
p
.001 w
0 .20788 m
.00375 .20788 L
s
P
p
.001 w
0 .23036 m
.00375 .23036 L
s
P
p
.001 w
0 .27531 m
.00375 .27531 L
s
P
p
.001 w
0 .29778 m
.00375 .29778 L
s
P
p
.001 w
0 .32025 m
.00375 .32025 L
s
P
p
.001 w
0 .34273 m
.00375 .34273 L
s
P
p
.001 w
0 .38768 m
.00375 .38768 L
s
P
p
.001 w
0 .41015 m
.00375 .41015 L
s
P
p
.001 w
0 .43262 m
.00375 .43262 L
s
P
p
.001 w
0 .4551 m
.00375 .4551 L
s
P
p
.001 w
0 .50005 m
.00375 .50005 L
s
P
p
.001 w
0 .52252 m
.00375 .52252 L
s
P
p
.001 w
0 .54499 m
.00375 .54499 L
s
P
p
.001 w
0 .56747 m
.00375 .56747 L
s
P
p
.001 w
0 .00562 m
.00375 .00562 L
s
P
p
.001 w
0 .61242 m
.00375 .61242 L
s
P
p
.002 w
0 0 m
0 .61803 L
s
P
P
p
p
.002 w
.04545 .61178 m
.04545 .61803 L
s
P
p
.002 w
.22727 .61178 m
.22727 .61803 L
s
P
p
.002 w
.40909 .61178 m
.40909 .61803 L
s
P
p
.002 w
.59091 .61178 m
.59091 .61803 L
s
P
p
.002 w
.77273 .61178 m
.77273 .61803 L
s
P
p
.002 w
.95455 .61178 m
.95455 .61803 L
s
P
p
.001 w
.08182 .61428 m
.08182 .61803 L
s
P
p
.001 w
.11818 .61428 m
.11818 .61803 L
s
P
p
.001 w
.15455 .61428 m
.15455 .61803 L
s
P
p
.001 w
.19091 .61428 m
.19091 .61803 L
s
P
p
.001 w
.26364 .61428 m
.26364 .61803 L
s
P
p
.001 w
.3 .61428 m
.3 .61803 L
s
P
p
.001 w
.33636 .61428 m
.33636 .61803 L
s
P
p
.001 w
.37273 .61428 m
.37273 .61803 L
s
P
p
.001 w
.44545 .61428 m
.44545 .61803 L
s
P
p
.001 w
.48182 .61428 m
.48182 .61803 L
s
P
p
.001 w
.51818 .61428 m
.51818 .61803 L
s
P
p
.001 w
.55455 .61428 m
.55455 .61803 L
s
P
p
.001 w
.62727 .61428 m
.62727 .61803 L
s
P
p
.001 w
.66364 .61428 m
.66364 .61803 L
s
P
p
.001 w
.7 .61428 m
.7 .61803 L
s
P
p
.001 w
.73636 .61428 m
.73636 .61803 L
s
P
p
.001 w
.80909 .61428 m
.80909 .61803 L
s
P
p
.001 w
.84545 .61428 m
.84545 .61803 L
s
P
p
.001 w
.88182 .61428 m
.88182 .61803 L
s
P
p
.001 w
.91818 .61428 m
.91818 .61803 L
s
P
p
.001 w
.00909 .61428 m
.00909 .61803 L
s
P
p
.001 w
.99091 .61428 m
.99091 .61803 L
s
P
[(Epsilon = 0.1, 0.01, 0.001)] .5 .61803 0 -4 Mshowa
p
.002 w
0 .61803 m
1 .61803 L
s
P
p
.002 w
.99375 .02809 m
1 .02809 L
s
P
p
.002 w
.99375 .14046 m
1 .14046 L
s
P
p
.002 w
.99375 .25283 m
1 .25283 L
s
P
p
.002 w
.99375 .3652 m
1 .3652 L
s
P
p
.002 w
.99375 .47757 m
1 .47757 L
s
P
p
.002 w
.99375 .58994 m
1 .58994 L
s
P
p
.001 w
.99625 .05057 m
1 .05057 L
s
P
p
.001 w
.99625 .07304 m
1 .07304 L
s
P
p
.001 w
.99625 .09551 m
1 .09551 L
s
P
p
.001 w
.99625 .11799 m
1 .11799 L
s
P
p
.001 w
.99625 .16294 m
1 .16294 L
s
P
p
.001 w
.99625 .18541 m
1 .18541 L
s
P
p
.001 w
.99625 .20788 m
1 .20788 L
s
P
p
.001 w
.99625 .23036 m
1 .23036 L
s
P
p
.001 w
.99625 .27531 m
1 .27531 L
s
P
p
.001 w
.99625 .29778 m
1 .29778 L
s
P
p
.001 w
.99625 .32025 m
1 .32025 L
s
P
p
.001 w
.99625 .34273 m
1 .34273 L
s
P
p
.001 w
.99625 .38768 m
1 .38768 L
s
P
p
.001 w
.99625 .41015 m
1 .41015 L
s
P
p
.001 w
.99625 .43262 m
1 .43262 L
s
P
p
.001 w
.99625 .4551 m
1 .4551 L
s
P
p
.001 w
.99625 .50005 m
1 .50005 L
s
P
p
.001 w
.99625 .52252 m
1 .52252 L
s
P
p
.001 w
.99625 .54499 m
1 .54499 L
s
P
p
.001 w
.99625 .56747 m
1 .56747 L
s
P
p
.001 w
.99625 .00562 m
1 .00562 L
s
P
p
.001 w
.99625 .61242 m
1 .61242 L
s
P
p
.002 w
1 0 m
1 .61803 L
s
P
P
p
P
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
p
p
p
.001 w
.04545 .58994 m
.08333 .52031 L
.12121 .45925 L
.15909 .40567 L
.19697 .35866 L
.23485 .3174 L
.27273 .28117 L
.31061 .24934 L
.34848 .22136 L
.38636 .19674 L
.42424 .17504 L
.46212 .15591 L
.5 .13899 L
.53788 .12401 L
.57576 .11069 L
.61364 .09881 L
.65152 .08815 L
.68939 .07854 L
.72727 .06981 L
.76515 .06181 L
.80303 .05439 L
.84091 .04742 L
.87879 .0408 L
.91667 .03439 L
.95455 .02809 L
s
P
P
p
p
.001 w
.04545 .58994 m
.06439 .48428 L
.08333 .39849 L
.12121 .27227 L
.14015 .22635 L
.15909 .18906 L
.17803 .15879 L
.19697 .13421 L
.21591 .11425 L
.23485 .09805 L
.25379 .08489 L
.27273 .07421 L
.31061 .0585 L
.32955 .05278 L
.34848 .04814 L
.36742 .04437 L
.38636 .04131 L
.4053 .03882 L
.42424 .0368 L
.44318 .03516 L
.46212 .03383 L
.48106 .03275 L
.5 .03188 L
.51894 .03117 L
.53788 .03059 L
.55682 .03012 L
.57576 .02974 L
.5947 .02943 L
.61364 .02918 L
.63258 .02897 L
.65152 .02881 L
.67045 .02867 L
.68939 .02856 L
.70833 .02847 L
.72727 .0284 L
.74621 .02834 L
.76515 .02829 L
.78409 .02825 L
.80303 .02822 L
.82197 .0282 L
.84091 .02817 L
.87879 .02814 L
.91667 .02811 L
.95455 .02809 L
s
P
P
p
p
.001 w
.04545 .58994 m
.05492 .43226 L
.06439 .31883 L
.07386 .23724 L
.08333 .17854 L
.0928 .13632 L
.10227 .10594 L
.11174 .0841 L
.12121 .06838 L
.13068 .05707 L
.14015 .04894 L
.14962 .04309 L
.15909 .03888 L
.16856 .03585 L
.17803 .03367 L
.1875 .03211 L
.19697 .03098 L
.20644 .03017 L
.21591 .02959 L
.22538 .02917 L
.23485 .02887 L
.24432 .02865 L
.25379 .02849 L
.26326 .02838 L
.27273 .0283 L
.2822 .02824 L
.29167 .0282 L
.30114 .02817 L
.31061 .02815 L
.32008 .02813 L
.32955 .02812 L
.33902 .02811 L
.34848 .02811 L
.35795 .0281 L
.36742 .0281 L
.37689 .0281 L
.38636 .0281 L
.39583 .0281 L
.4053 .02809 L
.41477 .02809 L
.42424 .02809 L
.43371 .02809 L
.44318 .02809 L
.45265 .02809 L
.46212 .02809 L
.47159 .02809 L
.48106 .02809 L
.49053 .02809 L
.5 .02809 L
.50947 .02809 L
Mistroke
.51894 .02809 L
.52841 .02809 L
.53788 .02809 L
.54735 .02809 L
.55682 .02809 L
.56629 .02809 L
.57576 .02809 L
.58523 .02809 L
.5947 .02809 L
.60417 .02809 L
.61364 .02809 L
.62311 .02809 L
.63258 .02809 L
.64205 .02809 L
.65152 .02809 L
.66098 .02809 L
.67045 .02809 L
.67992 .02809 L
.68939 .02809 L
.69886 .02809 L
.70833 .02809 L
.7178 .02809 L
.72727 .02809 L
.73674 .02809 L
.74621 .02809 L
.75568 .02809 L
.76515 .02809 L
.77462 .02809 L
.78409 .02809 L
.79356 .02809 L
.80303 .02809 L
.8125 .02809 L
.82197 .02809 L
.83144 .02809 L
.84091 .02809 L
.85038 .02809 L
.85985 .02809 L
.86932 .02809 L
.87879 .02809 L
.88826 .02809 L
.89773 .02809 L
.9072 .02809 L
.91667 .02809 L
.92614 .02809 L
.93561 .02809 L
.95455 .02809 L
Mfstroke
P
P
P
% End of Graphics
MathPictureEnd
end
showpage
%%EndDocument
 @endspecial 607 1381 a(Figure)i(1:)k(T)m(est)c(Problem)f(1,)g
Fl(y)q Fm(\()p Fl(x)p Fm(\))i(v)o(ersus)g Fl(x)p eop
%%Page: 2 2
2 1 bop 262 307 a Fn(T)l(est)15 b(Problem)e(2)h Fm(\(Linear\))g([6,)f
(p.14])262 357 y Fl(\017y)300 342 y Fk(00)331 357 y Fj(\000)c
Fl(y)393 342 y Fk(0)417 357 y Fm(=)j(0,)59 b Fl(y)q Fm(\(0\))13
b(=)e(1)p Fl(;)18 b(y)q Fm(\(1\))13 b(=)e(0)p Fl(:)262
407 y Fm(Exact)j(solution)f(is)h Fl(y)q Fm(\()p Fl(x)p
Fm(\))e(=)g(\(1)d Fj(\000)g Fm(exp)q(\(\()p Fl(x)g Fj(\000)h
Fm(1\))p Fl(=\017)p Fm(\)\))p Fl(=)p Fm(\(1)e Fj(\000)i
Fm(exp\()p Fj(\000)p Fm(1)p Fl(=\017)p Fm(\)\).)262 457
y(The)k(solution)f(has)h(a)g(b)q(oundary)f(la)o(y)o(er)h(of)f(width)h
Fl(O)q Fm(\()p Fl(\017)p Fm(\))g(at)f Fl(x)f Fm(=)f(1.)439
1762 y @beginspecial 72 @llx 72 @lly 540 @urx 720 @ury
2834 @rwi @setspecial
%%BeginDocument: ../PLOTS/pr2.ps

/Mathdict 150 dict def
Mathdict begin
/Mlmarg		1.0 72 mul def
/Mrmarg		1.0 72 mul def
/Mbmarg		1.0 72 mul def
/Mtmarg		1.0 72 mul def
/Mwidth		8.5 72 mul def
/Mheight	11 72 mul def
/Mtransform	{  } bind def
/Mnodistort	true def
/Mfixwid	true	def
/Mfixdash	false def
/Mrot		0	def
/Mpstart {
MathPictureStart
} bind def
/Mpend {
MathPictureEnd
} bind def
/Mscale {
0 1 0 1
5 -1 roll
MathScale
} bind def
/ISOLatin1Encoding dup where
{ pop pop }
{
[
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft
/logicalnot /hyphen /registered /macron
/degree /plusminus /twosuperior /threesuperior
/acute /mu /paragraph /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright
/onequarter /onehalf /threequarters /questiondown
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis
] def
} ifelse
/MFontDict 50 dict def
/MStrCat
{
exch
dup length
2 index length add
string
dup 3 1 roll
copy
length
exch dup
4 2 roll exch
putinterval
} def
/MCreateEncoding
{
1 index
255 string cvs
(-) MStrCat
1 index MStrCat
cvn exch
(Encoding) MStrCat
cvn dup where
{
exch get
}
{
pop
StandardEncoding
} ifelse
3 1 roll
dup MFontDict exch known not
{
1 index findfont
dup length dict
begin
{1 index /FID ne
{def}
{pop pop}
ifelse} forall
/Encoding 3 index
def
currentdict
end
1 index exch definefont pop
MFontDict 1 index
null put
}
if
exch pop
exch pop
} def
/ISOLatin1 { (ISOLatin1) MCreateEncoding } def
/ISO8859 { (ISOLatin1) MCreateEncoding } def
/Mcopyfont {
dup
maxlength
dict
exch
{
1 index
/FID
eq
{
pop pop
}
{
2 index
3 1 roll
put
}
ifelse
}
forall
} def
/Plain	/Courier findfont Mcopyfont definefont pop
/Bold	/Courier-Bold findfont Mcopyfont definefont pop
/Italic /Courier-Oblique findfont Mcopyfont definefont pop
/MathPictureStart {
gsave
Mtransform
Mlmarg
Mbmarg
translate
Mwidth
Mlmarg Mrmarg add
sub
/Mwidth exch def
Mheight
Mbmarg Mtmarg add
sub
/Mheight exch def
/Mtmatrix
matrix currentmatrix
def
/Mgmatrix
matrix currentmatrix
def
} bind def
/MathPictureEnd {
grestore
} bind def
/MFill {
0 0 		moveto
Mwidth 0 	lineto
Mwidth Mheight 	lineto
0 Mheight 	lineto
fill
} bind def
/MPlotRegion {
3 index
Mwidth mul
2 index
Mheight mul
translate
exch sub
Mheight mul
/Mheight
exch def
exch sub
Mwidth mul
/Mwidth
exch def
} bind def
/MathSubStart {
Momatrix
Mgmatrix Mtmatrix
Mwidth Mheight
7 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
Mgmatrix setmatrix
9 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
2 copy translate
/Mtmatrix matrix currentmatrix def
3 -1 roll
exch sub
/Mheight exch def
sub
/Mwidth exch def
} bind def
/MathSubEnd {
/Mheight exch def
/Mwidth exch def
/Mtmatrix exch def
dup setmatrix
/Mgmatrix exch def
/Momatrix exch def
} bind def
/Mdot {
moveto
0 0 rlineto
stroke
} bind def
/Mtetra {
moveto
lineto
lineto
lineto
fill
} bind def
/Metetra {
moveto
lineto
lineto
lineto
closepath
gsave
fill
grestore
0 setgray
stroke
} bind def
/Mistroke {
flattenpath
0 0 0
{
4 2 roll
pop pop
}
{
4 -1 roll
2 index
sub dup mul
4 -1 roll
2 index
sub dup mul
add sqrt
4 -1 roll
add
3 1 roll
}
{
stop
}
{
stop
}
pathforall
pop pop
currentpoint
stroke
moveto
currentdash
3 -1 roll
add
setdash
} bind def
/Mfstroke {
stroke
currentdash
pop 0
setdash
} bind def
/Mrotsboxa {
gsave
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
grestore
Msboxa
3  -1 roll
/Mtmatrix
exch def
/Mrot
0 def
} bind def
/Msboxa {
newpath
5 -1 roll
Mvboxa
pop
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Msboxa1
5 -3 roll
Msboxa1
Mboxrot
[
7 -2 roll
2 copy
[
3 1 roll
10 -1 roll
9 -1 roll
]
6 1 roll
5 -2 roll
]
} bind def
/Msboxa1 {
sub
2 div
dup
2 index
1 add
mul
3 -1 roll
-1 add
3 -1 roll
mul
} bind def
/Mvboxa	{
Mfixwid
{
Mvboxa1
}
{
dup
Mwidthcal
0 exch
{
add
}
forall
exch
Mvboxa1
4 index
7 -1 roll
add
4 -1 roll
pop
3 1 roll
}
ifelse
} bind def
/Mvboxa1 {
gsave
newpath
[ true
3 -1 roll
{
Mbbox
5 -1 roll
{
0
5 1 roll
}
{
7 -1 roll
exch sub
(m) stringwidth pop
.3 mul
sub
7 1 roll
6 -1 roll
4 -1 roll
Mmin
3 -1 roll
5 index
add
5 -1 roll
4 -1 roll
Mmax
4 -1 roll
}
ifelse
false
}
forall
{ stop } if
counttomark
1 add
4 roll
]
grestore
} bind def
/Mbbox {
1 dict begin
0 0 moveto
/temp (T) def
{	gsave
currentpoint newpath moveto
temp 0 3 -1 roll put temp
false charpath flattenpath currentpoint
pathbbox
grestore moveto lineto moveto} forall
pathbbox
newpath
end
} bind def
/Mmin {
2 copy
gt
{ exch } if
pop
} bind def
/Mmax {
2 copy
lt
{ exch } if
pop
} bind def
/Mrotshowa {
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
Mgmatrix setmatrix
Mshowa
/Mtmatrix
exch def
/Mrot 0 def
} bind def
/Mshowa {
4 -2 roll
moveto
2 index
Mtmatrix setmatrix
Mvboxa
7 1 roll
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Mshowa1
4 1 roll
Mshowa1
rmoveto
currentpoint
Mfixwid
{
Mshowax
}
{
Mshoway
}
ifelse
pop pop pop pop
Mgmatrix setmatrix
} bind def
/Mshowax {	
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
Mfixdash
{
Mfixdashp		
}
if
show
} for
} bind def
/Mfixdashp {
dup
length
1
gt
1 index
true exch
{
45
eq
and
} forall
and
{
gsave
(--)		
stringwidth pop
(-)
stringwidth pop
sub
2 div
0 rmoveto
dup
length
1 sub
{
(-)
show
}
repeat
grestore
}
if
} bind def	
/Mshoway {
3 index
Mwidthcal
5 1 roll
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
[
6 index
aload
length
2 add
-1 roll
{
pop
Strform
stringwidth
pop
neg 
exch
add
0 rmoveto
}
exch
kshow
cleartomark
} for
pop	
} bind def
/Mwidthcal {
[
exch
{
Mwidthcal1
}
forall
]
[
exch
dup
Maxlen
-1 add
0 1
3 -1 roll
{
[
exch
2 index
{		 
1 index	
Mget
exch
}
forall		
pop
Maxget
exch
}
for
pop
]
Mreva
} bind def
/Mreva	{
[
exch
aload
length
-1 1
{1 roll}
for
]
} bind def
/Mget	{
1 index
length
-1 add
1 index
ge
{
get
}
{
pop pop
0
}
ifelse
} bind def
/Maxlen	{
[
exch
{
length
}
forall
Maxget
} bind def
/Maxget	{
counttomark
-1 add
1 1
3 -1 roll
{
pop
Mmax
}
for
exch
pop
} bind def
/Mwidthcal1 {
[
exch
{
Strform
stringwidth
pop
}
forall
]
} bind def
/Strform {
/tem (x) def
tem 0
3 -1 roll
put
tem
} bind def
/Mshowa1 {
2 copy
add
4 1 roll
sub
mul
sub
-2 div
} bind def
/MathScale {
Mwidth
Mheight
Mlp
translate
scale
/yscale exch def
/ybias exch def
/xscale exch def
/xbias exch def
/Momatrix
xscale yscale matrix scale
xbias ybias matrix translate
matrix concatmatrix def
/Mgmatrix
matrix currentmatrix
def
} bind def
/Mlp {
3 copy
Mlpfirst
{
Mnodistort
{
Mmin
dup
} if
4 index
2 index
2 index
Mlprun
11 index
11 -1 roll
10 -4 roll
Mlp1
8 index
9 -5 roll
Mlp1
4 -1 roll
and
{ exit } if
3 -1 roll
pop pop
} loop
exch
3 1 roll
7 -3 roll
pop pop pop
} bind def
/Mlpfirst {
3 -1 roll
dup length
2 copy
-2 add
get
aload
pop pop pop
4 -2 roll
-1 add
get
aload
pop pop pop
6 -1 roll
3 -1 roll
5 -1 roll
sub
div
4 1 roll
exch sub
div
} bind def
/Mlprun {
2 copy
4 index
0 get
dup
4 1 roll
Mlprun1
3 copy
8 -2 roll
9 -1 roll
{
3 copy
Mlprun1
3 copy
11 -3 roll
/gt Mlpminmax
8 3 roll
11 -3 roll
/lt Mlpminmax
8 3 roll
} forall
pop pop pop pop
3 1 roll
pop pop
aload pop
5 -1 roll
aload pop
exch
6 -1 roll
Mlprun2
8 2 roll
4 -1 roll
Mlprun2
6 2 roll
3 -1 roll
Mlprun2
4 2 roll
exch
Mlprun2
6 2 roll
} bind def
/Mlprun1 {
aload pop
exch
6 -1 roll
5 -1 roll
mul add
4 -2 roll
mul
3 -1 roll
add
} bind def
/Mlprun2 {
2 copy
add 2 div
3 1 roll
exch sub
} bind def
/Mlpminmax {
cvx
2 index
6 index
2 index
exec
{
7 -3 roll
4 -1 roll
} if
1 index
5 index
3 -1 roll
exec
{
4 1 roll
pop
5 -1 roll
aload
pop pop
4 -1 roll
aload pop
[
8 -2 roll
pop
5 -2 roll
pop
6 -2 roll
pop
5 -1 roll
]
4 1 roll
pop
}
{
pop pop pop
} ifelse
} bind def
/Mlp1 {
5 index
3 index	sub
5 index
2 index mul
1 index
le
1 index
0 le
or
dup
not
{
1 index
3 index	div
.99999 mul
8 -1 roll
pop
7 1 roll
}
if
8 -1 roll
2 div
7 -2 roll
pop sub
5 index
6 -3 roll
pop pop
mul sub
exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
outflag
1
eq
{
/outflag 0 def
/intop 0 def
/inrht 0 def
} if		
5 index
gsave
Mtmatrix setmatrix
Mvboxa pop
grestore
3 -1 roll
pop
dup
intop
gt
{
/intop
exch def
}
{ pop }
ifelse
dup
inrht
gt
{
/inrht
exch def
}
{ pop }
ifelse
pop
/inflag
1 def
} bind def
/Mouter {
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
inflag
1 eq
{
dup
0 lt
{
dup
intop
mul
neg
/yadtop
exch def
} if
dup
0 gt
{
dup
intop
mul
/yadbot
exch def
}
if
pop
dup
0 lt
{
dup
inrht
mul
neg
/xadrht
exch def
} if
dup
0 gt
{
dup
inrht
mul
/xadlft
exch def
} if
pop
/outflag 1 def
}
{ pop pop}
ifelse
/inflag 0 def
/inrht 0 def
/intop 0 def
} bind def	
/Mboxout {
outflag
1
eq
{
4 -1
roll
xadlft
leadjust
add
sub
4 1 roll
3 -1
roll
yadbot
leadjust
add
sub
3 1
roll
exch
xadrht
leadjust
add
add
exch
yadtop
leadjust
add
add
/outflag 0 def
/xadlft 0 def
/yadbot 0 def
/xadrht 0 def
/yadtop 0 def
} if
} bind def
/leadjust {
(m) stringwidth pop
.5 mul
} bind def
/Mrotcheck {
dup
90
eq
{
yadbot
/yadbot
xadrht
def	
/xadrht
yadtop
def
/yadtop
xadlft
def
/xadlft
exch
def
}
if
dup
cos
1 index
sin
Checkaux
dup
cos
1 index
sin neg
exch
Checkaux
3 1 roll
pop pop
} bind def
/Checkaux {
4 index
exch
4 index
mul
3 1 roll
mul add
4 1 roll
} bind def
/Mboxrot {
Mrot
90 eq
{
brotaux
4 2
roll
}
if
Mrot
180 eq
{
4 2
roll
brotaux
4 2
roll
brotaux
}	
if
Mrot
270 eq
{
4 2
roll
brotaux
}
if
} bind def
/brotaux {
neg
exch
neg
} bind def
/Mabsproc {
0
matrix defaultmatrix
dtransform idtransform
dup mul exch
dup mul
add sqrt
} bind def
/Mabswid {
Mabsproc
setlinewidth	
} bind def
/Mabsdash {
exch
[
exch
{
Mabsproc
}
forall
]
exch
setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop}
repeat
} bind def
} ifelse
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/setcmykcolor where
{ pop}
{ /setcmykcolor {
4 1
roll
[
4 1 
roll
]
{
1 index
sub
1
sub neg
dup
0
lt
{
pop
0
}
if
dup
1
gt
{
pop
1
}
if
exch
} forall
pop
setrgbcolor
} bind def
} ifelse
/Mcharproc
{
currentfile
(x)
readhexstring
pop
0 get
exch
div
} bind def
/Mshadeproc
{
dup
3 1
roll
{
dup
Mcharproc
3 1
roll
} repeat
1 eq
{
setgray
}
{
3 eq
{
setrgbcolor
}
{
setcmykcolor
} ifelse
} ifelse
} bind def
/Mrectproc
{
3 index
2 index
moveto
2 index
3 -1
roll
lineto
dup
3 1
roll
lineto
lineto
fill
} bind def
/Mcolorimage
{
7 1
roll
pop
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
9 index
Mshadeproc
Mrectproc
} for
pop
} for
pop pop pop pop
} bind def
/Mimage
{
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
Mcharproc
setgray
Mrectproc
} for
pop
} for
pop pop pop
} bind def

MathPictureStart
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0454545 0.909091 0.0280925 0.561849 [
[(0)] .04545 0 0 2 0 Minner Mrotsboxa
[(0.2)] .22727 0 0 2 0 Minner Mrotsboxa
[(0.4)] .40909 0 0 2 0 Minner Mrotsboxa
[(0.6)] .59091 0 0 2 0 Minner Mrotsboxa
[(0.8)] .77273 0 0 2 0 Minner Mrotsboxa
[(1)] .95455 0 0 2 0 Minner Mrotsboxa
[()] .5 0 0 2 0 0 -1 Mouter Mrotsboxa
[(0)] -0.0125 .02809 1 0 0 Minner Mrotsboxa
[(0.2)] -0.0125 .14046 1 0 0 Minner Mrotsboxa
[(0.4)] -0.0125 .25283 1 0 0 Minner Mrotsboxa
[(0.6)] -0.0125 .3652 1 0 0 Minner Mrotsboxa
[(0.8)] -0.0125 .47757 1 0 0 Minner Mrotsboxa
[(1)] -0.0125 .58994 1 0 0 Minner Mrotsboxa
[(Epsilon = 0.2, 0.1, 0.01)] .5 .61803 0 -4 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 .61903 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 g
p
p
.002 w
.04545 0 m
.04545 .00625 L
s
P
[(0)] .04545 0 0 2 0 Minner Mrotshowa
p
.002 w
.22727 0 m
.22727 .00625 L
s
P
[(0.2)] .22727 0 0 2 0 Minner Mrotshowa
p
.002 w
.40909 0 m
.40909 .00625 L
s
P
[(0.4)] .40909 0 0 2 0 Minner Mrotshowa
p
.002 w
.59091 0 m
.59091 .00625 L
s
P
[(0.6)] .59091 0 0 2 0 Minner Mrotshowa
p
.002 w
.77273 0 m
.77273 .00625 L
s
P
[(0.8)] .77273 0 0 2 0 Minner Mrotshowa
p
.002 w
.95455 0 m
.95455 .00625 L
s
P
[(1)] .95455 0 0 2 0 Minner Mrotshowa
p
.001 w
.08182 0 m
.08182 .00375 L
s
P
p
.001 w
.11818 0 m
.11818 .00375 L
s
P
p
.001 w
.15455 0 m
.15455 .00375 L
s
P
p
.001 w
.19091 0 m
.19091 .00375 L
s
P
p
.001 w
.26364 0 m
.26364 .00375 L
s
P
p
.001 w
.3 0 m
.3 .00375 L
s
P
p
.001 w
.33636 0 m
.33636 .00375 L
s
P
p
.001 w
.37273 0 m
.37273 .00375 L
s
P
p
.001 w
.44545 0 m
.44545 .00375 L
s
P
p
.001 w
.48182 0 m
.48182 .00375 L
s
P
p
.001 w
.51818 0 m
.51818 .00375 L
s
P
p
.001 w
.55455 0 m
.55455 .00375 L
s
P
p
.001 w
.62727 0 m
.62727 .00375 L
s
P
p
.001 w
.66364 0 m
.66364 .00375 L
s
P
p
.001 w
.7 0 m
.7 .00375 L
s
P
p
.001 w
.73636 0 m
.73636 .00375 L
s
P
p
.001 w
.80909 0 m
.80909 .00375 L
s
P
p
.001 w
.84545 0 m
.84545 .00375 L
s
P
p
.001 w
.88182 0 m
.88182 .00375 L
s
P
p
.001 w
.91818 0 m
.91818 .00375 L
s
P
p
.001 w
.00909 0 m
.00909 .00375 L
s
P
p
.001 w
.99091 0 m
.99091 .00375 L
s
P
[()] .5 0 0 2 0 0 -1 Mouter Mrotshowa
p
.002 w
0 0 m
1 0 L
s
P
p
.002 w
0 .02809 m
.00625 .02809 L
s
P
[(0)] -0.0125 .02809 1 0 0 Minner Mrotshowa
p
.002 w
0 .14046 m
.00625 .14046 L
s
P
[(0.2)] -0.0125 .14046 1 0 0 Minner Mrotshowa
p
.002 w
0 .25283 m
.00625 .25283 L
s
P
[(0.4)] -0.0125 .25283 1 0 0 Minner Mrotshowa
p
.002 w
0 .3652 m
.00625 .3652 L
s
P
[(0.6)] -0.0125 .3652 1 0 0 Minner Mrotshowa
p
.002 w
0 .47757 m
.00625 .47757 L
s
P
[(0.8)] -0.0125 .47757 1 0 0 Minner Mrotshowa
p
.002 w
0 .58994 m
.00625 .58994 L
s
P
[(1)] -0.0125 .58994 1 0 0 Minner Mrotshowa
p
.001 w
0 .05057 m
.00375 .05057 L
s
P
p
.001 w
0 .07304 m
.00375 .07304 L
s
P
p
.001 w
0 .09551 m
.00375 .09551 L
s
P
p
.001 w
0 .11799 m
.00375 .11799 L
s
P
p
.001 w
0 .16294 m
.00375 .16294 L
s
P
p
.001 w
0 .18541 m
.00375 .18541 L
s
P
p
.001 w
0 .20788 m
.00375 .20788 L
s
P
p
.001 w
0 .23036 m
.00375 .23036 L
s
P
p
.001 w
0 .27531 m
.00375 .27531 L
s
P
p
.001 w
0 .29778 m
.00375 .29778 L
s
P
p
.001 w
0 .32025 m
.00375 .32025 L
s
P
p
.001 w
0 .34273 m
.00375 .34273 L
s
P
p
.001 w
0 .38768 m
.00375 .38768 L
s
P
p
.001 w
0 .41015 m
.00375 .41015 L
s
P
p
.001 w
0 .43262 m
.00375 .43262 L
s
P
p
.001 w
0 .4551 m
.00375 .4551 L
s
P
p
.001 w
0 .50005 m
.00375 .50005 L
s
P
p
.001 w
0 .52252 m
.00375 .52252 L
s
P
p
.001 w
0 .54499 m
.00375 .54499 L
s
P
p
.001 w
0 .56747 m
.00375 .56747 L
s
P
p
.001 w
0 .00562 m
.00375 .00562 L
s
P
p
.001 w
0 .61242 m
.00375 .61242 L
s
P
p
.002 w
0 0 m
0 .61803 L
s
P
P
p
p
.002 w
.04545 .61178 m
.04545 .61803 L
s
P
p
.002 w
.22727 .61178 m
.22727 .61803 L
s
P
p
.002 w
.40909 .61178 m
.40909 .61803 L
s
P
p
.002 w
.59091 .61178 m
.59091 .61803 L
s
P
p
.002 w
.77273 .61178 m
.77273 .61803 L
s
P
p
.002 w
.95455 .61178 m
.95455 .61803 L
s
P
p
.001 w
.08182 .61428 m
.08182 .61803 L
s
P
p
.001 w
.11818 .61428 m
.11818 .61803 L
s
P
p
.001 w
.15455 .61428 m
.15455 .61803 L
s
P
p
.001 w
.19091 .61428 m
.19091 .61803 L
s
P
p
.001 w
.26364 .61428 m
.26364 .61803 L
s
P
p
.001 w
.3 .61428 m
.3 .61803 L
s
P
p
.001 w
.33636 .61428 m
.33636 .61803 L
s
P
p
.001 w
.37273 .61428 m
.37273 .61803 L
s
P
p
.001 w
.44545 .61428 m
.44545 .61803 L
s
P
p
.001 w
.48182 .61428 m
.48182 .61803 L
s
P
p
.001 w
.51818 .61428 m
.51818 .61803 L
s
P
p
.001 w
.55455 .61428 m
.55455 .61803 L
s
P
p
.001 w
.62727 .61428 m
.62727 .61803 L
s
P
p
.001 w
.66364 .61428 m
.66364 .61803 L
s
P
p
.001 w
.7 .61428 m
.7 .61803 L
s
P
p
.001 w
.73636 .61428 m
.73636 .61803 L
s
P
p
.001 w
.80909 .61428 m
.80909 .61803 L
s
P
p
.001 w
.84545 .61428 m
.84545 .61803 L
s
P
p
.001 w
.88182 .61428 m
.88182 .61803 L
s
P
p
.001 w
.91818 .61428 m
.91818 .61803 L
s
P
p
.001 w
.00909 .61428 m
.00909 .61803 L
s
P
p
.001 w
.99091 .61428 m
.99091 .61803 L
s
P
[(Epsilon = 0.2, 0.1, 0.01)] .5 .61803 0 -4 Mshowa
p
.002 w
0 .61803 m
1 .61803 L
s
P
p
.002 w
.99375 .02809 m
1 .02809 L
s
P
p
.002 w
.99375 .14046 m
1 .14046 L
s
P
p
.002 w
.99375 .25283 m
1 .25283 L
s
P
p
.002 w
.99375 .3652 m
1 .3652 L
s
P
p
.002 w
.99375 .47757 m
1 .47757 L
s
P
p
.002 w
.99375 .58994 m
1 .58994 L
s
P
p
.001 w
.99625 .05057 m
1 .05057 L
s
P
p
.001 w
.99625 .07304 m
1 .07304 L
s
P
p
.001 w
.99625 .09551 m
1 .09551 L
s
P
p
.001 w
.99625 .11799 m
1 .11799 L
s
P
p
.001 w
.99625 .16294 m
1 .16294 L
s
P
p
.001 w
.99625 .18541 m
1 .18541 L
s
P
p
.001 w
.99625 .20788 m
1 .20788 L
s
P
p
.001 w
.99625 .23036 m
1 .23036 L
s
P
p
.001 w
.99625 .27531 m
1 .27531 L
s
P
p
.001 w
.99625 .29778 m
1 .29778 L
s
P
p
.001 w
.99625 .32025 m
1 .32025 L
s
P
p
.001 w
.99625 .34273 m
1 .34273 L
s
P
p
.001 w
.99625 .38768 m
1 .38768 L
s
P
p
.001 w
.99625 .41015 m
1 .41015 L
s
P
p
.001 w
.99625 .43262 m
1 .43262 L
s
P
p
.001 w
.99625 .4551 m
1 .4551 L
s
P
p
.001 w
.99625 .50005 m
1 .50005 L
s
P
p
.001 w
.99625 .52252 m
1 .52252 L
s
P
p
.001 w
.99625 .54499 m
1 .54499 L
s
P
p
.001 w
.99625 .56747 m
1 .56747 L
s
P
p
.001 w
.99625 .00562 m
1 .00562 L
s
P
p
.001 w
.99625 .61242 m
1 .61242 L
s
P
p
.002 w
1 0 m
1 .61803 L
s
P
P
p
P
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
p
p
p
.001 w
.04545 .58994 m
.08333 .58906 L
.12121 .58797 L
.15909 .58663 L
.19697 .58498 L
.23485 .58295 L
.27273 .58045 L
.31061 .57737 L
.34848 .57357 L
.38636 .5689 L
.42424 .56314 L
.46212 .55605 L
.5 .54732 L
.53788 .53657 L
.57576 .52332 L
.61364 .50701 L
.65152 .48691 L
.68939 .46217 L
.72727 .43169 L
.76515 .39415 L
.80303 .34792 L
.84091 .29098 L
.87879 .22085 L
.91667 .13447 L
.95455 .02809 L
s
P
P
p
p
.001 w
.04545 .58994 m
.06439 .58994 L
.08333 .58993 L
.12121 .58991 L
.14015 .58989 L
.15909 .58988 L
.17803 .58986 L
.19697 .58983 L
.21591 .5898 L
.23485 .58976 L
.25379 .58971 L
.27273 .58966 L
.31061 .5895 L
.32955 .58939 L
.34848 .58925 L
.36742 .58909 L
.38636 .58888 L
.4053 .58863 L
.42424 .58832 L
.44318 .58794 L
.46212 .58747 L
.48106 .58689 L
.5 .58618 L
.51894 .5853 L
.53788 .58422 L
.55682 .58289 L
.57576 .58126 L
.5947 .57924 L
.61364 .57675 L
.63258 .57369 L
.65152 .56992 L
.67045 .56528 L
.68939 .55956 L
.70833 .55252 L
.72727 .54385 L
.74621 .53316 L
.76515 .52001 L
.78409 .5038 L
.80303 .48384 L
.82197 .45926 L
.84091 .42899 L
.85985 .3917 L
.87879 .34578 L
.91667 .21956 L
.93561 .13376 L
.95455 .02809 L
s
P
P
p
p
.001 w
.04545 .58994 m
.08333 .58994 L
.12121 .58994 L
.15909 .58994 L
.19697 .58994 L
.23485 .58994 L
.27273 .58994 L
.31061 .58994 L
.34848 .58994 L
.38636 .58994 L
.42424 .58994 L
.46212 .58994 L
.5 .58994 L
.53788 .58994 L
.57576 .58994 L
.5947 .58994 L
.60417 .58994 L
.6089 .58994 L
.61127 .58994 L
.61245 .58994 L
.61364 .58994 L
.61482 .58994 L
.616 .58994 L
.61719 .58994 L
.61837 .58994 L
.62074 .58994 L
.62192 .58994 L
.62311 .58994 L
.62429 .58994 L
.62547 .58994 L
.62666 .58994 L
.62784 .58994 L
.63021 .58994 L
.63258 .58994 L
.63494 .58994 L
.63613 .58994 L
.63731 .58994 L
.63849 .58994 L
.63968 .58994 L
.64205 .58994 L
.64441 .58994 L
.64678 .58994 L
.64915 .58994 L
.65152 .58994 L
.65388 .58994 L
.65625 .58994 L
.65862 .58994 L
.66098 .58994 L
.66335 .58994 L
.66572 .58994 L
Mistroke
.66809 .58994 L
.67045 .58994 L
.67282 .58994 L
.67519 .58994 L
.67756 .58994 L
.67992 .58994 L
.68229 .58994 L
.68466 .58994 L
.68703 .58994 L
.68939 .58994 L
.69176 .58994 L
.69413 .58994 L
.6965 .58994 L
.69886 .58994 L
.70123 .58994 L
.7036 .58994 L
.70597 .58994 L
.70833 .58994 L
.7107 .58994 L
.71307 .58994 L
.71544 .58994 L
.7178 .58994 L
.72017 .58994 L
.72254 .58994 L
.72491 .58994 L
.72727 .58994 L
.72964 .58994 L
.73201 .58994 L
.73437 .58994 L
.73674 .58994 L
.73911 .58994 L
.74148 .58994 L
.74384 .58994 L
.74621 .58994 L
.74858 .58994 L
.75095 .58994 L
.75331 .58994 L
.75568 .58994 L
.75805 .58994 L
.76042 .58994 L
.76278 .58994 L
.76515 .58994 L
.76752 .58994 L
.76989 .58994 L
.77225 .58994 L
.77462 .58994 L
.77699 .58994 L
.77936 .58994 L
.78172 .58994 L
.78409 .58994 L
Mistroke
.78646 .58994 L
.78883 .58994 L
.79119 .58994 L
.79356 .58994 L
.79593 .58994 L
.7983 .58994 L
.80066 .58994 L
.80303 .58994 L
.8054 .58994 L
.80777 .58994 L
.81013 .58994 L
.8125 .58994 L
.81487 .58994 L
.81723 .58994 L
.8196 .58994 L
.82197 .58994 L
.82434 .58994 L
.8267 .58994 L
.82907 .58994 L
.83144 .58994 L
.83381 .58994 L
.83617 .58994 L
.83854 .58994 L
.84091 .58994 L
.84328 .58994 L
.84564 .58994 L
.84801 .58994 L
.85038 .58994 L
.85275 .58993 L
.85511 .58993 L
.85748 .58993 L
.85985 .58992 L
.86222 .58992 L
.86458 .58991 L
.86695 .5899 L
.86932 .58989 L
.87169 .58988 L
.87405 .58986 L
.87642 .58984 L
.87879 .58981 L
.88116 .58977 L
.88352 .58971 L
.88589 .58965 L
.88826 .58956 L
.89062 .58944 L
.89299 .5893 L
.89536 .58911 L
.89773 .58886 L
.90009 .58853 L
.90246 .58812 L
Mistroke
.90483 .58757 L
.9072 .58687 L
.90956 .58595 L
.91193 .58477 L
.9143 .58323 L
.91667 .58123 L
.91903 .57864 L
.9214 .57528 L
.92377 .57092 L
.92614 .56526 L
.9285 .55791 L
.93087 .54838 L
.93324 .53602 L
.93561 .51998 L
.93797 .49917 L
.94034 .47217 L
.94271 .43714 L
.94508 .39168 L
.94744 .33271 L
.94981 .25619 L
.95218 .15691 L
.95455 .02809 L
Mfstroke
P
P
P
% End of Graphics
MathPictureEnd
end
showpage
%%EndDocument
 @endspecial 607 1381 a(Figure)j(2:)k(T)m(est)c(Problem)f(2,)g
Fl(y)q Fm(\()p Fl(x)p Fm(\))i(v)o(ersus)g Fl(x)p eop
%%Page: 3 3
3 2 bop 262 307 a Fn(T)l(est)15 b(Problem)e(3)h Fm(\(Linear\))g([6,)f
(p.133])262 357 y Fl(\017y)300 342 y Fk(00)331 357 y
Fm(+)c(\(2)g(+)h(cos\()p Fl(\031)q(x)p Fm(\)\))p Fl(y)633
342 y Fk(0)655 357 y Fj(\000)g Fl(y)j Fm(=)f Fj(\000)p
Fm(\(1)e(+)f Fl(\017\031)936 342 y Fi(2)955 357 y Fm(\))e(cos\()p
Fl(\031)q(x)p Fm(\))j Fj(\000)f Fm(\(2)g(+)h(cos\()p
Fl(\031)q(x)p Fm(\)\))p Fl(\031)f Fm(sin\()p Fl(\031)q(x)p
Fm(\),)1336 407 y Fl(y)q Fm(\()p Fj(\000)p Fm(1\))k(=)f
Fl(y)q Fm(\(1\))g(=)g Fj(\000)p Fm(1.)262 457 y(Exact)i(solution)f(is)h
Fl(y)q Fm(\()p Fl(x)p Fm(\))e(=)g(cos\()p Fl(\031)q(x)p
Fm(\).)262 506 y(The)i(problem)e(has)i(no)g(turning)g(p)q(oin)o(ts)g
(and)f(the)i(solution)e(is)h(smo)q(oth.)439 1810 y @beginspecial
72 @llx 72 @lly 540 @urx 720 @ury 2834 @rwi @setspecial
%%BeginDocument: ../PLOTS/pr3.ps

/Mathdict 150 dict def
Mathdict begin
/Mlmarg		1.0 72 mul def
/Mrmarg		1.0 72 mul def
/Mbmarg		1.0 72 mul def
/Mtmarg		1.0 72 mul def
/Mwidth		8.5 72 mul def
/Mheight	11 72 mul def
/Mtransform	{  } bind def
/Mnodistort	true def
/Mfixwid	true	def
/Mfixdash	false def
/Mrot		0	def
/Mpstart {
MathPictureStart
} bind def
/Mpend {
MathPictureEnd
} bind def
/Mscale {
0 1 0 1
5 -1 roll
MathScale
} bind def
/ISOLatin1Encoding dup where
{ pop pop }
{
[
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft
/logicalnot /hyphen /registered /macron
/degree /plusminus /twosuperior /threesuperior
/acute /mu /paragraph /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright
/onequarter /onehalf /threequarters /questiondown
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis
] def
} ifelse
/MFontDict 50 dict def
/MStrCat
{
exch
dup length
2 index length add
string
dup 3 1 roll
copy
length
exch dup
4 2 roll exch
putinterval
} def
/MCreateEncoding
{
1 index
255 string cvs
(-) MStrCat
1 index MStrCat
cvn exch
(Encoding) MStrCat
cvn dup where
{
exch get
}
{
pop
StandardEncoding
} ifelse
3 1 roll
dup MFontDict exch known not
{
1 index findfont
dup length dict
begin
{1 index /FID ne
{def}
{pop pop}
ifelse} forall
/Encoding 3 index
def
currentdict
end
1 index exch definefont pop
MFontDict 1 index
null put
}
if
exch pop
exch pop
} def
/ISOLatin1 { (ISOLatin1) MCreateEncoding } def
/ISO8859 { (ISOLatin1) MCreateEncoding } def
/Mcopyfont {
dup
maxlength
dict
exch
{
1 index
/FID
eq
{
pop pop
}
{
2 index
3 1 roll
put
}
ifelse
}
forall
} def
/Plain	/Courier findfont Mcopyfont definefont pop
/Bold	/Courier-Bold findfont Mcopyfont definefont pop
/Italic /Courier-Oblique findfont Mcopyfont definefont pop
/MathPictureStart {
gsave
Mtransform
Mlmarg
Mbmarg
translate
Mwidth
Mlmarg Mrmarg add
sub
/Mwidth exch def
Mheight
Mbmarg Mtmarg add
sub
/Mheight exch def
/Mtmatrix
matrix currentmatrix
def
/Mgmatrix
matrix currentmatrix
def
} bind def
/MathPictureEnd {
grestore
} bind def
/MFill {
0 0 		moveto
Mwidth 0 	lineto
Mwidth Mheight 	lineto
0 Mheight 	lineto
fill
} bind def
/MPlotRegion {
3 index
Mwidth mul
2 index
Mheight mul
translate
exch sub
Mheight mul
/Mheight
exch def
exch sub
Mwidth mul
/Mwidth
exch def
} bind def
/MathSubStart {
Momatrix
Mgmatrix Mtmatrix
Mwidth Mheight
7 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
Mgmatrix setmatrix
9 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
2 copy translate
/Mtmatrix matrix currentmatrix def
3 -1 roll
exch sub
/Mheight exch def
sub
/Mwidth exch def
} bind def
/MathSubEnd {
/Mheight exch def
/Mwidth exch def
/Mtmatrix exch def
dup setmatrix
/Mgmatrix exch def
/Momatrix exch def
} bind def
/Mdot {
moveto
0 0 rlineto
stroke
} bind def
/Mtetra {
moveto
lineto
lineto
lineto
fill
} bind def
/Metetra {
moveto
lineto
lineto
lineto
closepath
gsave
fill
grestore
0 setgray
stroke
} bind def
/Mistroke {
flattenpath
0 0 0
{
4 2 roll
pop pop
}
{
4 -1 roll
2 index
sub dup mul
4 -1 roll
2 index
sub dup mul
add sqrt
4 -1 roll
add
3 1 roll
}
{
stop
}
{
stop
}
pathforall
pop pop
currentpoint
stroke
moveto
currentdash
3 -1 roll
add
setdash
} bind def
/Mfstroke {
stroke
currentdash
pop 0
setdash
} bind def
/Mrotsboxa {
gsave
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
grestore
Msboxa
3  -1 roll
/Mtmatrix
exch def
/Mrot
0 def
} bind def
/Msboxa {
newpath
5 -1 roll
Mvboxa
pop
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Msboxa1
5 -3 roll
Msboxa1
Mboxrot
[
7 -2 roll
2 copy
[
3 1 roll
10 -1 roll
9 -1 roll
]
6 1 roll
5 -2 roll
]
} bind def
/Msboxa1 {
sub
2 div
dup
2 index
1 add
mul
3 -1 roll
-1 add
3 -1 roll
mul
} bind def
/Mvboxa	{
Mfixwid
{
Mvboxa1
}
{
dup
Mwidthcal
0 exch
{
add
}
forall
exch
Mvboxa1
4 index
7 -1 roll
add
4 -1 roll
pop
3 1 roll
}
ifelse
} bind def
/Mvboxa1 {
gsave
newpath
[ true
3 -1 roll
{
Mbbox
5 -1 roll
{
0
5 1 roll
}
{
7 -1 roll
exch sub
(m) stringwidth pop
.3 mul
sub
7 1 roll
6 -1 roll
4 -1 roll
Mmin
3 -1 roll
5 index
add
5 -1 roll
4 -1 roll
Mmax
4 -1 roll
}
ifelse
false
}
forall
{ stop } if
counttomark
1 add
4 roll
]
grestore
} bind def
/Mbbox {
1 dict begin
0 0 moveto
/temp (T) def
{	gsave
currentpoint newpath moveto
temp 0 3 -1 roll put temp
false charpath flattenpath currentpoint
pathbbox
grestore moveto lineto moveto} forall
pathbbox
newpath
end
} bind def
/Mmin {
2 copy
gt
{ exch } if
pop
} bind def
/Mmax {
2 copy
lt
{ exch } if
pop
} bind def
/Mrotshowa {
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
Mgmatrix setmatrix
Mshowa
/Mtmatrix
exch def
/Mrot 0 def
} bind def
/Mshowa {
4 -2 roll
moveto
2 index
Mtmatrix setmatrix
Mvboxa
7 1 roll
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Mshowa1
4 1 roll
Mshowa1
rmoveto
currentpoint
Mfixwid
{
Mshowax
}
{
Mshoway
}
ifelse
pop pop pop pop
Mgmatrix setmatrix
} bind def
/Mshowax {	
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
Mfixdash
{
Mfixdashp		
}
if
show
} for
} bind def
/Mfixdashp {
dup
length
1
gt
1 index
true exch
{
45
eq
and
} forall
and
{
gsave
(--)		
stringwidth pop
(-)
stringwidth pop
sub
2 div
0 rmoveto
dup
length
1 sub
{
(-)
show
}
repeat
grestore
}
if
} bind def	
/Mshoway {
3 index
Mwidthcal
5 1 roll
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
[
6 index
aload
length
2 add
-1 roll
{
pop
Strform
stringwidth
pop
neg 
exch
add
0 rmoveto
}
exch
kshow
cleartomark
} for
pop	
} bind def
/Mwidthcal {
[
exch
{
Mwidthcal1
}
forall
]
[
exch
dup
Maxlen
-1 add
0 1
3 -1 roll
{
[
exch
2 index
{		 
1 index	
Mget
exch
}
forall		
pop
Maxget
exch
}
for
pop
]
Mreva
} bind def
/Mreva	{
[
exch
aload
length
-1 1
{1 roll}
for
]
} bind def
/Mget	{
1 index
length
-1 add
1 index
ge
{
get
}
{
pop pop
0
}
ifelse
} bind def
/Maxlen	{
[
exch
{
length
}
forall
Maxget
} bind def
/Maxget	{
counttomark
-1 add
1 1
3 -1 roll
{
pop
Mmax
}
for
exch
pop
} bind def
/Mwidthcal1 {
[
exch
{
Strform
stringwidth
pop
}
forall
]
} bind def
/Strform {
/tem (x) def
tem 0
3 -1 roll
put
tem
} bind def
/Mshowa1 {
2 copy
add
4 1 roll
sub
mul
sub
-2 div
} bind def
/MathScale {
Mwidth
Mheight
Mlp
translate
scale
/yscale exch def
/ybias exch def
/xscale exch def
/xbias exch def
/Momatrix
xscale yscale matrix scale
xbias ybias matrix translate
matrix concatmatrix def
/Mgmatrix
matrix currentmatrix
def
} bind def
/Mlp {
3 copy
Mlpfirst
{
Mnodistort
{
Mmin
dup
} if
4 index
2 index
2 index
Mlprun
11 index
11 -1 roll
10 -4 roll
Mlp1
8 index
9 -5 roll
Mlp1
4 -1 roll
and
{ exit } if
3 -1 roll
pop pop
} loop
exch
3 1 roll
7 -3 roll
pop pop pop
} bind def
/Mlpfirst {
3 -1 roll
dup length
2 copy
-2 add
get
aload
pop pop pop
4 -2 roll
-1 add
get
aload
pop pop pop
6 -1 roll
3 -1 roll
5 -1 roll
sub
div
4 1 roll
exch sub
div
} bind def
/Mlprun {
2 copy
4 index
0 get
dup
4 1 roll
Mlprun1
3 copy
8 -2 roll
9 -1 roll
{
3 copy
Mlprun1
3 copy
11 -3 roll
/gt Mlpminmax
8 3 roll
11 -3 roll
/lt Mlpminmax
8 3 roll
} forall
pop pop pop pop
3 1 roll
pop pop
aload pop
5 -1 roll
aload pop
exch
6 -1 roll
Mlprun2
8 2 roll
4 -1 roll
Mlprun2
6 2 roll
3 -1 roll
Mlprun2
4 2 roll
exch
Mlprun2
6 2 roll
} bind def
/Mlprun1 {
aload pop
exch
6 -1 roll
5 -1 roll
mul add
4 -2 roll
mul
3 -1 roll
add
} bind def
/Mlprun2 {
2 copy
add 2 div
3 1 roll
exch sub
} bind def
/Mlpminmax {
cvx
2 index
6 index
2 index
exec
{
7 -3 roll
4 -1 roll
} if
1 index
5 index
3 -1 roll
exec
{
4 1 roll
pop
5 -1 roll
aload
pop pop
4 -1 roll
aload pop
[
8 -2 roll
pop
5 -2 roll
pop
6 -2 roll
pop
5 -1 roll
]
4 1 roll
pop
}
{
pop pop pop
} ifelse
} bind def
/Mlp1 {
5 index
3 index	sub
5 index
2 index mul
1 index
le
1 index
0 le
or
dup
not
{
1 index
3 index	div
.99999 mul
8 -1 roll
pop
7 1 roll
}
if
8 -1 roll
2 div
7 -2 roll
pop sub
5 index
6 -3 roll
pop pop
mul sub
exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
outflag
1
eq
{
/outflag 0 def
/intop 0 def
/inrht 0 def
} if		
5 index
gsave
Mtmatrix setmatrix
Mvboxa pop
grestore
3 -1 roll
pop
dup
intop
gt
{
/intop
exch def
}
{ pop }
ifelse
dup
inrht
gt
{
/inrht
exch def
}
{ pop }
ifelse
pop
/inflag
1 def
} bind def
/Mouter {
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
inflag
1 eq
{
dup
0 lt
{
dup
intop
mul
neg
/yadtop
exch def
} if
dup
0 gt
{
dup
intop
mul
/yadbot
exch def
}
if
pop
dup
0 lt
{
dup
inrht
mul
neg
/xadrht
exch def
} if
dup
0 gt
{
dup
inrht
mul
/xadlft
exch def
} if
pop
/outflag 1 def
}
{ pop pop}
ifelse
/inflag 0 def
/inrht 0 def
/intop 0 def
} bind def	
/Mboxout {
outflag
1
eq
{
4 -1
roll
xadlft
leadjust
add
sub
4 1 roll
3 -1
roll
yadbot
leadjust
add
sub
3 1
roll
exch
xadrht
leadjust
add
add
exch
yadtop
leadjust
add
add
/outflag 0 def
/xadlft 0 def
/yadbot 0 def
/xadrht 0 def
/yadtop 0 def
} if
} bind def
/leadjust {
(m) stringwidth pop
.5 mul
} bind def
/Mrotcheck {
dup
90
eq
{
yadbot
/yadbot
xadrht
def	
/xadrht
yadtop
def
/yadtop
xadlft
def
/xadlft
exch
def
}
if
dup
cos
1 index
sin
Checkaux
dup
cos
1 index
sin neg
exch
Checkaux
3 1 roll
pop pop
} bind def
/Checkaux {
4 index
exch
4 index
mul
3 1 roll
mul add
4 1 roll
} bind def
/Mboxrot {
Mrot
90 eq
{
brotaux
4 2
roll
}
if
Mrot
180 eq
{
4 2
roll
brotaux
4 2
roll
brotaux
}	
if
Mrot
270 eq
{
4 2
roll
brotaux
}
if
} bind def
/brotaux {
neg
exch
neg
} bind def
/Mabsproc {
0
matrix defaultmatrix
dtransform idtransform
dup mul exch
dup mul
add sqrt
} bind def
/Mabswid {
Mabsproc
setlinewidth	
} bind def
/Mabsdash {
exch
[
exch
{
Mabsproc
}
forall
]
exch
setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop}
repeat
} bind def
} ifelse
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/setcmykcolor where
{ pop}
{ /setcmykcolor {
4 1
roll
[
4 1 
roll
]
{
1 index
sub
1
sub neg
dup
0
lt
{
pop
0
}
if
dup
1
gt
{
pop
1
}
if
exch
} forall
pop
setrgbcolor
} bind def
} ifelse
/Mcharproc
{
currentfile
(x)
readhexstring
pop
0 get
exch
div
} bind def
/Mshadeproc
{
dup
3 1
roll
{
dup
Mcharproc
3 1
roll
} repeat
1 eq
{
setgray
}
{
3 eq
{
setrgbcolor
}
{
setcmykcolor
} ifelse
} ifelse
} bind def
/Mrectproc
{
3 index
2 index
moveto
2 index
3 -1
roll
lineto
dup
3 1
roll
lineto
lineto
fill
} bind def
/Mcolorimage
{
7 1
roll
pop
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
9 index
Mshadeproc
Mrectproc
} for
pop
} for
pop pop pop pop
} bind def
/Mimage
{
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
Mcharproc
setgray
Mrectproc
} for
pop
} for
pop pop pop
} bind def

MathPictureStart
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.5 0.47619 0.309017 0.294302 [
[(-1)] .02381 0 0 2 0 Minner Mrotsboxa
[(-0.5)] .2619 0 0 2 0 Minner Mrotsboxa
[(0)] .5 0 0 2 0 Minner Mrotsboxa
[(0.5)] .7381 0 0 2 0 Minner Mrotsboxa
[(1)] .97619 0 0 2 0 Minner Mrotsboxa
[()] .5 0 0 2 0 0 -1 Mouter Mrotsboxa
[(-1)] -0.0125 .01472 1 0 0 Minner Mrotsboxa
[(-0.5)] -0.0125 .16187 1 0 0 Minner Mrotsboxa
[(0)] -0.0125 .30902 1 0 0 Minner Mrotsboxa
[(0.5)] -0.0125 .45617 1 0 0 Minner Mrotsboxa
[(1)] -0.0125 .60332 1 0 0 Minner Mrotsboxa
[(All Epsilon)] .5 .61803 0 -4 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 .61903 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 g
p
p
.002 w
.02381 0 m
.02381 .00625 L
s
P
[(-1)] .02381 0 0 2 0 Minner Mrotshowa
p
.002 w
.2619 0 m
.2619 .00625 L
s
P
[(-0.5)] .2619 0 0 2 0 Minner Mrotshowa
p
.002 w
.5 0 m
.5 .00625 L
s
P
[(0)] .5 0 0 2 0 Minner Mrotshowa
p
.002 w
.7381 0 m
.7381 .00625 L
s
P
[(0.5)] .7381 0 0 2 0 Minner Mrotshowa
p
.002 w
.97619 0 m
.97619 .00625 L
s
P
[(1)] .97619 0 0 2 0 Minner Mrotshowa
p
.001 w
.07143 0 m
.07143 .00375 L
s
P
p
.001 w
.11905 0 m
.11905 .00375 L
s
P
p
.001 w
.16667 0 m
.16667 .00375 L
s
P
p
.001 w
.21429 0 m
.21429 .00375 L
s
P
p
.001 w
.30952 0 m
.30952 .00375 L
s
P
p
.001 w
.35714 0 m
.35714 .00375 L
s
P
p
.001 w
.40476 0 m
.40476 .00375 L
s
P
p
.001 w
.45238 0 m
.45238 .00375 L
s
P
p
.001 w
.54762 0 m
.54762 .00375 L
s
P
p
.001 w
.59524 0 m
.59524 .00375 L
s
P
p
.001 w
.64286 0 m
.64286 .00375 L
s
P
p
.001 w
.69048 0 m
.69048 .00375 L
s
P
p
.001 w
.78571 0 m
.78571 .00375 L
s
P
p
.001 w
.83333 0 m
.83333 .00375 L
s
P
p
.001 w
.88095 0 m
.88095 .00375 L
s
P
p
.001 w
.92857 0 m
.92857 .00375 L
s
P
[()] .5 0 0 2 0 0 -1 Mouter Mrotshowa
p
.002 w
0 0 m
1 0 L
s
P
p
.002 w
0 .01472 m
.00625 .01472 L
s
P
[(-1)] -0.0125 .01472 1 0 0 Minner Mrotshowa
p
.002 w
0 .16187 m
.00625 .16187 L
s
P
[(-0.5)] -0.0125 .16187 1 0 0 Minner Mrotshowa
p
.002 w
0 .30902 m
.00625 .30902 L
s
P
[(0)] -0.0125 .30902 1 0 0 Minner Mrotshowa
p
.002 w
0 .45617 m
.00625 .45617 L
s
P
[(0.5)] -0.0125 .45617 1 0 0 Minner Mrotshowa
p
.002 w
0 .60332 m
.00625 .60332 L
s
P
[(1)] -0.0125 .60332 1 0 0 Minner Mrotshowa
p
.001 w
0 .04415 m
.00375 .04415 L
s
P
p
.001 w
0 .07358 m
.00375 .07358 L
s
P
p
.001 w
0 .10301 m
.00375 .10301 L
s
P
p
.001 w
0 .13244 m
.00375 .13244 L
s
P
p
.001 w
0 .1913 m
.00375 .1913 L
s
P
p
.001 w
0 .22073 m
.00375 .22073 L
s
P
p
.001 w
0 .25016 m
.00375 .25016 L
s
P
p
.001 w
0 .27959 m
.00375 .27959 L
s
P
p
.001 w
0 .33845 m
.00375 .33845 L
s
P
p
.001 w
0 .36788 m
.00375 .36788 L
s
P
p
.001 w
0 .39731 m
.00375 .39731 L
s
P
p
.001 w
0 .42674 m
.00375 .42674 L
s
P
p
.001 w
0 .4856 m
.00375 .4856 L
s
P
p
.001 w
0 .51503 m
.00375 .51503 L
s
P
p
.001 w
0 .54446 m
.00375 .54446 L
s
P
p
.001 w
0 .57389 m
.00375 .57389 L
s
P
p
.002 w
0 0 m
0 .61803 L
s
P
P
p
p
.002 w
.02381 .61178 m
.02381 .61803 L
s
P
p
.002 w
.2619 .61178 m
.2619 .61803 L
s
P
p
.002 w
.5 .61178 m
.5 .61803 L
s
P
p
.002 w
.7381 .61178 m
.7381 .61803 L
s
P
p
.002 w
.97619 .61178 m
.97619 .61803 L
s
P
p
.001 w
.07143 .61428 m
.07143 .61803 L
s
P
p
.001 w
.11905 .61428 m
.11905 .61803 L
s
P
p
.001 w
.16667 .61428 m
.16667 .61803 L
s
P
p
.001 w
.21429 .61428 m
.21429 .61803 L
s
P
p
.001 w
.30952 .61428 m
.30952 .61803 L
s
P
p
.001 w
.35714 .61428 m
.35714 .61803 L
s
P
p
.001 w
.40476 .61428 m
.40476 .61803 L
s
P
p
.001 w
.45238 .61428 m
.45238 .61803 L
s
P
p
.001 w
.54762 .61428 m
.54762 .61803 L
s
P
p
.001 w
.59524 .61428 m
.59524 .61803 L
s
P
p
.001 w
.64286 .61428 m
.64286 .61803 L
s
P
p
.001 w
.69048 .61428 m
.69048 .61803 L
s
P
p
.001 w
.78571 .61428 m
.78571 .61803 L
s
P
p
.001 w
.83333 .61428 m
.83333 .61803 L
s
P
p
.001 w
.88095 .61428 m
.88095 .61803 L
s
P
p
.001 w
.92857 .61428 m
.92857 .61803 L
s
P
[(All Epsilon)] .5 .61803 0 -4 Mshowa
p
.002 w
0 .61803 m
1 .61803 L
s
P
p
.002 w
.99375 .01472 m
1 .01472 L
s
P
p
.002 w
.99375 .16187 m
1 .16187 L
s
P
p
.002 w
.99375 .30902 m
1 .30902 L
s
P
p
.002 w
.99375 .45617 m
1 .45617 L
s
P
p
.002 w
.99375 .60332 m
1 .60332 L
s
P
p
.001 w
.99625 .04415 m
1 .04415 L
s
P
p
.001 w
.99625 .07358 m
1 .07358 L
s
P
p
.001 w
.99625 .10301 m
1 .10301 L
s
P
p
.001 w
.99625 .13244 m
1 .13244 L
s
P
p
.001 w
.99625 .1913 m
1 .1913 L
s
P
p
.001 w
.99625 .22073 m
1 .22073 L
s
P
p
.001 w
.99625 .25016 m
1 .25016 L
s
P
p
.001 w
.99625 .27959 m
1 .27959 L
s
P
p
.001 w
.99625 .33845 m
1 .33845 L
s
P
p
.001 w
.99625 .36788 m
1 .36788 L
s
P
p
.001 w
.99625 .39731 m
1 .39731 L
s
P
p
.001 w
.99625 .42674 m
1 .42674 L
s
P
p
.001 w
.99625 .4856 m
1 .4856 L
s
P
p
.001 w
.99625 .51503 m
1 .51503 L
s
P
p
.001 w
.99625 .54446 m
1 .54446 L
s
P
p
.001 w
.99625 .57389 m
1 .57389 L
s
P
p
.002 w
1 0 m
1 .61803 L
s
P
P
p
P
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
p
p
.001 w
.02381 .01472 m
.02505 .01472 L
.02629 .01475 L
.02753 .0148 L
.02877 .01487 L
.03125 .01507 L
.03373 .01535 L
.03621 .0157 L
.03869 .01613 L
.04365 .01723 L
.04861 .01865 L
.05357 .02037 L
.06349 .02474 L
.08333 .03712 L
.10317 .05414 L
.14286 .10091 L
.18254 .16187 L
.22222 .23285 L
.2619 .30902 L
.30159 .38519 L
.34127 .45617 L
.38095 .51712 L
.42063 .56389 L
.44048 .58092 L
.4504 .5877 L
.46032 .59329 L
.47024 .59766 L
.4752 .59939 L
.48016 .6008 L
.48512 .6019 L
.4876 .60233 L
.49008 .60269 L
.49256 .60296 L
.4938 .60307 L
.49504 .60316 L
.49628 .60323 L
.49752 .60328 L
.49876 .60331 L
.5 .60332 L
.50124 .60331 L
.50248 .60328 L
.50372 .60323 L
.50496 .60316 L
.5062 .60307 L
.50744 .60296 L
.50992 .60269 L
.5124 .60233 L
.51488 .6019 L
.51984 .6008 L
.5248 .59939 L
Mistroke
.52976 .59766 L
.53968 .59329 L
.55952 .58092 L
.57937 .56389 L
.61905 .51712 L
.65873 .45617 L
.69841 .38519 L
.7381 .30902 L
.77778 .23285 L
.81746 .16187 L
.85714 .10091 L
.87698 .07553 L
.89683 .05414 L
.91667 .03712 L
.92659 .03033 L
.93651 .02474 L
.94643 .02037 L
.95139 .01865 L
.95635 .01723 L
.96131 .01613 L
.96379 .0157 L
.96627 .01535 L
.96875 .01507 L
.96999 .01496 L
.97123 .01487 L
.97247 .0148 L
.97371 .01475 L
.97495 .01472 L
.97619 .01472 L
Mfstroke
P
P
% End of Graphics
MathPictureEnd
end
showpage
%%EndDocument
 @endspecial 607 1429 a(Figure)g(3:)k(T)m(est)c(Problem)f(3,)g
Fl(y)q Fm(\()p Fl(x)p Fm(\))i(v)o(ersus)g Fl(x)p eop
%%Page: 4 4
4 3 bop 262 307 a Fn(T)l(est)15 b(Problem)e(4)h Fm(\(Linear\))g([6,)f
(p.136])262 357 y Fl(\017y)300 342 y Fk(00)331 357 y
Fm(+)c Fl(y)393 342 y Fk(0)415 357 y Fj(\000)g Fm(\(1)h(+)f
Fl(\017)p Fm(\))p Fl(y)k Fm(=)f(0,)59 b Fl(y)q Fm(\()p
Fj(\000)p Fm(1\))13 b(=)f(1)d(+)g(exp)q(\()p Fj(\000)p
Fm(2\))p Fl(;)18 b(y)q Fm(\(1\))13 b(=)e(1)e(+)h(exp\()p
Fj(\000)p Fm(2\(1)g(+)f Fl(\017)p Fm(\))p Fl(=\017)p
Fm(\))p Fl(:)262 407 y Fm(Exact)14 b(solution)f(is)h
Fl(y)q Fm(\()p Fl(x)p Fm(\))e(=)g(exp\()p Fl(x)d Fj(\000)h
Fm(1\))f(+)h(exp\()p Fj(\000)p Fm(\(1)f(+)h Fl(\017)p
Fm(\)\(1)f(+)h Fl(x)p Fm(\))p Fl(=\017)p Fm(\).)262 457
y(The)k(solution)f(has)h(a)g(b)q(oundary)f(la)o(y)o(er)h(of)f(width)h
Fl(O)q Fm(\()p Fl(\017)p Fm(\))g(at)f Fl(x)f Fm(=)f Fj(\000)p
Fm(1.)439 1762 y @beginspecial 72 @llx 72 @lly 540 @urx
720 @ury 2834 @rwi @setspecial
%%BeginDocument: ../PLOTS/pr4.ps

/Mathdict 150 dict def
Mathdict begin
/Mlmarg		1.0 72 mul def
/Mrmarg		1.0 72 mul def
/Mbmarg		1.0 72 mul def
/Mtmarg		1.0 72 mul def
/Mwidth		8.5 72 mul def
/Mheight	11 72 mul def
/Mtransform	{  } bind def
/Mnodistort	true def
/Mfixwid	true	def
/Mfixdash	false def
/Mrot		0	def
/Mpstart {
MathPictureStart
} bind def
/Mpend {
MathPictureEnd
} bind def
/Mscale {
0 1 0 1
5 -1 roll
MathScale
} bind def
/ISOLatin1Encoding dup where
{ pop pop }
{
[
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft
/logicalnot /hyphen /registered /macron
/degree /plusminus /twosuperior /threesuperior
/acute /mu /paragraph /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright
/onequarter /onehalf /threequarters /questiondown
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis
] def
} ifelse
/MFontDict 50 dict def
/MStrCat
{
exch
dup length
2 index length add
string
dup 3 1 roll
copy
length
exch dup
4 2 roll exch
putinterval
} def
/MCreateEncoding
{
1 index
255 string cvs
(-) MStrCat
1 index MStrCat
cvn exch
(Encoding) MStrCat
cvn dup where
{
exch get
}
{
pop
StandardEncoding
} ifelse
3 1 roll
dup MFontDict exch known not
{
1 index findfont
dup length dict
begin
{1 index /FID ne
{def}
{pop pop}
ifelse} forall
/Encoding 3 index
def
currentdict
end
1 index exch definefont pop
MFontDict 1 index
null put
}
if
exch pop
exch pop
} def
/ISOLatin1 { (ISOLatin1) MCreateEncoding } def
/ISO8859 { (ISOLatin1) MCreateEncoding } def
/Mcopyfont {
dup
maxlength
dict
exch
{
1 index
/FID
eq
{
pop pop
}
{
2 index
3 1 roll
put
}
ifelse
}
forall
} def
/Plain	/Courier findfont Mcopyfont definefont pop
/Bold	/Courier-Bold findfont Mcopyfont definefont pop
/Italic /Courier-Oblique findfont Mcopyfont definefont pop
/MathPictureStart {
gsave
Mtransform
Mlmarg
Mbmarg
translate
Mwidth
Mlmarg Mrmarg add
sub
/Mwidth exch def
Mheight
Mbmarg Mtmarg add
sub
/Mheight exch def
/Mtmatrix
matrix currentmatrix
def
/Mgmatrix
matrix currentmatrix
def
} bind def
/MathPictureEnd {
grestore
} bind def
/MFill {
0 0 		moveto
Mwidth 0 	lineto
Mwidth Mheight 	lineto
0 Mheight 	lineto
fill
} bind def
/MPlotRegion {
3 index
Mwidth mul
2 index
Mheight mul
translate
exch sub
Mheight mul
/Mheight
exch def
exch sub
Mwidth mul
/Mwidth
exch def
} bind def
/MathSubStart {
Momatrix
Mgmatrix Mtmatrix
Mwidth Mheight
7 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
Mgmatrix setmatrix
9 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
2 copy translate
/Mtmatrix matrix currentmatrix def
3 -1 roll
exch sub
/Mheight exch def
sub
/Mwidth exch def
} bind def
/MathSubEnd {
/Mheight exch def
/Mwidth exch def
/Mtmatrix exch def
dup setmatrix
/Mgmatrix exch def
/Momatrix exch def
} bind def
/Mdot {
moveto
0 0 rlineto
stroke
} bind def
/Mtetra {
moveto
lineto
lineto
lineto
fill
} bind def
/Metetra {
moveto
lineto
lineto
lineto
closepath
gsave
fill
grestore
0 setgray
stroke
} bind def
/Mistroke {
flattenpath
0 0 0
{
4 2 roll
pop pop
}
{
4 -1 roll
2 index
sub dup mul
4 -1 roll
2 index
sub dup mul
add sqrt
4 -1 roll
add
3 1 roll
}
{
stop
}
{
stop
}
pathforall
pop pop
currentpoint
stroke
moveto
currentdash
3 -1 roll
add
setdash
} bind def
/Mfstroke {
stroke
currentdash
pop 0
setdash
} bind def
/Mrotsboxa {
gsave
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
grestore
Msboxa
3  -1 roll
/Mtmatrix
exch def
/Mrot
0 def
} bind def
/Msboxa {
newpath
5 -1 roll
Mvboxa
pop
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Msboxa1
5 -3 roll
Msboxa1
Mboxrot
[
7 -2 roll
2 copy
[
3 1 roll
10 -1 roll
9 -1 roll
]
6 1 roll
5 -2 roll
]
} bind def
/Msboxa1 {
sub
2 div
dup
2 index
1 add
mul
3 -1 roll
-1 add
3 -1 roll
mul
} bind def
/Mvboxa	{
Mfixwid
{
Mvboxa1
}
{
dup
Mwidthcal
0 exch
{
add
}
forall
exch
Mvboxa1
4 index
7 -1 roll
add
4 -1 roll
pop
3 1 roll
}
ifelse
} bind def
/Mvboxa1 {
gsave
newpath
[ true
3 -1 roll
{
Mbbox
5 -1 roll
{
0
5 1 roll
}
{
7 -1 roll
exch sub
(m) stringwidth pop
.3 mul
sub
7 1 roll
6 -1 roll
4 -1 roll
Mmin
3 -1 roll
5 index
add
5 -1 roll
4 -1 roll
Mmax
4 -1 roll
}
ifelse
false
}
forall
{ stop } if
counttomark
1 add
4 roll
]
grestore
} bind def
/Mbbox {
1 dict begin
0 0 moveto
/temp (T) def
{	gsave
currentpoint newpath moveto
temp 0 3 -1 roll put temp
false charpath flattenpath currentpoint
pathbbox
grestore moveto lineto moveto} forall
pathbbox
newpath
end
} bind def
/Mmin {
2 copy
gt
{ exch } if
pop
} bind def
/Mmax {
2 copy
lt
{ exch } if
pop
} bind def
/Mrotshowa {
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
Mgmatrix setmatrix
Mshowa
/Mtmatrix
exch def
/Mrot 0 def
} bind def
/Mshowa {
4 -2 roll
moveto
2 index
Mtmatrix setmatrix
Mvboxa
7 1 roll
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Mshowa1
4 1 roll
Mshowa1
rmoveto
currentpoint
Mfixwid
{
Mshowax
}
{
Mshoway
}
ifelse
pop pop pop pop
Mgmatrix setmatrix
} bind def
/Mshowax {	
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
Mfixdash
{
Mfixdashp		
}
if
show
} for
} bind def
/Mfixdashp {
dup
length
1
gt
1 index
true exch
{
45
eq
and
} forall
and
{
gsave
(--)		
stringwidth pop
(-)
stringwidth pop
sub
2 div
0 rmoveto
dup
length
1 sub
{
(-)
show
}
repeat
grestore
}
if
} bind def	
/Mshoway {
3 index
Mwidthcal
5 1 roll
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
[
6 index
aload
length
2 add
-1 roll
{
pop
Strform
stringwidth
pop
neg 
exch
add
0 rmoveto
}
exch
kshow
cleartomark
} for
pop	
} bind def
/Mwidthcal {
[
exch
{
Mwidthcal1
}
forall
]
[
exch
dup
Maxlen
-1 add
0 1
3 -1 roll
{
[
exch
2 index
{		 
1 index	
Mget
exch
}
forall		
pop
Maxget
exch
}
for
pop
]
Mreva
} bind def
/Mreva	{
[
exch
aload
length
-1 1
{1 roll}
for
]
} bind def
/Mget	{
1 index
length
-1 add
1 index
ge
{
get
}
{
pop pop
0
}
ifelse
} bind def
/Maxlen	{
[
exch
{
length
}
forall
Maxget
} bind def
/Maxget	{
counttomark
-1 add
1 1
3 -1 roll
{
pop
Mmax
}
for
exch
pop
} bind def
/Mwidthcal1 {
[
exch
{
Strform
stringwidth
pop
}
forall
]
} bind def
/Strform {
/tem (x) def
tem 0
3 -1 roll
put
tem
} bind def
/Mshowa1 {
2 copy
add
4 1 roll
sub
mul
sub
-2 div
} bind def
/MathScale {
Mwidth
Mheight
Mlp
translate
scale
/yscale exch def
/ybias exch def
/xscale exch def
/xbias exch def
/Momatrix
xscale yscale matrix scale
xbias ybias matrix translate
matrix concatmatrix def
/Mgmatrix
matrix currentmatrix
def
} bind def
/Mlp {
3 copy
Mlpfirst
{
Mnodistort
{
Mmin
dup
} if
4 index
2 index
2 index
Mlprun
11 index
11 -1 roll
10 -4 roll
Mlp1
8 index
9 -5 roll
Mlp1
4 -1 roll
and
{ exit } if
3 -1 roll
pop pop
} loop
exch
3 1 roll
7 -3 roll
pop pop pop
} bind def
/Mlpfirst {
3 -1 roll
dup length
2 copy
-2 add
get
aload
pop pop pop
4 -2 roll
-1 add
get
aload
pop pop pop
6 -1 roll
3 -1 roll
5 -1 roll
sub
div
4 1 roll
exch sub
div
} bind def
/Mlprun {
2 copy
4 index
0 get
dup
4 1 roll
Mlprun1
3 copy
8 -2 roll
9 -1 roll
{
3 copy
Mlprun1
3 copy
11 -3 roll
/gt Mlpminmax
8 3 roll
11 -3 roll
/lt Mlpminmax
8 3 roll
} forall
pop pop pop pop
3 1 roll
pop pop
aload pop
5 -1 roll
aload pop
exch
6 -1 roll
Mlprun2
8 2 roll
4 -1 roll
Mlprun2
6 2 roll
3 -1 roll
Mlprun2
4 2 roll
exch
Mlprun2
6 2 roll
} bind def
/Mlprun1 {
aload pop
exch
6 -1 roll
5 -1 roll
mul add
4 -2 roll
mul
3 -1 roll
add
} bind def
/Mlprun2 {
2 copy
add 2 div
3 1 roll
exch sub
} bind def
/Mlpminmax {
cvx
2 index
6 index
2 index
exec
{
7 -3 roll
4 -1 roll
} if
1 index
5 index
3 -1 roll
exec
{
4 1 roll
pop
5 -1 roll
aload
pop pop
4 -1 roll
aload pop
[
8 -2 roll
pop
5 -2 roll
pop
6 -2 roll
pop
5 -1 roll
]
4 1 roll
pop
}
{
pop pop pop
} ifelse
} bind def
/Mlp1 {
5 index
3 index	sub
5 index
2 index mul
1 index
le
1 index
0 le
or
dup
not
{
1 index
3 index	div
.99999 mul
8 -1 roll
pop
7 1 roll
}
if
8 -1 roll
2 div
7 -2 roll
pop sub
5 index
6 -3 roll
pop pop
mul sub
exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
outflag
1
eq
{
/outflag 0 def
/intop 0 def
/inrht 0 def
} if		
5 index
gsave
Mtmatrix setmatrix
Mvboxa pop
grestore
3 -1 roll
pop
dup
intop
gt
{
/intop
exch def
}
{ pop }
ifelse
dup
inrht
gt
{
/inrht
exch def
}
{ pop }
ifelse
pop
/inflag
1 def
} bind def
/Mouter {
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
inflag
1 eq
{
dup
0 lt
{
dup
intop
mul
neg
/yadtop
exch def
} if
dup
0 gt
{
dup
intop
mul
/yadbot
exch def
}
if
pop
dup
0 lt
{
dup
inrht
mul
neg
/xadrht
exch def
} if
dup
0 gt
{
dup
inrht
mul
/xadlft
exch def
} if
pop
/outflag 1 def
}
{ pop pop}
ifelse
/inflag 0 def
/inrht 0 def
/intop 0 def
} bind def	
/Mboxout {
outflag
1
eq
{
4 -1
roll
xadlft
leadjust
add
sub
4 1 roll
3 -1
roll
yadbot
leadjust
add
sub
3 1
roll
exch
xadrht
leadjust
add
add
exch
yadtop
leadjust
add
add
/outflag 0 def
/xadlft 0 def
/yadbot 0 def
/xadrht 0 def
/yadtop 0 def
} if
} bind def
/leadjust {
(m) stringwidth pop
.5 mul
} bind def
/Mrotcheck {
dup
90
eq
{
yadbot
/yadbot
xadrht
def	
/xadrht
yadtop
def
/yadtop
xadlft
def
/xadlft
exch
def
}
if
dup
cos
1 index
sin
Checkaux
dup
cos
1 index
sin neg
exch
Checkaux
3 1 roll
pop pop
} bind def
/Checkaux {
4 index
exch
4 index
mul
3 1 roll
mul add
4 1 roll
} bind def
/Mboxrot {
Mrot
90 eq
{
brotaux
4 2
roll
}
if
Mrot
180 eq
{
4 2
roll
brotaux
4 2
roll
brotaux
}	
if
Mrot
270 eq
{
4 2
roll
brotaux
}
if
} bind def
/brotaux {
neg
exch
neg
} bind def
/Mabsproc {
0
matrix defaultmatrix
dtransform idtransform
dup mul exch
dup mul
add sqrt
} bind def
/Mabswid {
Mabsproc
setlinewidth	
} bind def
/Mabsdash {
exch
[
exch
{
Mabsproc
}
forall
]
exch
setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop}
repeat
} bind def
} ifelse
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/setcmykcolor where
{ pop}
{ /setcmykcolor {
4 1
roll
[
4 1 
roll
]
{
1 index
sub
1
sub neg
dup
0
lt
{
pop
0
}
if
dup
1
gt
{
pop
1
}
if
exch
} forall
pop
setrgbcolor
} bind def
} ifelse
/Mcharproc
{
currentfile
(x)
readhexstring
pop
0 get
exch
div
} bind def
/Mshadeproc
{
dup
3 1
roll
{
dup
Mcharproc
3 1
roll
} repeat
1 eq
{
setgray
}
{
3 eq
{
setrgbcolor
}
{
setcmykcolor
} ifelse
} ifelse
} bind def
/Mrectproc
{
3 index
2 index
moveto
2 index
3 -1
roll
lineto
dup
3 1
roll
lineto
lineto
fill
} bind def
/Mcolorimage
{
7 1
roll
pop
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
9 index
Mshadeproc
Mrectproc
} for
pop
} for
pop pop pop pop
} bind def
/Mimage
{
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
Mcharproc
setgray
Mrectproc
} for
pop
} for
pop pop pop
} bind def

MathPictureStart
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.5 0.47619 0 0.515028 [
[(-1)] .02381 0 0 2 0 Minner Mrotsboxa
[(-0.5)] .2619 0 0 2 0 Minner Mrotsboxa
[(0)] .5 0 0 2 0 Minner Mrotsboxa
[(0.5)] .7381 0 0 2 0 Minner Mrotsboxa
[(1)] .97619 0 0 2 0 Minner Mrotsboxa
[()] .5 0 0 2 0 0 -1 Mouter Mrotsboxa
[(0)] -0.0125 0 1 0 0 Minner Mrotsboxa
[(0.2)] -0.0125 .10301 1 0 0 Minner Mrotsboxa
[(0.4)] -0.0125 .20601 1 0 0 Minner Mrotsboxa
[(0.6)] -0.0125 .30902 1 0 0 Minner Mrotsboxa
[(0.8)] -0.0125 .41202 1 0 0 Minner Mrotsboxa
[(1)] -0.0125 .51503 1 0 0 Minner Mrotsboxa
[(Epsilon = 0.5, 0.1, 0.01)] .5 .61803 0 -4 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 .61903 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 g
p
p
.002 w
.02381 0 m
.02381 .00625 L
s
P
[(-1)] .02381 0 0 2 0 Minner Mrotshowa
p
.002 w
.2619 0 m
.2619 .00625 L
s
P
[(-0.5)] .2619 0 0 2 0 Minner Mrotshowa
p
.002 w
.5 0 m
.5 .00625 L
s
P
[(0)] .5 0 0 2 0 Minner Mrotshowa
p
.002 w
.7381 0 m
.7381 .00625 L
s
P
[(0.5)] .7381 0 0 2 0 Minner Mrotshowa
p
.002 w
.97619 0 m
.97619 .00625 L
s
P
[(1)] .97619 0 0 2 0 Minner Mrotshowa
p
.001 w
.07143 0 m
.07143 .00375 L
s
P
p
.001 w
.11905 0 m
.11905 .00375 L
s
P
p
.001 w
.16667 0 m
.16667 .00375 L
s
P
p
.001 w
.21429 0 m
.21429 .00375 L
s
P
p
.001 w
.30952 0 m
.30952 .00375 L
s
P
p
.001 w
.35714 0 m
.35714 .00375 L
s
P
p
.001 w
.40476 0 m
.40476 .00375 L
s
P
p
.001 w
.45238 0 m
.45238 .00375 L
s
P
p
.001 w
.54762 0 m
.54762 .00375 L
s
P
p
.001 w
.59524 0 m
.59524 .00375 L
s
P
p
.001 w
.64286 0 m
.64286 .00375 L
s
P
p
.001 w
.69048 0 m
.69048 .00375 L
s
P
p
.001 w
.78571 0 m
.78571 .00375 L
s
P
p
.001 w
.83333 0 m
.83333 .00375 L
s
P
p
.001 w
.88095 0 m
.88095 .00375 L
s
P
p
.001 w
.92857 0 m
.92857 .00375 L
s
P
[()] .5 0 0 2 0 0 -1 Mouter Mrotshowa
p
.002 w
0 0 m
1 0 L
s
P
p
.002 w
0 0 m
.00625 0 L
s
P
[(0)] -0.0125 0 1 0 0 Minner Mrotshowa
p
.002 w
0 .10301 m
.00625 .10301 L
s
P
[(0.2)] -0.0125 .10301 1 0 0 Minner Mrotshowa
p
.002 w
0 .20601 m
.00625 .20601 L
s
P
[(0.4)] -0.0125 .20601 1 0 0 Minner Mrotshowa
p
.002 w
0 .30902 m
.00625 .30902 L
s
P
[(0.6)] -0.0125 .30902 1 0 0 Minner Mrotshowa
p
.002 w
0 .41202 m
.00625 .41202 L
s
P
[(0.8)] -0.0125 .41202 1 0 0 Minner Mrotshowa
p
.002 w
0 .51503 m
.00625 .51503 L
s
P
[(1)] -0.0125 .51503 1 0 0 Minner Mrotshowa
p
.001 w
0 .0206 m
.00375 .0206 L
s
P
p
.001 w
0 .0412 m
.00375 .0412 L
s
P
p
.001 w
0 .0618 m
.00375 .0618 L
s
P
p
.001 w
0 .0824 m
.00375 .0824 L
s
P
p
.001 w
0 .12361 m
.00375 .12361 L
s
P
p
.001 w
0 .14421 m
.00375 .14421 L
s
P
p
.001 w
0 .16481 m
.00375 .16481 L
s
P
p
.001 w
0 .18541 m
.00375 .18541 L
s
P
p
.001 w
0 .22661 m
.00375 .22661 L
s
P
p
.001 w
0 .24721 m
.00375 .24721 L
s
P
p
.001 w
0 .26781 m
.00375 .26781 L
s
P
p
.001 w
0 .28842 m
.00375 .28842 L
s
P
p
.001 w
0 .32962 m
.00375 .32962 L
s
P
p
.001 w
0 .35022 m
.00375 .35022 L
s
P
p
.001 w
0 .37082 m
.00375 .37082 L
s
P
p
.001 w
0 .39142 m
.00375 .39142 L
s
P
p
.001 w
0 .43262 m
.00375 .43262 L
s
P
p
.001 w
0 .45322 m
.00375 .45322 L
s
P
p
.001 w
0 .47383 m
.00375 .47383 L
s
P
p
.001 w
0 .49443 m
.00375 .49443 L
s
P
p
.001 w
0 .53563 m
.00375 .53563 L
s
P
p
.001 w
0 .55623 m
.00375 .55623 L
s
P
p
.001 w
0 .57683 m
.00375 .57683 L
s
P
p
.001 w
0 .59743 m
.00375 .59743 L
s
P
p
.002 w
0 0 m
0 .61803 L
s
P
P
p
p
.002 w
.02381 .61178 m
.02381 .61803 L
s
P
p
.002 w
.2619 .61178 m
.2619 .61803 L
s
P
p
.002 w
.5 .61178 m
.5 .61803 L
s
P
p
.002 w
.7381 .61178 m
.7381 .61803 L
s
P
p
.002 w
.97619 .61178 m
.97619 .61803 L
s
P
p
.001 w
.07143 .61428 m
.07143 .61803 L
s
P
p
.001 w
.11905 .61428 m
.11905 .61803 L
s
P
p
.001 w
.16667 .61428 m
.16667 .61803 L
s
P
p
.001 w
.21429 .61428 m
.21429 .61803 L
s
P
p
.001 w
.30952 .61428 m
.30952 .61803 L
s
P
p
.001 w
.35714 .61428 m
.35714 .61803 L
s
P
p
.001 w
.40476 .61428 m
.40476 .61803 L
s
P
p
.001 w
.45238 .61428 m
.45238 .61803 L
s
P
p
.001 w
.54762 .61428 m
.54762 .61803 L
s
P
p
.001 w
.59524 .61428 m
.59524 .61803 L
s
P
p
.001 w
.64286 .61428 m
.64286 .61803 L
s
P
p
.001 w
.69048 .61428 m
.69048 .61803 L
s
P
p
.001 w
.78571 .61428 m
.78571 .61803 L
s
P
p
.001 w
.83333 .61428 m
.83333 .61803 L
s
P
p
.001 w
.88095 .61428 m
.88095 .61803 L
s
P
p
.001 w
.92857 .61428 m
.92857 .61803 L
s
P
[(Epsilon = 0.5, 0.1, 0.01)] .5 .61803 0 -4 Mshowa
p
.002 w
0 .61803 m
1 .61803 L
s
P
p
.002 w
.99375 0 m
1 0 L
s
P
p
.002 w
.99375 .10301 m
1 .10301 L
s
P
p
.002 w
.99375 .20601 m
1 .20601 L
s
P
p
.002 w
.99375 .30902 m
1 .30902 L
s
P
p
.002 w
.99375 .41202 m
1 .41202 L
s
P
p
.002 w
.99375 .51503 m
1 .51503 L
s
P
p
.001 w
.99625 .0206 m
1 .0206 L
s
P
p
.001 w
.99625 .0412 m
1 .0412 L
s
P
p
.001 w
.99625 .0618 m
1 .0618 L
s
P
p
.001 w
.99625 .0824 m
1 .0824 L
s
P
p
.001 w
.99625 .12361 m
1 .12361 L
s
P
p
.001 w
.99625 .14421 m
1 .14421 L
s
P
p
.001 w
.99625 .16481 m
1 .16481 L
s
P
p
.001 w
.99625 .18541 m
1 .18541 L
s
P
p
.001 w
.99625 .22661 m
1 .22661 L
s
P
p
.001 w
.99625 .24721 m
1 .24721 L
s
P
p
.001 w
.99625 .26781 m
1 .26781 L
s
P
p
.001 w
.99625 .28842 m
1 .28842 L
s
P
p
.001 w
.99625 .32962 m
1 .32962 L
s
P
p
.001 w
.99625 .35022 m
1 .35022 L
s
P
p
.001 w
.99625 .37082 m
1 .37082 L
s
P
p
.001 w
.99625 .39142 m
1 .39142 L
s
P
p
.001 w
.99625 .43262 m
1 .43262 L
s
P
p
.001 w
.99625 .45322 m
1 .45322 L
s
P
p
.001 w
.99625 .47383 m
1 .47383 L
s
P
p
.001 w
.99625 .49443 m
1 .49443 L
s
P
p
.001 w
.99625 .53563 m
1 .53563 L
s
P
p
.001 w
.99625 .55623 m
1 .55623 L
s
P
p
.001 w
.99625 .57683 m
1 .57683 L
s
P
p
.001 w
.99625 .59743 m
1 .59743 L
s
P
p
.002 w
1 0 m
1 .61803 L
s
P
P
p
P
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
p
p
p
.001 w
.02381 .58473 m
.06349 .47686 L
.10317 .39472 L
.14286 .33278 L
.18254 .28674 L
.20238 .26862 L
.22222 .25329 L
.24206 .24045 L
.2619 .22984 L
.28175 .22122 L
.30159 .2144 L
.32143 .2092 L
.33135 .20716 L
.34127 .20546 L
.35119 .2041 L
.36111 .20305 L
.36607 .20264 L
.37103 .2023 L
.37599 .20204 L
.38095 .20184 L
.38343 .20177 L
.38467 .20174 L
.38591 .20172 L
.38715 .2017 L
.38839 .20168 L
.38963 .20167 L
.39087 .20166 L
.39211 .20166 L
.39335 .20166 L
.39459 .20166 L
.39583 .20167 L
.39831 .2017 L
.39955 .20172 L
.40079 .20174 L
.40575 .20188 L
.40823 .20197 L
.41071 .20208 L
.42063 .20266 L
.43056 .20347 L
.44048 .20451 L
.46032 .20724 L
.48016 .21079 L
.5 .21511 L
.53968 .2259 L
.57937 .23938 L
.61905 .25539 L
.65873 .27386 L
.69841 .29475 L
.7381 .3181 L
.77778 .34398 L
Mistroke
.81746 .3725 L
.85714 .40381 L
.89683 .43807 L
.93651 .47549 L
.97619 .5163 L
Mfstroke
P
P
p
p
.001 w
.02381 .58473 m
.03373 .48072 L
.04365 .39834 L
.05357 .33317 L
.06349 .28169 L
.07341 .24111 L
.08333 .2092 L
.09325 .18419 L
.10317 .16469 L
.1131 .14955 L
.12302 .13791 L
.13294 .12906 L
.14286 .12242 L
.15278 .11756 L
.1627 .11413 L
.16766 .11285 L
.17262 .11183 L
.17758 .11103 L
.18006 .11071 L
.18254 .11044 L
.18502 .11022 L
.1875 .11003 L
.18998 .10989 L
.19122 .10984 L
.19246 .10979 L
.1937 .10976 L
.19494 .10973 L
.19618 .10971 L
.19742 .1097 L
.19866 .1097 L
.1999 .1097 L
.20114 .10972 L
.20238 .10974 L
.20486 .10981 L
.2061 .10985 L
.20734 .1099 L
.2123 .11017 L
.21726 .11054 L
.22222 .11099 L
.24206 .11356 L
.2619 .11702 L
.30159 .12575 L
.34127 .1361 L
.38095 .14769 L
.42063 .16044 L
.46032 .17434 L
.5 .18948 L
.53968 .20594 L
.57937 .22383 L
.61905 .24328 L
Mistroke
.65873 .26442 L
.69841 .2874 L
.7381 .31238 L
.77778 .33953 L
.81746 .36903 L
.85714 .4011 L
.89683 .43596 L
.93651 .47385 L
.97619 .51503 L
Mfstroke
P
P
p
p
.001 w
.02381 .58473 m
.02505 .4658 L
.02629 .37442 L
.02753 .30421 L
.02877 .25028 L
.03001 .20887 L
.03125 .17708 L
.03249 .15269 L
.03373 .13398 L
.03497 .11964 L
.03621 .10866 L
.03745 .10026 L
.03869 .09385 L
.03993 .08896 L
.04117 .08525 L
.04241 .08244 L
.04365 .08033 L
.04489 .07874 L
.04613 .07757 L
.04737 .07672 L
.04861 .0761 L
.04985 .07568 L
.05109 .07539 L
.05233 .07522 L
.05357 .07513 L
.05481 .07511 L
.05605 .07514 L
.05729 .0752 L
.05853 .0753 L
.06101 .07556 L
.06349 .07587 L
.10317 .08234 L
.14286 .0895 L
.18254 .09728 L
.22222 .10573 L
.2619 .11492 L
.30159 .12491 L
.34127 .13576 L
.38095 .14756 L
.42063 .16038 L
.46032 .17432 L
.5 .18947 L
.53968 .20593 L
.57937 .22383 L
.61905 .24328 L
.65873 .26442 L
.69841 .2874 L
.7381 .31238 L
.77778 .33953 L
.81746 .36903 L
Mistroke
.85714 .4011 L
.89683 .43596 L
.93651 .47385 L
.97619 .51503 L
Mfstroke
P
P
P
% End of Graphics
MathPictureEnd
end
showpage
%%EndDocument
 @endspecial 607 1381 a(Figure)j(4:)k(T)m(est)c(Problem)f(4,)g
Fl(y)q Fm(\()p Fl(x)p Fm(\))i(v)o(ersus)g Fl(x)p eop
%%Page: 5 5
5 4 bop 262 307 a Fn(T)l(est)15 b(Problem)e(5)h Fm(\(Linear\))g([6,)f
(p.138])262 357 y Fl(\017y)300 342 y Fk(00)331 357 y
Fj(\000)c Fl(xy)417 342 y Fk(0)439 357 y Fj(\000)g Fl(y)k
Fm(=)f Fj(\000)p Fm(\(1)e(+)f Fl(\017\031)719 342 y Fi(2)738
357 y Fm(\))e(cos\()p Fl(\031)q(x)p Fm(\))j(+)f Fl(\031)q(x)e
Fm(sin\()p Fl(\031)q(x)p Fm(\),)60 b Fl(y)q Fm(\()p Fj(\000)p
Fm(1\))12 b(=)g Fl(y)q Fm(\(1\))h(=)f Fj(\000)p Fm(1.)262
407 y(Exact)i(solution)f(is)h Fl(y)q Fm(\()p Fl(x)p Fm(\))e(=)g(cos\()p
Fl(\031)q(x)p Fm(\).)262 457 y(The)i(problem)e(has)i(a)g(turning)g(p)q
(oin)o(t)f(at)h Fl(x)d Fm(=)h(0)i(but)g(the)g(solution)f(is)h(smo)q
(oth.)439 1760 y @beginspecial 72 @llx 72 @lly 540 @urx
720 @ury 2834 @rwi @setspecial
%%BeginDocument: ../PLOTS/pr5.ps

/Mathdict 150 dict def
Mathdict begin
/Mlmarg		1.0 72 mul def
/Mrmarg		1.0 72 mul def
/Mbmarg		1.0 72 mul def
/Mtmarg		1.0 72 mul def
/Mwidth		8.5 72 mul def
/Mheight	11 72 mul def
/Mtransform	{  } bind def
/Mnodistort	true def
/Mfixwid	true	def
/Mfixdash	false def
/Mrot		0	def
/Mpstart {
MathPictureStart
} bind def
/Mpend {
MathPictureEnd
} bind def
/Mscale {
0 1 0 1
5 -1 roll
MathScale
} bind def
/ISOLatin1Encoding dup where
{ pop pop }
{
[
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft
/logicalnot /hyphen /registered /macron
/degree /plusminus /twosuperior /threesuperior
/acute /mu /paragraph /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright
/onequarter /onehalf /threequarters /questiondown
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis
] def
} ifelse
/MFontDict 50 dict def
/MStrCat
{
exch
dup length
2 index length add
string
dup 3 1 roll
copy
length
exch dup
4 2 roll exch
putinterval
} def
/MCreateEncoding
{
1 index
255 string cvs
(-) MStrCat
1 index MStrCat
cvn exch
(Encoding) MStrCat
cvn dup where
{
exch get
}
{
pop
StandardEncoding
} ifelse
3 1 roll
dup MFontDict exch known not
{
1 index findfont
dup length dict
begin
{1 index /FID ne
{def}
{pop pop}
ifelse} forall
/Encoding 3 index
def
currentdict
end
1 index exch definefont pop
MFontDict 1 index
null put
}
if
exch pop
exch pop
} def
/ISOLatin1 { (ISOLatin1) MCreateEncoding } def
/ISO8859 { (ISOLatin1) MCreateEncoding } def
/Mcopyfont {
dup
maxlength
dict
exch
{
1 index
/FID
eq
{
pop pop
}
{
2 index
3 1 roll
put
}
ifelse
}
forall
} def
/Plain	/Courier findfont Mcopyfont definefont pop
/Bold	/Courier-Bold findfont Mcopyfont definefont pop
/Italic /Courier-Oblique findfont Mcopyfont definefont pop
/MathPictureStart {
gsave
Mtransform
Mlmarg
Mbmarg
translate
Mwidth
Mlmarg Mrmarg add
sub
/Mwidth exch def
Mheight
Mbmarg Mtmarg add
sub
/Mheight exch def
/Mtmatrix
matrix currentmatrix
def
/Mgmatrix
matrix currentmatrix
def
} bind def
/MathPictureEnd {
grestore
} bind def
/MFill {
0 0 		moveto
Mwidth 0 	lineto
Mwidth Mheight 	lineto
0 Mheight 	lineto
fill
} bind def
/MPlotRegion {
3 index
Mwidth mul
2 index
Mheight mul
translate
exch sub
Mheight mul
/Mheight
exch def
exch sub
Mwidth mul
/Mwidth
exch def
} bind def
/MathSubStart {
Momatrix
Mgmatrix Mtmatrix
Mwidth Mheight
7 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
Mgmatrix setmatrix
9 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
2 copy translate
/Mtmatrix matrix currentmatrix def
3 -1 roll
exch sub
/Mheight exch def
sub
/Mwidth exch def
} bind def
/MathSubEnd {
/Mheight exch def
/Mwidth exch def
/Mtmatrix exch def
dup setmatrix
/Mgmatrix exch def
/Momatrix exch def
} bind def
/Mdot {
moveto
0 0 rlineto
stroke
} bind def
/Mtetra {
moveto
lineto
lineto
lineto
fill
} bind def
/Metetra {
moveto
lineto
lineto
lineto
closepath
gsave
fill
grestore
0 setgray
stroke
} bind def
/Mistroke {
flattenpath
0 0 0
{
4 2 roll
pop pop
}
{
4 -1 roll
2 index
sub dup mul
4 -1 roll
2 index
sub dup mul
add sqrt
4 -1 roll
add
3 1 roll
}
{
stop
}
{
stop
}
pathforall
pop pop
currentpoint
stroke
moveto
currentdash
3 -1 roll
add
setdash
} bind def
/Mfstroke {
stroke
currentdash
pop 0
setdash
} bind def
/Mrotsboxa {
gsave
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
grestore
Msboxa
3  -1 roll
/Mtmatrix
exch def
/Mrot
0 def
} bind def
/Msboxa {
newpath
5 -1 roll
Mvboxa
pop
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Msboxa1
5 -3 roll
Msboxa1
Mboxrot
[
7 -2 roll
2 copy
[
3 1 roll
10 -1 roll
9 -1 roll
]
6 1 roll
5 -2 roll
]
} bind def
/Msboxa1 {
sub
2 div
dup
2 index
1 add
mul
3 -1 roll
-1 add
3 -1 roll
mul
} bind def
/Mvboxa	{
Mfixwid
{
Mvboxa1
}
{
dup
Mwidthcal
0 exch
{
add
}
forall
exch
Mvboxa1
4 index
7 -1 roll
add
4 -1 roll
pop
3 1 roll
}
ifelse
} bind def
/Mvboxa1 {
gsave
newpath
[ true
3 -1 roll
{
Mbbox
5 -1 roll
{
0
5 1 roll
}
{
7 -1 roll
exch sub
(m) stringwidth pop
.3 mul
sub
7 1 roll
6 -1 roll
4 -1 roll
Mmin
3 -1 roll
5 index
add
5 -1 roll
4 -1 roll
Mmax
4 -1 roll
}
ifelse
false
}
forall
{ stop } if
counttomark
1 add
4 roll
]
grestore
} bind def
/Mbbox {
1 dict begin
0 0 moveto
/temp (T) def
{	gsave
currentpoint newpath moveto
temp 0 3 -1 roll put temp
false charpath flattenpath currentpoint
pathbbox
grestore moveto lineto moveto} forall
pathbbox
newpath
end
} bind def
/Mmin {
2 copy
gt
{ exch } if
pop
} bind def
/Mmax {
2 copy
lt
{ exch } if
pop
} bind def
/Mrotshowa {
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
Mgmatrix setmatrix
Mshowa
/Mtmatrix
exch def
/Mrot 0 def
} bind def
/Mshowa {
4 -2 roll
moveto
2 index
Mtmatrix setmatrix
Mvboxa
7 1 roll
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Mshowa1
4 1 roll
Mshowa1
rmoveto
currentpoint
Mfixwid
{
Mshowax
}
{
Mshoway
}
ifelse
pop pop pop pop
Mgmatrix setmatrix
} bind def
/Mshowax {	
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
Mfixdash
{
Mfixdashp		
}
if
show
} for
} bind def
/Mfixdashp {
dup
length
1
gt
1 index
true exch
{
45
eq
and
} forall
and
{
gsave
(--)		
stringwidth pop
(-)
stringwidth pop
sub
2 div
0 rmoveto
dup
length
1 sub
{
(-)
show
}
repeat
grestore
}
if
} bind def	
/Mshoway {
3 index
Mwidthcal
5 1 roll
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
[
6 index
aload
length
2 add
-1 roll
{
pop
Strform
stringwidth
pop
neg 
exch
add
0 rmoveto
}
exch
kshow
cleartomark
} for
pop	
} bind def
/Mwidthcal {
[
exch
{
Mwidthcal1
}
forall
]
[
exch
dup
Maxlen
-1 add
0 1
3 -1 roll
{
[
exch
2 index
{		 
1 index	
Mget
exch
}
forall		
pop
Maxget
exch
}
for
pop
]
Mreva
} bind def
/Mreva	{
[
exch
aload
length
-1 1
{1 roll}
for
]
} bind def
/Mget	{
1 index
length
-1 add
1 index
ge
{
get
}
{
pop pop
0
}
ifelse
} bind def
/Maxlen	{
[
exch
{
length
}
forall
Maxget
} bind def
/Maxget	{
counttomark
-1 add
1 1
3 -1 roll
{
pop
Mmax
}
for
exch
pop
} bind def
/Mwidthcal1 {
[
exch
{
Strform
stringwidth
pop
}
forall
]
} bind def
/Strform {
/tem (x) def
tem 0
3 -1 roll
put
tem
} bind def
/Mshowa1 {
2 copy
add
4 1 roll
sub
mul
sub
-2 div
} bind def
/MathScale {
Mwidth
Mheight
Mlp
translate
scale
/yscale exch def
/ybias exch def
/xscale exch def
/xbias exch def
/Momatrix
xscale yscale matrix scale
xbias ybias matrix translate
matrix concatmatrix def
/Mgmatrix
matrix currentmatrix
def
} bind def
/Mlp {
3 copy
Mlpfirst
{
Mnodistort
{
Mmin
dup
} if
4 index
2 index
2 index
Mlprun
11 index
11 -1 roll
10 -4 roll
Mlp1
8 index
9 -5 roll
Mlp1
4 -1 roll
and
{ exit } if
3 -1 roll
pop pop
} loop
exch
3 1 roll
7 -3 roll
pop pop pop
} bind def
/Mlpfirst {
3 -1 roll
dup length
2 copy
-2 add
get
aload
pop pop pop
4 -2 roll
-1 add
get
aload
pop pop pop
6 -1 roll
3 -1 roll
5 -1 roll
sub
div
4 1 roll
exch sub
div
} bind def
/Mlprun {
2 copy
4 index
0 get
dup
4 1 roll
Mlprun1
3 copy
8 -2 roll
9 -1 roll
{
3 copy
Mlprun1
3 copy
11 -3 roll
/gt Mlpminmax
8 3 roll
11 -3 roll
/lt Mlpminmax
8 3 roll
} forall
pop pop pop pop
3 1 roll
pop pop
aload pop
5 -1 roll
aload pop
exch
6 -1 roll
Mlprun2
8 2 roll
4 -1 roll
Mlprun2
6 2 roll
3 -1 roll
Mlprun2
4 2 roll
exch
Mlprun2
6 2 roll
} bind def
/Mlprun1 {
aload pop
exch
6 -1 roll
5 -1 roll
mul add
4 -2 roll
mul
3 -1 roll
add
} bind def
/Mlprun2 {
2 copy
add 2 div
3 1 roll
exch sub
} bind def
/Mlpminmax {
cvx
2 index
6 index
2 index
exec
{
7 -3 roll
4 -1 roll
} if
1 index
5 index
3 -1 roll
exec
{
4 1 roll
pop
5 -1 roll
aload
pop pop
4 -1 roll
aload pop
[
8 -2 roll
pop
5 -2 roll
pop
6 -2 roll
pop
5 -1 roll
]
4 1 roll
pop
}
{
pop pop pop
} ifelse
} bind def
/Mlp1 {
5 index
3 index	sub
5 index
2 index mul
1 index
le
1 index
0 le
or
dup
not
{
1 index
3 index	div
.99999 mul
8 -1 roll
pop
7 1 roll
}
if
8 -1 roll
2 div
7 -2 roll
pop sub
5 index
6 -3 roll
pop pop
mul sub
exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
outflag
1
eq
{
/outflag 0 def
/intop 0 def
/inrht 0 def
} if		
5 index
gsave
Mtmatrix setmatrix
Mvboxa pop
grestore
3 -1 roll
pop
dup
intop
gt
{
/intop
exch def
}
{ pop }
ifelse
dup
inrht
gt
{
/inrht
exch def
}
{ pop }
ifelse
pop
/inflag
1 def
} bind def
/Mouter {
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
inflag
1 eq
{
dup
0 lt
{
dup
intop
mul
neg
/yadtop
exch def
} if
dup
0 gt
{
dup
intop
mul
/yadbot
exch def
}
if
pop
dup
0 lt
{
dup
inrht
mul
neg
/xadrht
exch def
} if
dup
0 gt
{
dup
inrht
mul
/xadlft
exch def
} if
pop
/outflag 1 def
}
{ pop pop}
ifelse
/inflag 0 def
/inrht 0 def
/intop 0 def
} bind def	
/Mboxout {
outflag
1
eq
{
4 -1
roll
xadlft
leadjust
add
sub
4 1 roll
3 -1
roll
yadbot
leadjust
add
sub
3 1
roll
exch
xadrht
leadjust
add
add
exch
yadtop
leadjust
add
add
/outflag 0 def
/xadlft 0 def
/yadbot 0 def
/xadrht 0 def
/yadtop 0 def
} if
} bind def
/leadjust {
(m) stringwidth pop
.5 mul
} bind def
/Mrotcheck {
dup
90
eq
{
yadbot
/yadbot
xadrht
def	
/xadrht
yadtop
def
/yadtop
xadlft
def
/xadlft
exch
def
}
if
dup
cos
1 index
sin
Checkaux
dup
cos
1 index
sin neg
exch
Checkaux
3 1 roll
pop pop
} bind def
/Checkaux {
4 index
exch
4 index
mul
3 1 roll
mul add
4 1 roll
} bind def
/Mboxrot {
Mrot
90 eq
{
brotaux
4 2
roll
}
if
Mrot
180 eq
{
4 2
roll
brotaux
4 2
roll
brotaux
}	
if
Mrot
270 eq
{
4 2
roll
brotaux
}
if
} bind def
/brotaux {
neg
exch
neg
} bind def
/Mabsproc {
0
matrix defaultmatrix
dtransform idtransform
dup mul exch
dup mul
add sqrt
} bind def
/Mabswid {
Mabsproc
setlinewidth	
} bind def
/Mabsdash {
exch
[
exch
{
Mabsproc
}
forall
]
exch
setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop}
repeat
} bind def
} ifelse
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/setcmykcolor where
{ pop}
{ /setcmykcolor {
4 1
roll
[
4 1 
roll
]
{
1 index
sub
1
sub neg
dup
0
lt
{
pop
0
}
if
dup
1
gt
{
pop
1
}
if
exch
} forall
pop
setrgbcolor
} bind def
} ifelse
/Mcharproc
{
currentfile
(x)
readhexstring
pop
0 get
exch
div
} bind def
/Mshadeproc
{
dup
3 1
roll
{
dup
Mcharproc
3 1
roll
} repeat
1 eq
{
setgray
}
{
3 eq
{
setrgbcolor
}
{
setcmykcolor
} ifelse
} ifelse
} bind def
/Mrectproc
{
3 index
2 index
moveto
2 index
3 -1
roll
lineto
dup
3 1
roll
lineto
lineto
fill
} bind def
/Mcolorimage
{
7 1
roll
pop
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
9 index
Mshadeproc
Mrectproc
} for
pop
} for
pop pop pop pop
} bind def
/Mimage
{
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
Mcharproc
setgray
Mrectproc
} for
pop
} for
pop pop pop
} bind def

MathPictureStart
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.5 0.47619 0.309017 0.294302 [
[(-1)] .02381 0 0 2 0 Minner Mrotsboxa
[(-0.5)] .2619 0 0 2 0 Minner Mrotsboxa
[(0)] .5 0 0 2 0 Minner Mrotsboxa
[(0.5)] .7381 0 0 2 0 Minner Mrotsboxa
[(1)] .97619 0 0 2 0 Minner Mrotsboxa
[()] .5 0 0 2 0 0 -1 Mouter Mrotsboxa
[(-1)] -0.0125 .01472 1 0 0 Minner Mrotsboxa
[(-0.5)] -0.0125 .16187 1 0 0 Minner Mrotsboxa
[(0)] -0.0125 .30902 1 0 0 Minner Mrotsboxa
[(0.5)] -0.0125 .45617 1 0 0 Minner Mrotsboxa
[(1)] -0.0125 .60332 1 0 0 Minner Mrotsboxa
[(All Epsilon)] .5 .61803 0 -4 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 .61903 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 g
p
p
.002 w
.02381 0 m
.02381 .00625 L
s
P
[(-1)] .02381 0 0 2 0 Minner Mrotshowa
p
.002 w
.2619 0 m
.2619 .00625 L
s
P
[(-0.5)] .2619 0 0 2 0 Minner Mrotshowa
p
.002 w
.5 0 m
.5 .00625 L
s
P
[(0)] .5 0 0 2 0 Minner Mrotshowa
p
.002 w
.7381 0 m
.7381 .00625 L
s
P
[(0.5)] .7381 0 0 2 0 Minner Mrotshowa
p
.002 w
.97619 0 m
.97619 .00625 L
s
P
[(1)] .97619 0 0 2 0 Minner Mrotshowa
p
.001 w
.07143 0 m
.07143 .00375 L
s
P
p
.001 w
.11905 0 m
.11905 .00375 L
s
P
p
.001 w
.16667 0 m
.16667 .00375 L
s
P
p
.001 w
.21429 0 m
.21429 .00375 L
s
P
p
.001 w
.30952 0 m
.30952 .00375 L
s
P
p
.001 w
.35714 0 m
.35714 .00375 L
s
P
p
.001 w
.40476 0 m
.40476 .00375 L
s
P
p
.001 w
.45238 0 m
.45238 .00375 L
s
P
p
.001 w
.54762 0 m
.54762 .00375 L
s
P
p
.001 w
.59524 0 m
.59524 .00375 L
s
P
p
.001 w
.64286 0 m
.64286 .00375 L
s
P
p
.001 w
.69048 0 m
.69048 .00375 L
s
P
p
.001 w
.78571 0 m
.78571 .00375 L
s
P
p
.001 w
.83333 0 m
.83333 .00375 L
s
P
p
.001 w
.88095 0 m
.88095 .00375 L
s
P
p
.001 w
.92857 0 m
.92857 .00375 L
s
P
[()] .5 0 0 2 0 0 -1 Mouter Mrotshowa
p
.002 w
0 0 m
1 0 L
s
P
p
.002 w
0 .01472 m
.00625 .01472 L
s
P
[(-1)] -0.0125 .01472 1 0 0 Minner Mrotshowa
p
.002 w
0 .16187 m
.00625 .16187 L
s
P
[(-0.5)] -0.0125 .16187 1 0 0 Minner Mrotshowa
p
.002 w
0 .30902 m
.00625 .30902 L
s
P
[(0)] -0.0125 .30902 1 0 0 Minner Mrotshowa
p
.002 w
0 .45617 m
.00625 .45617 L
s
P
[(0.5)] -0.0125 .45617 1 0 0 Minner Mrotshowa
p
.002 w
0 .60332 m
.00625 .60332 L
s
P
[(1)] -0.0125 .60332 1 0 0 Minner Mrotshowa
p
.001 w
0 .04415 m
.00375 .04415 L
s
P
p
.001 w
0 .07358 m
.00375 .07358 L
s
P
p
.001 w
0 .10301 m
.00375 .10301 L
s
P
p
.001 w
0 .13244 m
.00375 .13244 L
s
P
p
.001 w
0 .1913 m
.00375 .1913 L
s
P
p
.001 w
0 .22073 m
.00375 .22073 L
s
P
p
.001 w
0 .25016 m
.00375 .25016 L
s
P
p
.001 w
0 .27959 m
.00375 .27959 L
s
P
p
.001 w
0 .33845 m
.00375 .33845 L
s
P
p
.001 w
0 .36788 m
.00375 .36788 L
s
P
p
.001 w
0 .39731 m
.00375 .39731 L
s
P
p
.001 w
0 .42674 m
.00375 .42674 L
s
P
p
.001 w
0 .4856 m
.00375 .4856 L
s
P
p
.001 w
0 .51503 m
.00375 .51503 L
s
P
p
.001 w
0 .54446 m
.00375 .54446 L
s
P
p
.001 w
0 .57389 m
.00375 .57389 L
s
P
p
.002 w
0 0 m
0 .61803 L
s
P
P
p
p
.002 w
.02381 .61178 m
.02381 .61803 L
s
P
p
.002 w
.2619 .61178 m
.2619 .61803 L
s
P
p
.002 w
.5 .61178 m
.5 .61803 L
s
P
p
.002 w
.7381 .61178 m
.7381 .61803 L
s
P
p
.002 w
.97619 .61178 m
.97619 .61803 L
s
P
p
.001 w
.07143 .61428 m
.07143 .61803 L
s
P
p
.001 w
.11905 .61428 m
.11905 .61803 L
s
P
p
.001 w
.16667 .61428 m
.16667 .61803 L
s
P
p
.001 w
.21429 .61428 m
.21429 .61803 L
s
P
p
.001 w
.30952 .61428 m
.30952 .61803 L
s
P
p
.001 w
.35714 .61428 m
.35714 .61803 L
s
P
p
.001 w
.40476 .61428 m
.40476 .61803 L
s
P
p
.001 w
.45238 .61428 m
.45238 .61803 L
s
P
p
.001 w
.54762 .61428 m
.54762 .61803 L
s
P
p
.001 w
.59524 .61428 m
.59524 .61803 L
s
P
p
.001 w
.64286 .61428 m
.64286 .61803 L
s
P
p
.001 w
.69048 .61428 m
.69048 .61803 L
s
P
p
.001 w
.78571 .61428 m
.78571 .61803 L
s
P
p
.001 w
.83333 .61428 m
.83333 .61803 L
s
P
p
.001 w
.88095 .61428 m
.88095 .61803 L
s
P
p
.001 w
.92857 .61428 m
.92857 .61803 L
s
P
[(All Epsilon)] .5 .61803 0 -4 Mshowa
p
.002 w
0 .61803 m
1 .61803 L
s
P
p
.002 w
.99375 .01472 m
1 .01472 L
s
P
p
.002 w
.99375 .16187 m
1 .16187 L
s
P
p
.002 w
.99375 .30902 m
1 .30902 L
s
P
p
.002 w
.99375 .45617 m
1 .45617 L
s
P
p
.002 w
.99375 .60332 m
1 .60332 L
s
P
p
.001 w
.99625 .04415 m
1 .04415 L
s
P
p
.001 w
.99625 .07358 m
1 .07358 L
s
P
p
.001 w
.99625 .10301 m
1 .10301 L
s
P
p
.001 w
.99625 .13244 m
1 .13244 L
s
P
p
.001 w
.99625 .1913 m
1 .1913 L
s
P
p
.001 w
.99625 .22073 m
1 .22073 L
s
P
p
.001 w
.99625 .25016 m
1 .25016 L
s
P
p
.001 w
.99625 .27959 m
1 .27959 L
s
P
p
.001 w
.99625 .33845 m
1 .33845 L
s
P
p
.001 w
.99625 .36788 m
1 .36788 L
s
P
p
.001 w
.99625 .39731 m
1 .39731 L
s
P
p
.001 w
.99625 .42674 m
1 .42674 L
s
P
p
.001 w
.99625 .4856 m
1 .4856 L
s
P
p
.001 w
.99625 .51503 m
1 .51503 L
s
P
p
.001 w
.99625 .54446 m
1 .54446 L
s
P
p
.001 w
.99625 .57389 m
1 .57389 L
s
P
p
.002 w
1 0 m
1 .61803 L
s
P
P
p
P
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
p
p
.001 w
.02381 .01472 m
.02505 .01472 L
.02629 .01475 L
.02753 .0148 L
.02877 .01487 L
.03125 .01507 L
.03373 .01535 L
.03621 .0157 L
.03869 .01613 L
.04365 .01723 L
.04861 .01865 L
.05357 .02037 L
.06349 .02474 L
.08333 .03712 L
.10317 .05414 L
.14286 .10091 L
.18254 .16187 L
.22222 .23285 L
.2619 .30902 L
.30159 .38519 L
.34127 .45617 L
.38095 .51712 L
.42063 .56389 L
.44048 .58092 L
.4504 .5877 L
.46032 .59329 L
.47024 .59766 L
.4752 .59939 L
.48016 .6008 L
.48512 .6019 L
.4876 .60233 L
.49008 .60269 L
.49256 .60296 L
.4938 .60307 L
.49504 .60316 L
.49628 .60323 L
.49752 .60328 L
.49876 .60331 L
.5 .60332 L
.50124 .60331 L
.50248 .60328 L
.50372 .60323 L
.50496 .60316 L
.5062 .60307 L
.50744 .60296 L
.50992 .60269 L
.5124 .60233 L
.51488 .6019 L
.51984 .6008 L
.5248 .59939 L
Mistroke
.52976 .59766 L
.53968 .59329 L
.55952 .58092 L
.57937 .56389 L
.61905 .51712 L
.65873 .45617 L
.69841 .38519 L
.7381 .30902 L
.77778 .23285 L
.81746 .16187 L
.85714 .10091 L
.87698 .07553 L
.89683 .05414 L
.91667 .03712 L
.92659 .03033 L
.93651 .02474 L
.94643 .02037 L
.95139 .01865 L
.95635 .01723 L
.96131 .01613 L
.96379 .0157 L
.96627 .01535 L
.96875 .01507 L
.96999 .01496 L
.97123 .01487 L
.97247 .0148 L
.97371 .01475 L
.97495 .01472 L
.97619 .01472 L
Mfstroke
P
P
% End of Graphics
MathPictureEnd
end
showpage
%%EndDocument
 @endspecial 607 1379 a(Figure)g(5:)k(T)m(est)c(Problem)f(5,)g
Fl(y)q Fm(\()p Fl(x)p Fm(\))i(v)o(ersus)g Fl(x)p eop
%%Page: 6 6
6 5 bop 262 307 a Fn(T)l(est)15 b(Problem)e(6)h Fm(\(Linear\))g([6,)f
(p.138])262 357 y Fl(\017y)300 342 y Fk(00)331 357 y
Fm(+)c Fl(xy)417 342 y Fk(0)441 357 y Fm(=)j Fj(\000)p
Fl(\017\031)559 342 y Fi(2)585 357 y Fm(cos\()p Fl(\031)q(x)p
Fm(\))e Fj(\000)f Fl(\031)q(x)e Fm(sin\()p Fl(\031)q(x)p
Fm(\),)59 b Fl(y)q Fm(\()p Fj(\000)p Fm(1\))13 b(=)f
Fj(\000)p Fm(2)p Fl(;)18 b(y)q Fm(\(1\))12 b(=)g(0.)262
407 y(Exact)i(solution)f(is)h Fl(y)q Fm(\()p Fl(x)p Fm(\))e(=)g(cos\()p
Fl(\031)q(x)p Fm(\))e(+)f(erf)t(\()p Fl(x=)1012 372 y
Fj(p)p 1046 372 38 2 v 1046 407 a Fm(2)p Fl(\017)p Fm(\))p
Fl(=)p Fm(erf)s(\(1)p Fl(=)1229 372 y Fj(p)p 1264 372
V 35 x Fm(2)p Fl(\017)o Fm(\).)262 457 y(The)14 b(solution)f(has)h(a)g
(sho)q(c)o(k)g(la)o(y)o(er)f(in)h(the)g(turning)g(p)q(oin)o(t)f(region)
h(near)g Fl(x)e Fm(=)f(0.)439 1736 y @beginspecial 72
@llx 72 @lly 540 @urx 720 @ury 2834 @rwi @setspecial
%%BeginDocument: ../PLOTS/pr6.ps

/Mathdict 150 dict def
Mathdict begin
/Mlmarg		1.0 72 mul def
/Mrmarg		1.0 72 mul def
/Mbmarg		1.0 72 mul def
/Mtmarg		1.0 72 mul def
/Mwidth		8.5 72 mul def
/Mheight	11 72 mul def
/Mtransform	{  } bind def
/Mnodistort	true def
/Mfixwid	true	def
/Mfixdash	false def
/Mrot		0	def
/Mpstart {
MathPictureStart
} bind def
/Mpend {
MathPictureEnd
} bind def
/Mscale {
0 1 0 1
5 -1 roll
MathScale
} bind def
/ISOLatin1Encoding dup where
{ pop pop }
{
[
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft
/logicalnot /hyphen /registered /macron
/degree /plusminus /twosuperior /threesuperior
/acute /mu /paragraph /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright
/onequarter /onehalf /threequarters /questiondown
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis
] def
} ifelse
/MFontDict 50 dict def
/MStrCat
{
exch
dup length
2 index length add
string
dup 3 1 roll
copy
length
exch dup
4 2 roll exch
putinterval
} def
/MCreateEncoding
{
1 index
255 string cvs
(-) MStrCat
1 index MStrCat
cvn exch
(Encoding) MStrCat
cvn dup where
{
exch get
}
{
pop
StandardEncoding
} ifelse
3 1 roll
dup MFontDict exch known not
{
1 index findfont
dup length dict
begin
{1 index /FID ne
{def}
{pop pop}
ifelse} forall
/Encoding 3 index
def
currentdict
end
1 index exch definefont pop
MFontDict 1 index
null put
}
if
exch pop
exch pop
} def
/ISOLatin1 { (ISOLatin1) MCreateEncoding } def
/ISO8859 { (ISOLatin1) MCreateEncoding } def
/Mcopyfont {
dup
maxlength
dict
exch
{
1 index
/FID
eq
{
pop pop
}
{
2 index
3 1 roll
put
}
ifelse
}
forall
} def
/Plain	/Courier findfont Mcopyfont definefont pop
/Bold	/Courier-Bold findfont Mcopyfont definefont pop
/Italic /Courier-Oblique findfont Mcopyfont definefont pop
/MathPictureStart {
gsave
Mtransform
Mlmarg
Mbmarg
translate
Mwidth
Mlmarg Mrmarg add
sub
/Mwidth exch def
Mheight
Mbmarg Mtmarg add
sub
/Mheight exch def
/Mtmatrix
matrix currentmatrix
def
/Mgmatrix
matrix currentmatrix
def
} bind def
/MathPictureEnd {
grestore
} bind def
/MFill {
0 0 		moveto
Mwidth 0 	lineto
Mwidth Mheight 	lineto
0 Mheight 	lineto
fill
} bind def
/MPlotRegion {
3 index
Mwidth mul
2 index
Mheight mul
translate
exch sub
Mheight mul
/Mheight
exch def
exch sub
Mwidth mul
/Mwidth
exch def
} bind def
/MathSubStart {
Momatrix
Mgmatrix Mtmatrix
Mwidth Mheight
7 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
Mgmatrix setmatrix
9 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
2 copy translate
/Mtmatrix matrix currentmatrix def
3 -1 roll
exch sub
/Mheight exch def
sub
/Mwidth exch def
} bind def
/MathSubEnd {
/Mheight exch def
/Mwidth exch def
/Mtmatrix exch def
dup setmatrix
/Mgmatrix exch def
/Momatrix exch def
} bind def
/Mdot {
moveto
0 0 rlineto
stroke
} bind def
/Mtetra {
moveto
lineto
lineto
lineto
fill
} bind def
/Metetra {
moveto
lineto
lineto
lineto
closepath
gsave
fill
grestore
0 setgray
stroke
} bind def
/Mistroke {
flattenpath
0 0 0
{
4 2 roll
pop pop
}
{
4 -1 roll
2 index
sub dup mul
4 -1 roll
2 index
sub dup mul
add sqrt
4 -1 roll
add
3 1 roll
}
{
stop
}
{
stop
}
pathforall
pop pop
currentpoint
stroke
moveto
currentdash
3 -1 roll
add
setdash
} bind def
/Mfstroke {
stroke
currentdash
pop 0
setdash
} bind def
/Mrotsboxa {
gsave
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
grestore
Msboxa
3  -1 roll
/Mtmatrix
exch def
/Mrot
0 def
} bind def
/Msboxa {
newpath
5 -1 roll
Mvboxa
pop
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Msboxa1
5 -3 roll
Msboxa1
Mboxrot
[
7 -2 roll
2 copy
[
3 1 roll
10 -1 roll
9 -1 roll
]
6 1 roll
5 -2 roll
]
} bind def
/Msboxa1 {
sub
2 div
dup
2 index
1 add
mul
3 -1 roll
-1 add
3 -1 roll
mul
} bind def
/Mvboxa	{
Mfixwid
{
Mvboxa1
}
{
dup
Mwidthcal
0 exch
{
add
}
forall
exch
Mvboxa1
4 index
7 -1 roll
add
4 -1 roll
pop
3 1 roll
}
ifelse
} bind def
/Mvboxa1 {
gsave
newpath
[ true
3 -1 roll
{
Mbbox
5 -1 roll
{
0
5 1 roll
}
{
7 -1 roll
exch sub
(m) stringwidth pop
.3 mul
sub
7 1 roll
6 -1 roll
4 -1 roll
Mmin
3 -1 roll
5 index
add
5 -1 roll
4 -1 roll
Mmax
4 -1 roll
}
ifelse
false
}
forall
{ stop } if
counttomark
1 add
4 roll
]
grestore
} bind def
/Mbbox {
1 dict begin
0 0 moveto
/temp (T) def
{	gsave
currentpoint newpath moveto
temp 0 3 -1 roll put temp
false charpath flattenpath currentpoint
pathbbox
grestore moveto lineto moveto} forall
pathbbox
newpath
end
} bind def
/Mmin {
2 copy
gt
{ exch } if
pop
} bind def
/Mmax {
2 copy
lt
{ exch } if
pop
} bind def
/Mrotshowa {
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
Mgmatrix setmatrix
Mshowa
/Mtmatrix
exch def
/Mrot 0 def
} bind def
/Mshowa {
4 -2 roll
moveto
2 index
Mtmatrix setmatrix
Mvboxa
7 1 roll
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Mshowa1
4 1 roll
Mshowa1
rmoveto
currentpoint
Mfixwid
{
Mshowax
}
{
Mshoway
}
ifelse
pop pop pop pop
Mgmatrix setmatrix
} bind def
/Mshowax {	
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
Mfixdash
{
Mfixdashp		
}
if
show
} for
} bind def
/Mfixdashp {
dup
length
1
gt
1 index
true exch
{
45
eq
and
} forall
and
{
gsave
(--)		
stringwidth pop
(-)
stringwidth pop
sub
2 div
0 rmoveto
dup
length
1 sub
{
(-)
show
}
repeat
grestore
}
if
} bind def	
/Mshoway {
3 index
Mwidthcal
5 1 roll
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
[
6 index
aload
length
2 add
-1 roll
{
pop
Strform
stringwidth
pop
neg 
exch
add
0 rmoveto
}
exch
kshow
cleartomark
} for
pop	
} bind def
/Mwidthcal {
[
exch
{
Mwidthcal1
}
forall
]
[
exch
dup
Maxlen
-1 add
0 1
3 -1 roll
{
[
exch
2 index
{		 
1 index	
Mget
exch
}
forall		
pop
Maxget
exch
}
for
pop
]
Mreva
} bind def
/Mreva	{
[
exch
aload
length
-1 1
{1 roll}
for
]
} bind def
/Mget	{
1 index
length
-1 add
1 index
ge
{
get
}
{
pop pop
0
}
ifelse
} bind def
/Maxlen	{
[
exch
{
length
}
forall
Maxget
} bind def
/Maxget	{
counttomark
-1 add
1 1
3 -1 roll
{
pop
Mmax
}
for
exch
pop
} bind def
/Mwidthcal1 {
[
exch
{
Strform
stringwidth
pop
}
forall
]
} bind def
/Strform {
/tem (x) def
tem 0
3 -1 roll
put
tem
} bind def
/Mshowa1 {
2 copy
add
4 1 roll
sub
mul
sub
-2 div
} bind def
/MathScale {
Mwidth
Mheight
Mlp
translate
scale
/yscale exch def
/ybias exch def
/xscale exch def
/xbias exch def
/Momatrix
xscale yscale matrix scale
xbias ybias matrix translate
matrix concatmatrix def
/Mgmatrix
matrix currentmatrix
def
} bind def
/Mlp {
3 copy
Mlpfirst
{
Mnodistort
{
Mmin
dup
} if
4 index
2 index
2 index
Mlprun
11 index
11 -1 roll
10 -4 roll
Mlp1
8 index
9 -5 roll
Mlp1
4 -1 roll
and
{ exit } if
3 -1 roll
pop pop
} loop
exch
3 1 roll
7 -3 roll
pop pop pop
} bind def
/Mlpfirst {
3 -1 roll
dup length
2 copy
-2 add
get
aload
pop pop pop
4 -2 roll
-1 add
get
aload
pop pop pop
6 -1 roll
3 -1 roll
5 -1 roll
sub
div
4 1 roll
exch sub
div
} bind def
/Mlprun {
2 copy
4 index
0 get
dup
4 1 roll
Mlprun1
3 copy
8 -2 roll
9 -1 roll
{
3 copy
Mlprun1
3 copy
11 -3 roll
/gt Mlpminmax
8 3 roll
11 -3 roll
/lt Mlpminmax
8 3 roll
} forall
pop pop pop pop
3 1 roll
pop pop
aload pop
5 -1 roll
aload pop
exch
6 -1 roll
Mlprun2
8 2 roll
4 -1 roll
Mlprun2
6 2 roll
3 -1 roll
Mlprun2
4 2 roll
exch
Mlprun2
6 2 roll
} bind def
/Mlprun1 {
aload pop
exch
6 -1 roll
5 -1 roll
mul add
4 -2 roll
mul
3 -1 roll
add
} bind def
/Mlprun2 {
2 copy
add 2 div
3 1 roll
exch sub
} bind def
/Mlpminmax {
cvx
2 index
6 index
2 index
exec
{
7 -3 roll
4 -1 roll
} if
1 index
5 index
3 -1 roll
exec
{
4 1 roll
pop
5 -1 roll
aload
pop pop
4 -1 roll
aload pop
[
8 -2 roll
pop
5 -2 roll
pop
6 -2 roll
pop
5 -1 roll
]
4 1 roll
pop
}
{
pop pop pop
} ifelse
} bind def
/Mlp1 {
5 index
3 index	sub
5 index
2 index mul
1 index
le
1 index
0 le
or
dup
not
{
1 index
3 index	div
.99999 mul
8 -1 roll
pop
7 1 roll
}
if
8 -1 roll
2 div
7 -2 roll
pop sub
5 index
6 -3 roll
pop pop
mul sub
exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
outflag
1
eq
{
/outflag 0 def
/intop 0 def
/inrht 0 def
} if		
5 index
gsave
Mtmatrix setmatrix
Mvboxa pop
grestore
3 -1 roll
pop
dup
intop
gt
{
/intop
exch def
}
{ pop }
ifelse
dup
inrht
gt
{
/inrht
exch def
}
{ pop }
ifelse
pop
/inflag
1 def
} bind def
/Mouter {
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
inflag
1 eq
{
dup
0 lt
{
dup
intop
mul
neg
/yadtop
exch def
} if
dup
0 gt
{
dup
intop
mul
/yadbot
exch def
}
if
pop
dup
0 lt
{
dup
inrht
mul
neg
/xadrht
exch def
} if
dup
0 gt
{
dup
inrht
mul
/xadlft
exch def
} if
pop
/outflag 1 def
}
{ pop pop}
ifelse
/inflag 0 def
/inrht 0 def
/intop 0 def
} bind def	
/Mboxout {
outflag
1
eq
{
4 -1
roll
xadlft
leadjust
add
sub
4 1 roll
3 -1
roll
yadbot
leadjust
add
sub
3 1
roll
exch
xadrht
leadjust
add
add
exch
yadtop
leadjust
add
add
/outflag 0 def
/xadlft 0 def
/yadbot 0 def
/xadrht 0 def
/yadtop 0 def
} if
} bind def
/leadjust {
(m) stringwidth pop
.5 mul
} bind def
/Mrotcheck {
dup
90
eq
{
yadbot
/yadbot
xadrht
def	
/xadrht
yadtop
def
/yadtop
xadlft
def
/xadlft
exch
def
}
if
dup
cos
1 index
sin
Checkaux
dup
cos
1 index
sin neg
exch
Checkaux
3 1 roll
pop pop
} bind def
/Checkaux {
4 index
exch
4 index
mul
3 1 roll
mul add
4 1 roll
} bind def
/Mboxrot {
Mrot
90 eq
{
brotaux
4 2
roll
}
if
Mrot
180 eq
{
4 2
roll
brotaux
4 2
roll
brotaux
}	
if
Mrot
270 eq
{
4 2
roll
brotaux
}
if
} bind def
/brotaux {
neg
exch
neg
} bind def
/Mabsproc {
0
matrix defaultmatrix
dtransform idtransform
dup mul exch
dup mul
add sqrt
} bind def
/Mabswid {
Mabsproc
setlinewidth	
} bind def
/Mabsdash {
exch
[
exch
{
Mabsproc
}
forall
]
exch
setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop}
repeat
} bind def
} ifelse
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/setcmykcolor where
{ pop}
{ /setcmykcolor {
4 1
roll
[
4 1 
roll
]
{
1 index
sub
1
sub neg
dup
0
lt
{
pop
0
}
if
dup
1
gt
{
pop
1
}
if
exch
} forall
pop
setrgbcolor
} bind def
} ifelse
/Mcharproc
{
currentfile
(x)
readhexstring
pop
0 get
exch
div
} bind def
/Mshadeproc
{
dup
3 1
roll
{
dup
Mcharproc
3 1
roll
} repeat
1 eq
{
setgray
}
{
3 eq
{
setrgbcolor
}
{
setcmykcolor
} ifelse
} ifelse
} bind def
/Mrectproc
{
3 index
2 index
moveto
2 index
3 -1
roll
lineto
dup
3 1
roll
lineto
lineto
fill
} bind def
/Mcolorimage
{
7 1
roll
pop
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
9 index
Mshadeproc
Mrectproc
} for
pop
} for
pop pop pop pop
} bind def
/Mimage
{
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
Mcharproc
setgray
Mrectproc
} for
pop
} for
pop pop pop
} bind def

MathPictureStart
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.5 0.47619 0.309017 0.147151 [
[(-1)] .02381 0 0 2 0 Minner Mrotsboxa
[(-0.5)] .2619 0 0 2 0 Minner Mrotsboxa
[(0)] .5 0 0 2 0 Minner Mrotsboxa
[(0.5)] .7381 0 0 2 0 Minner Mrotsboxa
[(1)] .97619 0 0 2 0 Minner Mrotsboxa
[()] .5 0 0 2 0 0 -1 Mouter Mrotsboxa
[(-2)] -0.0125 .01472 1 0 0 Minner Mrotsboxa
[(-1)] -0.0125 .16187 1 0 0 Minner Mrotsboxa
[(0)] -0.0125 .30902 1 0 0 Minner Mrotsboxa
[(1)] -0.0125 .45617 1 0 0 Minner Mrotsboxa
[(2)] -0.0125 .60332 1 0 0 Minner Mrotsboxa
[(Epsilon = 0.1, 0.01, 0.001)] .5 .61803 0 -4 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 .61903 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 g
p
p
.002 w
.02381 0 m
.02381 .00625 L
s
P
[(-1)] .02381 0 0 2 0 Minner Mrotshowa
p
.002 w
.2619 0 m
.2619 .00625 L
s
P
[(-0.5)] .2619 0 0 2 0 Minner Mrotshowa
p
.002 w
.5 0 m
.5 .00625 L
s
P
[(0)] .5 0 0 2 0 Minner Mrotshowa
p
.002 w
.7381 0 m
.7381 .00625 L
s
P
[(0.5)] .7381 0 0 2 0 Minner Mrotshowa
p
.002 w
.97619 0 m
.97619 .00625 L
s
P
[(1)] .97619 0 0 2 0 Minner Mrotshowa
p
.001 w
.07143 0 m
.07143 .00375 L
s
P
p
.001 w
.11905 0 m
.11905 .00375 L
s
P
p
.001 w
.16667 0 m
.16667 .00375 L
s
P
p
.001 w
.21429 0 m
.21429 .00375 L
s
P
p
.001 w
.30952 0 m
.30952 .00375 L
s
P
p
.001 w
.35714 0 m
.35714 .00375 L
s
P
p
.001 w
.40476 0 m
.40476 .00375 L
s
P
p
.001 w
.45238 0 m
.45238 .00375 L
s
P
p
.001 w
.54762 0 m
.54762 .00375 L
s
P
p
.001 w
.59524 0 m
.59524 .00375 L
s
P
p
.001 w
.64286 0 m
.64286 .00375 L
s
P
p
.001 w
.69048 0 m
.69048 .00375 L
s
P
p
.001 w
.78571 0 m
.78571 .00375 L
s
P
p
.001 w
.83333 0 m
.83333 .00375 L
s
P
p
.001 w
.88095 0 m
.88095 .00375 L
s
P
p
.001 w
.92857 0 m
.92857 .00375 L
s
P
[()] .5 0 0 2 0 0 -1 Mouter Mrotshowa
p
.002 w
0 0 m
1 0 L
s
P
p
.002 w
0 .01472 m
.00625 .01472 L
s
P
[(-2)] -0.0125 .01472 1 0 0 Minner Mrotshowa
p
.002 w
0 .16187 m
.00625 .16187 L
s
P
[(-1)] -0.0125 .16187 1 0 0 Minner Mrotshowa
p
.002 w
0 .30902 m
.00625 .30902 L
s
P
[(0)] -0.0125 .30902 1 0 0 Minner Mrotshowa
p
.002 w
0 .45617 m
.00625 .45617 L
s
P
[(1)] -0.0125 .45617 1 0 0 Minner Mrotshowa
p
.002 w
0 .60332 m
.00625 .60332 L
s
P
[(2)] -0.0125 .60332 1 0 0 Minner Mrotshowa
p
.001 w
0 .04415 m
.00375 .04415 L
s
P
p
.001 w
0 .07358 m
.00375 .07358 L
s
P
p
.001 w
0 .10301 m
.00375 .10301 L
s
P
p
.001 w
0 .13244 m
.00375 .13244 L
s
P
p
.001 w
0 .1913 m
.00375 .1913 L
s
P
p
.001 w
0 .22073 m
.00375 .22073 L
s
P
p
.001 w
0 .25016 m
.00375 .25016 L
s
P
p
.001 w
0 .27959 m
.00375 .27959 L
s
P
p
.001 w
0 .33845 m
.00375 .33845 L
s
P
p
.001 w
0 .36788 m
.00375 .36788 L
s
P
p
.001 w
0 .39731 m
.00375 .39731 L
s
P
p
.001 w
0 .42674 m
.00375 .42674 L
s
P
p
.001 w
0 .4856 m
.00375 .4856 L
s
P
p
.001 w
0 .51503 m
.00375 .51503 L
s
P
p
.001 w
0 .54446 m
.00375 .54446 L
s
P
p
.001 w
0 .57389 m
.00375 .57389 L
s
P
p
.002 w
0 0 m
0 .61803 L
s
P
P
p
p
.002 w
.02381 .61178 m
.02381 .61803 L
s
P
p
.002 w
.2619 .61178 m
.2619 .61803 L
s
P
p
.002 w
.5 .61178 m
.5 .61803 L
s
P
p
.002 w
.7381 .61178 m
.7381 .61803 L
s
P
p
.002 w
.97619 .61178 m
.97619 .61803 L
s
P
p
.001 w
.07143 .61428 m
.07143 .61803 L
s
P
p
.001 w
.11905 .61428 m
.11905 .61803 L
s
P
p
.001 w
.16667 .61428 m
.16667 .61803 L
s
P
p
.001 w
.21429 .61428 m
.21429 .61803 L
s
P
p
.001 w
.30952 .61428 m
.30952 .61803 L
s
P
p
.001 w
.35714 .61428 m
.35714 .61803 L
s
P
p
.001 w
.40476 .61428 m
.40476 .61803 L
s
P
p
.001 w
.45238 .61428 m
.45238 .61803 L
s
P
p
.001 w
.54762 .61428 m
.54762 .61803 L
s
P
p
.001 w
.59524 .61428 m
.59524 .61803 L
s
P
p
.001 w
.64286 .61428 m
.64286 .61803 L
s
P
p
.001 w
.69048 .61428 m
.69048 .61803 L
s
P
p
.001 w
.78571 .61428 m
.78571 .61803 L
s
P
p
.001 w
.83333 .61428 m
.83333 .61803 L
s
P
p
.001 w
.88095 .61428 m
.88095 .61803 L
s
P
p
.001 w
.92857 .61428 m
.92857 .61803 L
s
P
[(Epsilon = 0.1, 0.01, 0.001)] .5 .61803 0 -4 Mshowa
p
.002 w
0 .61803 m
1 .61803 L
s
P
p
.002 w
.99375 .01472 m
1 .01472 L
s
P
p
.002 w
.99375 .16187 m
1 .16187 L
s
P
p
.002 w
.99375 .30902 m
1 .30902 L
s
P
p
.002 w
.99375 .45617 m
1 .45617 L
s
P
p
.002 w
.99375 .60332 m
1 .60332 L
s
P
p
.001 w
.99625 .04415 m
1 .04415 L
s
P
p
.001 w
.99625 .07358 m
1 .07358 L
s
P
p
.001 w
.99625 .10301 m
1 .10301 L
s
P
p
.001 w
.99625 .13244 m
1 .13244 L
s
P
p
.001 w
.99625 .1913 m
1 .1913 L
s
P
p
.001 w
.99625 .22073 m
1 .22073 L
s
P
p
.001 w
.99625 .25016 m
1 .25016 L
s
P
p
.001 w
.99625 .27959 m
1 .27959 L
s
P
p
.001 w
.99625 .33845 m
1 .33845 L
s
P
p
.001 w
.99625 .36788 m
1 .36788 L
s
P
p
.001 w
.99625 .39731 m
1 .39731 L
s
P
p
.001 w
.99625 .42674 m
1 .42674 L
s
P
p
.001 w
.99625 .4856 m
1 .4856 L
s
P
p
.001 w
.99625 .51503 m
1 .51503 L
s
P
p
.001 w
.99625 .54446 m
1 .54446 L
s
P
p
.001 w
.99625 .57389 m
1 .57389 L
s
P
p
.002 w
1 0 m
1 .61803 L
s
P
P
p
P
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
p
p
p
.001 w
.02381 .01472 m
.02505 .01473 L
.02629 .01475 L
.02753 .01478 L
.02877 .01482 L
.03125 .01493 L
.03373 .01509 L
.03869 .01552 L
.04365 .0161 L
.05357 .01776 L
.06349 .02005 L
.08333 .02652 L
.10317 .03544 L
.14286 .06019 L
.18254 .09322 L
.22222 .13314 L
.2619 .17841 L
.30159 .22737 L
.34127 .27822 L
.38095 .32894 L
.42063 .37723 L
.46032 .42052 L
.5 .45617 L
.51984 .47036 L
.53968 .48179 L
.5496 .48641 L
.55952 .49027 L
.56944 .49336 L
.5744 .49462 L
.57937 .49568 L
.58433 .49654 L
.58929 .49721 L
.59177 .49748 L
.59425 .49769 L
.59673 .49786 L
.59797 .49792 L
.59921 .49797 L
.60045 .49801 L
.60169 .49804 L
.60293 .49806 L
.60417 .49806 L
.60541 .49806 L
.60665 .49804 L
.60789 .49801 L
.60913 .49796 L
.61161 .49784 L
.61409 .49767 L
.61905 .49719 L
.62401 .49653 L
.62897 .49569 L
Mistroke
.63889 .49346 L
.64881 .49054 L
.65873 .48696 L
.69841 .46683 L
.7381 .43962 L
.77778 .40872 L
.81746 .37766 L
.85714 .34974 L
.87698 .33784 L
.89683 .32772 L
.91667 .31962 L
.92659 .31638 L
.93651 .31371 L
.94643 .31163 L
.95139 .31081 L
.95635 .31015 L
.95883 .30987 L
.96131 .30963 L
.96379 .30943 L
.96627 .30927 L
.96875 .30915 L
.96999 .30911 L
.97123 .30907 L
.97247 .30904 L
.97371 .30902 L
.97495 .30902 L
.97619 .30902 L
Mfstroke
P
P
p
p
.001 w
.02381 .01472 m
.02505 .01472 L
.02629 .01473 L
.02753 .01476 L
.02877 .01479 L
.03125 .01489 L
.03373 .01503 L
.03621 .01521 L
.03869 .01542 L
.04365 .01597 L
.04861 .01668 L
.05357 .01754 L
.06349 .01973 L
.08333 .02592 L
.10317 .03443 L
.14286 .05781 L
.18254 .08829 L
.22222 .12378 L
.2619 .16187 L
.30159 .19996 L
.34127 .23557 L
.38095 .26774 L
.40079 .28409 L
.42063 .30337 L
.44048 .32891 L
.46032 .36355 L
.5 .45617 L
.51984 .50245 L
.53968 .53876 L
.5496 .55172 L
.55456 .55683 L
.55952 .56102 L
.56448 .56435 L
.56696 .5657 L
.56944 .56684 L
.57192 .56779 L
.5744 .56855 L
.57564 .56887 L
.57688 .56913 L
.57813 .56936 L
.57937 .56954 L
.58061 .56968 L
.58185 .56978 L
.58309 .56984 L
.58433 .56986 L
.58557 .56984 L
.58681 .56979 L
.58805 .5697 L
.58929 .56957 L
.59053 .56942 L
Mistroke
.59177 .56922 L
.59425 .56875 L
.59921 .56743 L
.60417 .56569 L
.60913 .56358 L
.61905 .55839 L
.65873 .52962 L
.69841 .49425 L
.7381 .45617 L
.77778 .41808 L
.81746 .38259 L
.85714 .35212 L
.87698 .33943 L
.89683 .32873 L
.91667 .32022 L
.92659 .31683 L
.93651 .31403 L
.94643 .31184 L
.95139 .31098 L
.95635 .31028 L
.96131 .30973 L
.96379 .30951 L
.96627 .30933 L
.96875 .30919 L
.96999 .30914 L
.97123 .3091 L
.97247 .30906 L
.97371 .30904 L
.97495 .30902 L
.97619 .30902 L
Mfstroke
P
P
p
p
.001 w
.02381 .01472 m
.02505 .01472 L
.02629 .01473 L
.02753 .01476 L
.02877 .01479 L
.03125 .01489 L
.03373 .01503 L
.03621 .01521 L
.03869 .01542 L
.04365 .01597 L
.04861 .01668 L
.05357 .01754 L
.06349 .01973 L
.08333 .02592 L
.10317 .03443 L
.14286 .05781 L
.18254 .08829 L
.22222 .12378 L
.2619 .16187 L
.30159 .19995 L
.34127 .23544 L
.38095 .26592 L
.42063 .2893 L
.44048 .29783 L
.4504 .30135 L
.45536 .30313 L
.45784 .30411 L
.46032 .30524 L
.4628 .30659 L
.46528 .30828 L
.46776 .31045 L
.47024 .31327 L
.47272 .31694 L
.4752 .3217 L
.47768 .32777 L
.48016 .33537 L
.48512 .35585 L
.49008 .38375 L
.5 .45617 L
.50496 .49408 L
.50992 .52795 L
.51488 .55507 L
.51736 .56572 L
.51984 .57445 L
.52232 .58138 L
.5248 .5867 L
.52728 .59064 L
.52852 .59216 L
.52976 .59341 L
.531 .59444 L
Mistroke
.53224 .59525 L
.53348 .59589 L
.53472 .59637 L
.53596 .59671 L
.5372 .59692 L
.53844 .59704 L
.53968 .59707 L
.54092 .59702 L
.54216 .59691 L
.5434 .59675 L
.54464 .59654 L
.5496 .59536 L
.55952 .59211 L
.57937 .5836 L
.61905 .56022 L
.65873 .52974 L
.69841 .49425 L
.7381 .45617 L
.77778 .41808 L
.81746 .38259 L
.85714 .35212 L
.87698 .33943 L
.89683 .32873 L
.91667 .32022 L
.92659 .31683 L
.93651 .31403 L
.94643 .31184 L
.95139 .31098 L
.95635 .31028 L
.96131 .30973 L
.96379 .30951 L
.96627 .30933 L
.96875 .30919 L
.96999 .30914 L
.97123 .3091 L
.97247 .30906 L
.97371 .30904 L
.97495 .30902 L
.97619 .30902 L
Mfstroke
P
P
P
% End of Graphics
MathPictureEnd
end
showpage
%%EndDocument
 @endspecial 607 1355 a(Figure)j(6:)k(T)m(est)c(Problem)f(6,)g
Fl(y)q Fm(\()p Fl(x)p Fm(\))i(v)o(ersus)g Fl(x)p eop
%%Page: 7 7
7 6 bop 262 307 a Fn(T)l(est)15 b(Problem)e(7)583 292
y Fi(1)616 307 y Fm(\(Linear\))h([6)o(,)g(p.142])262
357 y Fl(\017y)300 342 y Fk(00)331 357 y Fm(+)9 b Fl(xy)417
342 y Fk(0)439 357 y Fj(\000)g Fl(y)k Fm(=)f Fj(\000)p
Fm(\(1)e(+)f Fl(\017\031)719 342 y Fi(2)738 357 y Fm(\))e(cos\()p
Fl(\031)q(x)p Fm(\))j Fj(\000)f Fl(\031)q(x)e Fm(sin\()p
Fl(\031)q(x)p Fm(\),)60 b Fl(y)q Fm(\()p Fj(\000)p Fm(1\))12
b(=)g Fj(\000)p Fm(1)p Fl(;)18 b(y)q Fm(\(1\))13 b(=)f(1.)262
451 y(Exact)i(solution)f(is)h Fl(y)q Fm(\()p Fl(x)p Fm(\))e(=)g(cos\()p
Fl(\031)q(x)p Fm(\))e(+)f Fl(x)g Fm(+)980 422 y Fl(x)p
Fm(erf)s(\()p Fl(x=)1115 388 y Fj(p)p 1149 388 38 2 v
1149 422 a Fm(2)p Fl(\017)p Fm(\))g(+)1254 387 y Fh(p)p
1295 387 84 2 v 1295 422 a Fm(2)p Fl(\017=\031)f Fm(exp\()p
Fj(\000)p Fl(x)1521 407 y Fi(2)1540 422 y Fl(=)p Fm(2)p
Fl(\017)p Fm(\))p 980 441 635 2 v 1021 485 a(erf)t(\(1)p
Fl(=)p Fm(2)p Fl(\017)p Fm(\))g(+)1234 450 y Fh(p)p 1275
450 84 2 v 1275 485 a Fm(2)p Fl(\017=\031)g Fm(exp\()p
Fj(\000)p Fm(1)p Fl(=)p Fm(2)p Fl(\017)p Fm(\))1619 451
y(.)262 543 y(The)14 b(solution)f(has)h(a)g(corner)h(la)o(y)o(er)e(in)g
(the)i(turning)f(p)q(oin)o(t)f(region)h(near)g Fl(x)d
Fm(=)h(0.)439 1823 y @beginspecial 72 @llx 72 @lly 540
@urx 720 @ury 2834 @rwi @setspecial
%%BeginDocument: ../PLOTS/pr7.ps

/Mathdict 150 dict def
Mathdict begin
/Mlmarg		1.0 72 mul def
/Mrmarg		1.0 72 mul def
/Mbmarg		1.0 72 mul def
/Mtmarg		1.0 72 mul def
/Mwidth		8.5 72 mul def
/Mheight	11 72 mul def
/Mtransform	{  } bind def
/Mnodistort	true def
/Mfixwid	true	def
/Mfixdash	false def
/Mrot		0	def
/Mpstart {
MathPictureStart
} bind def
/Mpend {
MathPictureEnd
} bind def
/Mscale {
0 1 0 1
5 -1 roll
MathScale
} bind def
/ISOLatin1Encoding dup where
{ pop pop }
{
[
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft
/logicalnot /hyphen /registered /macron
/degree /plusminus /twosuperior /threesuperior
/acute /mu /paragraph /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright
/onequarter /onehalf /threequarters /questiondown
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis
] def
} ifelse
/MFontDict 50 dict def
/MStrCat
{
exch
dup length
2 index length add
string
dup 3 1 roll
copy
length
exch dup
4 2 roll exch
putinterval
} def
/MCreateEncoding
{
1 index
255 string cvs
(-) MStrCat
1 index MStrCat
cvn exch
(Encoding) MStrCat
cvn dup where
{
exch get
}
{
pop
StandardEncoding
} ifelse
3 1 roll
dup MFontDict exch known not
{
1 index findfont
dup length dict
begin
{1 index /FID ne
{def}
{pop pop}
ifelse} forall
/Encoding 3 index
def
currentdict
end
1 index exch definefont pop
MFontDict 1 index
null put
}
if
exch pop
exch pop
} def
/ISOLatin1 { (ISOLatin1) MCreateEncoding } def
/ISO8859 { (ISOLatin1) MCreateEncoding } def
/Mcopyfont {
dup
maxlength
dict
exch
{
1 index
/FID
eq
{
pop pop
}
{
2 index
3 1 roll
put
}
ifelse
}
forall
} def
/Plain	/Courier findfont Mcopyfont definefont pop
/Bold	/Courier-Bold findfont Mcopyfont definefont pop
/Italic /Courier-Oblique findfont Mcopyfont definefont pop
/MathPictureStart {
gsave
Mtransform
Mlmarg
Mbmarg
translate
Mwidth
Mlmarg Mrmarg add
sub
/Mwidth exch def
Mheight
Mbmarg Mtmarg add
sub
/Mheight exch def
/Mtmatrix
matrix currentmatrix
def
/Mgmatrix
matrix currentmatrix
def
} bind def
/MathPictureEnd {
grestore
} bind def
/MFill {
0 0 		moveto
Mwidth 0 	lineto
Mwidth Mheight 	lineto
0 Mheight 	lineto
fill
} bind def
/MPlotRegion {
3 index
Mwidth mul
2 index
Mheight mul
translate
exch sub
Mheight mul
/Mheight
exch def
exch sub
Mwidth mul
/Mwidth
exch def
} bind def
/MathSubStart {
Momatrix
Mgmatrix Mtmatrix
Mwidth Mheight
7 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
Mgmatrix setmatrix
9 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
2 copy translate
/Mtmatrix matrix currentmatrix def
3 -1 roll
exch sub
/Mheight exch def
sub
/Mwidth exch def
} bind def
/MathSubEnd {
/Mheight exch def
/Mwidth exch def
/Mtmatrix exch def
dup setmatrix
/Mgmatrix exch def
/Momatrix exch def
} bind def
/Mdot {
moveto
0 0 rlineto
stroke
} bind def
/Mtetra {
moveto
lineto
lineto
lineto
fill
} bind def
/Metetra {
moveto
lineto
lineto
lineto
closepath
gsave
fill
grestore
0 setgray
stroke
} bind def
/Mistroke {
flattenpath
0 0 0
{
4 2 roll
pop pop
}
{
4 -1 roll
2 index
sub dup mul
4 -1 roll
2 index
sub dup mul
add sqrt
4 -1 roll
add
3 1 roll
}
{
stop
}
{
stop
}
pathforall
pop pop
currentpoint
stroke
moveto
currentdash
3 -1 roll
add
setdash
} bind def
/Mfstroke {
stroke
currentdash
pop 0
setdash
} bind def
/Mrotsboxa {
gsave
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
grestore
Msboxa
3  -1 roll
/Mtmatrix
exch def
/Mrot
0 def
} bind def
/Msboxa {
newpath
5 -1 roll
Mvboxa
pop
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Msboxa1
5 -3 roll
Msboxa1
Mboxrot
[
7 -2 roll
2 copy
[
3 1 roll
10 -1 roll
9 -1 roll
]
6 1 roll
5 -2 roll
]
} bind def
/Msboxa1 {
sub
2 div
dup
2 index
1 add
mul
3 -1 roll
-1 add
3 -1 roll
mul
} bind def
/Mvboxa	{
Mfixwid
{
Mvboxa1
}
{
dup
Mwidthcal
0 exch
{
add
}
forall
exch
Mvboxa1
4 index
7 -1 roll
add
4 -1 roll
pop
3 1 roll
}
ifelse
} bind def
/Mvboxa1 {
gsave
newpath
[ true
3 -1 roll
{
Mbbox
5 -1 roll
{
0
5 1 roll
}
{
7 -1 roll
exch sub
(m) stringwidth pop
.3 mul
sub
7 1 roll
6 -1 roll
4 -1 roll
Mmin
3 -1 roll
5 index
add
5 -1 roll
4 -1 roll
Mmax
4 -1 roll
}
ifelse
false
}
forall
{ stop } if
counttomark
1 add
4 roll
]
grestore
} bind def
/Mbbox {
1 dict begin
0 0 moveto
/temp (T) def
{	gsave
currentpoint newpath moveto
temp 0 3 -1 roll put temp
false charpath flattenpath currentpoint
pathbbox
grestore moveto lineto moveto} forall
pathbbox
newpath
end
} bind def
/Mmin {
2 copy
gt
{ exch } if
pop
} bind def
/Mmax {
2 copy
lt
{ exch } if
pop
} bind def
/Mrotshowa {
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
Mgmatrix setmatrix
Mshowa
/Mtmatrix
exch def
/Mrot 0 def
} bind def
/Mshowa {
4 -2 roll
moveto
2 index
Mtmatrix setmatrix
Mvboxa
7 1 roll
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Mshowa1
4 1 roll
Mshowa1
rmoveto
currentpoint
Mfixwid
{
Mshowax
}
{
Mshoway
}
ifelse
pop pop pop pop
Mgmatrix setmatrix
} bind def
/Mshowax {	
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
Mfixdash
{
Mfixdashp		
}
if
show
} for
} bind def
/Mfixdashp {
dup
length
1
gt
1 index
true exch
{
45
eq
and
} forall
and
{
gsave
(--)		
stringwidth pop
(-)
stringwidth pop
sub
2 div
0 rmoveto
dup
length
1 sub
{
(-)
show
}
repeat
grestore
}
if
} bind def	
/Mshoway {
3 index
Mwidthcal
5 1 roll
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
[
6 index
aload
length
2 add
-1 roll
{
pop
Strform
stringwidth
pop
neg 
exch
add
0 rmoveto
}
exch
kshow
cleartomark
} for
pop	
} bind def
/Mwidthcal {
[
exch
{
Mwidthcal1
}
forall
]
[
exch
dup
Maxlen
-1 add
0 1
3 -1 roll
{
[
exch
2 index
{		 
1 index	
Mget
exch
}
forall		
pop
Maxget
exch
}
for
pop
]
Mreva
} bind def
/Mreva	{
[
exch
aload
length
-1 1
{1 roll}
for
]
} bind def
/Mget	{
1 index
length
-1 add
1 index
ge
{
get
}
{
pop pop
0
}
ifelse
} bind def
/Maxlen	{
[
exch
{
length
}
forall
Maxget
} bind def
/Maxget	{
counttomark
-1 add
1 1
3 -1 roll
{
pop
Mmax
}
for
exch
pop
} bind def
/Mwidthcal1 {
[
exch
{
Strform
stringwidth
pop
}
forall
]
} bind def
/Strform {
/tem (x) def
tem 0
3 -1 roll
put
tem
} bind def
/Mshowa1 {
2 copy
add
4 1 roll
sub
mul
sub
-2 div
} bind def
/MathScale {
Mwidth
Mheight
Mlp
translate
scale
/yscale exch def
/ybias exch def
/xscale exch def
/xbias exch def
/Momatrix
xscale yscale matrix scale
xbias ybias matrix translate
matrix concatmatrix def
/Mgmatrix
matrix currentmatrix
def
} bind def
/Mlp {
3 copy
Mlpfirst
{
Mnodistort
{
Mmin
dup
} if
4 index
2 index
2 index
Mlprun
11 index
11 -1 roll
10 -4 roll
Mlp1
8 index
9 -5 roll
Mlp1
4 -1 roll
and
{ exit } if
3 -1 roll
pop pop
} loop
exch
3 1 roll
7 -3 roll
pop pop pop
} bind def
/Mlpfirst {
3 -1 roll
dup length
2 copy
-2 add
get
aload
pop pop pop
4 -2 roll
-1 add
get
aload
pop pop pop
6 -1 roll
3 -1 roll
5 -1 roll
sub
div
4 1 roll
exch sub
div
} bind def
/Mlprun {
2 copy
4 index
0 get
dup
4 1 roll
Mlprun1
3 copy
8 -2 roll
9 -1 roll
{
3 copy
Mlprun1
3 copy
11 -3 roll
/gt Mlpminmax
8 3 roll
11 -3 roll
/lt Mlpminmax
8 3 roll
} forall
pop pop pop pop
3 1 roll
pop pop
aload pop
5 -1 roll
aload pop
exch
6 -1 roll
Mlprun2
8 2 roll
4 -1 roll
Mlprun2
6 2 roll
3 -1 roll
Mlprun2
4 2 roll
exch
Mlprun2
6 2 roll
} bind def
/Mlprun1 {
aload pop
exch
6 -1 roll
5 -1 roll
mul add
4 -2 roll
mul
3 -1 roll
add
} bind def
/Mlprun2 {
2 copy
add 2 div
3 1 roll
exch sub
} bind def
/Mlpminmax {
cvx
2 index
6 index
2 index
exec
{
7 -3 roll
4 -1 roll
} if
1 index
5 index
3 -1 roll
exec
{
4 1 roll
pop
5 -1 roll
aload
pop pop
4 -1 roll
aload pop
[
8 -2 roll
pop
5 -2 roll
pop
6 -2 roll
pop
5 -1 roll
]
4 1 roll
pop
}
{
pop pop pop
} ifelse
} bind def
/Mlp1 {
5 index
3 index	sub
5 index
2 index mul
1 index
le
1 index
0 le
or
dup
not
{
1 index
3 index	div
.99999 mul
8 -1 roll
pop
7 1 roll
}
if
8 -1 roll
2 div
7 -2 roll
pop sub
5 index
6 -3 roll
pop pop
mul sub
exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
outflag
1
eq
{
/outflag 0 def
/intop 0 def
/inrht 0 def
} if		
5 index
gsave
Mtmatrix setmatrix
Mvboxa pop
grestore
3 -1 roll
pop
dup
intop
gt
{
/intop
exch def
}
{ pop }
ifelse
dup
inrht
gt
{
/inrht
exch def
}
{ pop }
ifelse
pop
/inflag
1 def
} bind def
/Mouter {
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
inflag
1 eq
{
dup
0 lt
{
dup
intop
mul
neg
/yadtop
exch def
} if
dup
0 gt
{
dup
intop
mul
/yadbot
exch def
}
if
pop
dup
0 lt
{
dup
inrht
mul
neg
/xadrht
exch def
} if
dup
0 gt
{
dup
inrht
mul
/xadlft
exch def
} if
pop
/outflag 1 def
}
{ pop pop}
ifelse
/inflag 0 def
/inrht 0 def
/intop 0 def
} bind def	
/Mboxout {
outflag
1
eq
{
4 -1
roll
xadlft
leadjust
add
sub
4 1 roll
3 -1
roll
yadbot
leadjust
add
sub
3 1
roll
exch
xadrht
leadjust
add
add
exch
yadtop
leadjust
add
add
/outflag 0 def
/xadlft 0 def
/yadbot 0 def
/xadrht 0 def
/yadtop 0 def
} if
} bind def
/leadjust {
(m) stringwidth pop
.5 mul
} bind def
/Mrotcheck {
dup
90
eq
{
yadbot
/yadbot
xadrht
def	
/xadrht
yadtop
def
/yadtop
xadlft
def
/xadlft
exch
def
}
if
dup
cos
1 index
sin
Checkaux
dup
cos
1 index
sin neg
exch
Checkaux
3 1 roll
pop pop
} bind def
/Checkaux {
4 index
exch
4 index
mul
3 1 roll
mul add
4 1 roll
} bind def
/Mboxrot {
Mrot
90 eq
{
brotaux
4 2
roll
}
if
Mrot
180 eq
{
4 2
roll
brotaux
4 2
roll
brotaux
}	
if
Mrot
270 eq
{
4 2
roll
brotaux
}
if
} bind def
/brotaux {
neg
exch
neg
} bind def
/Mabsproc {
0
matrix defaultmatrix
dtransform idtransform
dup mul exch
dup mul
add sqrt
} bind def
/Mabswid {
Mabsproc
setlinewidth	
} bind def
/Mabsdash {
exch
[
exch
{
Mabsproc
}
forall
]
exch
setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop}
repeat
} bind def
} ifelse
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/setcmykcolor where
{ pop}
{ /setcmykcolor {
4 1
roll
[
4 1 
roll
]
{
1 index
sub
1
sub neg
dup
0
lt
{
pop
0
}
if
dup
1
gt
{
pop
1
}
if
exch
} forall
pop
setrgbcolor
} bind def
} ifelse
/Mcharproc
{
currentfile
(x)
readhexstring
pop
0 get
exch
div
} bind def
/Mshadeproc
{
dup
3 1
roll
{
dup
Mcharproc
3 1
roll
} repeat
1 eq
{
setgray
}
{
3 eq
{
setrgbcolor
}
{
setcmykcolor
} ifelse
} ifelse
} bind def
/Mrectproc
{
3 index
2 index
moveto
2 index
3 -1
roll
lineto
dup
3 1
roll
lineto
lineto
fill
} bind def
/Mcolorimage
{
7 1
roll
pop
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
9 index
Mshadeproc
Mrectproc
} for
pop
} for
pop pop pop pop
} bind def
/Mimage
{
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
Mcharproc
setgray
Mrectproc
} for
pop
} for
pop pop pop
} bind def

MathPictureStart
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.5 0.47619 0.168555 0.140462 [
[(-1)] .02381 0 0 2 0 Minner Mrotsboxa
[(-0.5)] .2619 0 0 2 0 Minner Mrotsboxa
[(0)] .5 0 0 2 0 Minner Mrotsboxa
[(0.5)] .7381 0 0 2 0 Minner Mrotsboxa
[(1)] .97619 0 0 2 0 Minner Mrotsboxa
[()] .5 0 0 2 0 0 -1 Mouter Mrotsboxa
[(-1)] -0.0125 .02809 1 0 0 Minner Mrotsboxa
[(0)] -0.0125 .16855 1 0 0 Minner Mrotsboxa
[(1)] -0.0125 .30902 1 0 0 Minner Mrotsboxa
[(2)] -0.0125 .44948 1 0 0 Minner Mrotsboxa
[(3)] -0.0125 .58994 1 0 0 Minner Mrotsboxa
[(Epsilon = 0.01, 0.001, 0.0001)] .5 .61803 0 -4 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 .61903 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 g
p
p
.002 w
.02381 0 m
.02381 .00625 L
s
P
[(-1)] .02381 0 0 2 0 Minner Mrotshowa
p
.002 w
.2619 0 m
.2619 .00625 L
s
P
[(-0.5)] .2619 0 0 2 0 Minner Mrotshowa
p
.002 w
.5 0 m
.5 .00625 L
s
P
[(0)] .5 0 0 2 0 Minner Mrotshowa
p
.002 w
.7381 0 m
.7381 .00625 L
s
P
[(0.5)] .7381 0 0 2 0 Minner Mrotshowa
p
.002 w
.97619 0 m
.97619 .00625 L
s
P
[(1)] .97619 0 0 2 0 Minner Mrotshowa
p
.001 w
.07143 0 m
.07143 .00375 L
s
P
p
.001 w
.11905 0 m
.11905 .00375 L
s
P
p
.001 w
.16667 0 m
.16667 .00375 L
s
P
p
.001 w
.21429 0 m
.21429 .00375 L
s
P
p
.001 w
.30952 0 m
.30952 .00375 L
s
P
p
.001 w
.35714 0 m
.35714 .00375 L
s
P
p
.001 w
.40476 0 m
.40476 .00375 L
s
P
p
.001 w
.45238 0 m
.45238 .00375 L
s
P
p
.001 w
.54762 0 m
.54762 .00375 L
s
P
p
.001 w
.59524 0 m
.59524 .00375 L
s
P
p
.001 w
.64286 0 m
.64286 .00375 L
s
P
p
.001 w
.69048 0 m
.69048 .00375 L
s
P
p
.001 w
.78571 0 m
.78571 .00375 L
s
P
p
.001 w
.83333 0 m
.83333 .00375 L
s
P
p
.001 w
.88095 0 m
.88095 .00375 L
s
P
p
.001 w
.92857 0 m
.92857 .00375 L
s
P
[()] .5 0 0 2 0 0 -1 Mouter Mrotshowa
p
.002 w
0 0 m
1 0 L
s
P
p
.002 w
0 .02809 m
.00625 .02809 L
s
P
[(-1)] -0.0125 .02809 1 0 0 Minner Mrotshowa
p
.002 w
0 .16855 m
.00625 .16855 L
s
P
[(0)] -0.0125 .16855 1 0 0 Minner Mrotshowa
p
.002 w
0 .30902 m
.00625 .30902 L
s
P
[(1)] -0.0125 .30902 1 0 0 Minner Mrotshowa
p
.002 w
0 .44948 m
.00625 .44948 L
s
P
[(2)] -0.0125 .44948 1 0 0 Minner Mrotshowa
p
.002 w
0 .58994 m
.00625 .58994 L
s
P
[(3)] -0.0125 .58994 1 0 0 Minner Mrotshowa
p
.001 w
0 .05618 m
.00375 .05618 L
s
P
p
.001 w
0 .08428 m
.00375 .08428 L
s
P
p
.001 w
0 .11237 m
.00375 .11237 L
s
P
p
.001 w
0 .14046 m
.00375 .14046 L
s
P
p
.001 w
0 .19665 m
.00375 .19665 L
s
P
p
.001 w
0 .22474 m
.00375 .22474 L
s
P
p
.001 w
0 .25283 m
.00375 .25283 L
s
P
p
.001 w
0 .28092 m
.00375 .28092 L
s
P
p
.001 w
0 .33711 m
.00375 .33711 L
s
P
p
.001 w
0 .3652 m
.00375 .3652 L
s
P
p
.001 w
0 .39329 m
.00375 .39329 L
s
P
p
.001 w
0 .42139 m
.00375 .42139 L
s
P
p
.001 w
0 .47757 m
.00375 .47757 L
s
P
p
.001 w
0 .50566 m
.00375 .50566 L
s
P
p
.001 w
0 .53376 m
.00375 .53376 L
s
P
p
.001 w
0 .56185 m
.00375 .56185 L
s
P
p
.002 w
0 0 m
0 .61803 L
s
P
P
p
p
.002 w
.02381 .61178 m
.02381 .61803 L
s
P
p
.002 w
.2619 .61178 m
.2619 .61803 L
s
P
p
.002 w
.5 .61178 m
.5 .61803 L
s
P
p
.002 w
.7381 .61178 m
.7381 .61803 L
s
P
p
.002 w
.97619 .61178 m
.97619 .61803 L
s
P
p
.001 w
.07143 .61428 m
.07143 .61803 L
s
P
p
.001 w
.11905 .61428 m
.11905 .61803 L
s
P
p
.001 w
.16667 .61428 m
.16667 .61803 L
s
P
p
.001 w
.21429 .61428 m
.21429 .61803 L
s
P
p
.001 w
.30952 .61428 m
.30952 .61803 L
s
P
p
.001 w
.35714 .61428 m
.35714 .61803 L
s
P
p
.001 w
.40476 .61428 m
.40476 .61803 L
s
P
p
.001 w
.45238 .61428 m
.45238 .61803 L
s
P
p
.001 w
.54762 .61428 m
.54762 .61803 L
s
P
p
.001 w
.59524 .61428 m
.59524 .61803 L
s
P
p
.001 w
.64286 .61428 m
.64286 .61803 L
s
P
p
.001 w
.69048 .61428 m
.69048 .61803 L
s
P
p
.001 w
.78571 .61428 m
.78571 .61803 L
s
P
p
.001 w
.83333 .61428 m
.83333 .61803 L
s
P
p
.001 w
.88095 .61428 m
.88095 .61803 L
s
P
p
.001 w
.92857 .61428 m
.92857 .61803 L
s
P
[(Epsilon = 0.01, 0.001, 0.0001)] .5 .61803 0 -4 Mshowa
p
.002 w
0 .61803 m
1 .61803 L
s
P
p
.002 w
.99375 .02809 m
1 .02809 L
s
P
p
.002 w
.99375 .16855 m
1 .16855 L
s
P
p
.002 w
.99375 .30902 m
1 .30902 L
s
P
p
.002 w
.99375 .44948 m
1 .44948 L
s
P
p
.002 w
.99375 .58994 m
1 .58994 L
s
P
p
.001 w
.99625 .05618 m
1 .05618 L
s
P
p
.001 w
.99625 .08428 m
1 .08428 L
s
P
p
.001 w
.99625 .11237 m
1 .11237 L
s
P
p
.001 w
.99625 .14046 m
1 .14046 L
s
P
p
.001 w
.99625 .19665 m
1 .19665 L
s
P
p
.001 w
.99625 .22474 m
1 .22474 L
s
P
p
.001 w
.99625 .25283 m
1 .25283 L
s
P
p
.001 w
.99625 .28092 m
1 .28092 L
s
P
p
.001 w
.99625 .33711 m
1 .33711 L
s
P
p
.001 w
.99625 .3652 m
1 .3652 L
s
P
p
.001 w
.99625 .39329 m
1 .39329 L
s
P
p
.001 w
.99625 .42139 m
1 .42139 L
s
P
p
.001 w
.99625 .47757 m
1 .47757 L
s
P
p
.001 w
.99625 .50566 m
1 .50566 L
s
P
p
.001 w
.99625 .53376 m
1 .53376 L
s
P
p
.001 w
.99625 .56185 m
1 .56185 L
s
P
p
.002 w
1 0 m
1 .61803 L
s
P
P
p
P
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
p
p
p
.001 w
.02381 .16855 m
.06349 .28281 L
.10317 .38915 L
.14286 .48058 L
.1627 .51861 L
.18254 .55073 L
.20238 .57625 L
.2123 .58643 L
.22222 .59478 L
.23214 .60135 L
.2371 .60394 L
.24206 .60606 L
.24702 .60771 L
.2495 .60836 L
.25198 .60889 L
.25446 .6093 L
.2557 .60946 L
.25694 .60959 L
.25818 .6097 L
.25942 .60977 L
.26066 .60982 L
.2619 .60983 L
.26314 .60982 L
.26438 .60977 L
.26563 .6097 L
.26687 .60959 L
.26935 .6093 L
.27183 .60889 L
.27431 .60836 L
.27679 .60771 L
.28175 .60606 L
.28671 .60394 L
.29167 .60135 L
.30159 .59479 L
.32143 .57626 L
.34127 .55086 L
.38095 .48233 L
.42063 .40259 L
.44048 .3671 L
.4504 .35217 L
.46032 .33963 L
.47024 .32937 L
.48016 .32123 L
.5 .30902 L
.50992 .30333 L
.51984 .29679 L
.53968 .27843 L
.5496 .26583 L
.55952 .25091 L
.57937 .21544 L
Mistroke
.61905 .1357 L
.63889 .09887 L
.65873 .06717 L
.67857 .04177 L
.68849 .0316 L
.69841 .02324 L
.70833 .01669 L
.71329 .0141 L
.71825 .01198 L
.72321 .01033 L
.72569 .00968 L
.72817 .00915 L
.73065 .00873 L
.73189 .00857 L
.73313 .00844 L
.73438 .00834 L
.73562 .00826 L
.73686 .00822 L
.7381 .0082 L
.73934 .00822 L
.74058 .00826 L
.74182 .00834 L
.74306 .00844 L
.74554 .00873 L
.74802 .00915 L
.7505 .00968 L
.75298 .01033 L
.75794 .01198 L
.7629 .0141 L
.76786 .01669 L
.77778 .02326 L
.79762 .04179 L
.81746 .0673 L
.85714 .13746 L
.89683 .22888 L
.93651 .33522 L
.97619 .44948 L
Mfstroke
P
P
p
p
.001 w
.02381 .16855 m
.06349 .28281 L
.10317 .38915 L
.14286 .48058 L
.1627 .51861 L
.18254 .55073 L
.20238 .57625 L
.2123 .58643 L
.22222 .59478 L
.23214 .60135 L
.2371 .60394 L
.24206 .60606 L
.24702 .6077 L
.2495 .60835 L
.25198 .60889 L
.25446 .6093 L
.25694 .60959 L
.25818 .6097 L
.25942 .60977 L
.26066 .60982 L
.2619 .60983 L
.26314 .60982 L
.26438 .60977 L
.26563 .6097 L
.26687 .60959 L
.26935 .6093 L
.27183 .60889 L
.27431 .60835 L
.27679 .6077 L
.28175 .60606 L
.28671 .60394 L
.29167 .60135 L
.30159 .59478 L
.32143 .57625 L
.34127 .55073 L
.38095 .48058 L
.42063 .38915 L
.44048 .33743 L
.4504 .31049 L
.46032 .28399 L
.46528 .27172 L
.47024 .2614 L
.47272 .25737 L
.47396 .25574 L
.4752 .2544 L
.47644 .25339 L
.47768 .25273 L
.47892 .25242 L
.48016 .25251 L
.5 .30902 L
Mistroke
.50496 .33084 L
.50992 .34898 L
.5124 .35579 L
.51364 .35853 L
.51488 .36085 L
.51612 .36272 L
.51736 .36409 L
.5186 .36502 L
.51984 .36552 L
.52108 .3656 L
.52232 .3653 L
.52356 .36463 L
.5248 .36362 L
.52604 .3623 L
.52728 .36066 L
.52976 .35664 L
.53968 .33405 L
.5496 .30755 L
.55952 .2806 L
.57937 .22888 L
.61905 .13745 L
.63889 .09942 L
.65873 .0673 L
.67857 .04179 L
.68849 .0316 L
.69841 .02326 L
.70833 .01669 L
.71329 .0141 L
.71825 .01198 L
.72321 .01032 L
.72569 .00967 L
.72817 .00915 L
.73065 .00874 L
.73189 .00858 L
.73313 .00844 L
.73438 .00834 L
.73562 .00826 L
.73686 .00822 L
.7381 .0082 L
.73934 .00822 L
.74058 .00827 L
.74182 .00834 L
.74306 .00844 L
.74554 .00873 L
.74678 .00893 L
.74802 .00915 L
.75298 .01033 L
.75794 .01198 L
.7629 .01409 L
.76786 .01669 L
Mistroke
.77778 .02326 L
.79762 .04179 L
.81746 .0673 L
.85714 .13746 L
.89683 .22888 L
.93651 .33522 L
.97619 .44948 L
Mfstroke
P
P
p
p
.001 w
.02381 .16855 m
.06349 .28281 L
.10317 .38915 L
.14286 .48058 L
.1627 .51861 L
.18254 .55073 L
.20238 .57625 L
.2123 .58643 L
.22222 .59478 L
.23214 .60135 L
.2371 .60394 L
.24206 .60606 L
.24702 .6077 L
.2495 .60835 L
.25198 .60889 L
.25446 .6093 L
.25694 .60959 L
.25818 .6097 L
.25942 .60977 L
.26066 .60982 L
.2619 .60983 L
.26314 .60982 L
.26438 .60977 L
.26563 .6097 L
.26687 .60959 L
.26935 .6093 L
.27183 .60889 L
.27431 .60835 L
.27679 .6077 L
.28175 .60606 L
.28671 .60394 L
.29167 .60135 L
.30159 .59478 L
.32143 .57625 L
.34127 .55073 L
.38095 .48058 L
.42063 .38915 L
.44048 .33742 L
.46032 .28281 L
.47024 .25465 L
.48016 .22611 L
.48512 .21206 L
.48636 .20877 L
.4876 .20594 L
.48884 .20369 L
.49008 .20265 L
.49132 .20344 L
.49256 .20684 L
.4938 .21376 L
.49504 .22502 L
Mistroke
.5 .30902 L
.50248 .35741 L
.50372 .3779 L
.50496 .39332 L
.5062 .40432 L
.50744 .41117 L
.50868 .41462 L
.50992 .4154 L
.51116 .41433 L
.5124 .41214 L
.51364 .40927 L
.51488 .40601 L
.51984 .39192 L
.53968 .33522 L
.57937 .22888 L
.61905 .13745 L
.63889 .09942 L
.65873 .0673 L
.67857 .04179 L
.68849 .0316 L
.69841 .02326 L
.70833 .01669 L
.71329 .01409 L
.71825 .01198 L
.72321 .01033 L
.72569 .00968 L
.72817 .00915 L
.73065 .00873 L
.73189 .00857 L
.73313 .00844 L
.73438 .00834 L
.73562 .00827 L
.73686 .00822 L
.7381 .0082 L
.73934 .00822 L
.74058 .00827 L
.74182 .00834 L
.74306 .00844 L
.74554 .00873 L
.74678 .00893 L
.74802 .00915 L
.75298 .01033 L
.75794 .01198 L
.7629 .01409 L
.76786 .01669 L
.77778 .02326 L
.79762 .04179 L
.81746 .0673 L
.85714 .13746 L
.89683 .22888 L
Mistroke
.93651 .33522 L
.97619 .44948 L
Mfstroke
P
P
P
% End of Graphics
MathPictureEnd
end
showpage
%%EndDocument
 @endspecial 602 1436 a(Figure)i(7:)j(T)m(est)e(Problem)d(7,)i
Fl(y)1109 1420 y Fk(0)1121 1436 y Fm(\()p Fl(x)p Fm(\))g(v)o(ersus)h
Fl(x)p 262 2410 573 2 v 308 2437 a Fg(1)325 2449 y Ff(The)d(la)o(y)o
(er)e(region)g(for)h(problem)e(7)i(is)h(illustrated)d(more)h(clearly)g
(b)o(y)h Fe(y)1282 2437 y Fd(0)1293 2449 y Ff(\()p Fe(x)p
Ff(\))g(than)g(b)o(y)g Fe(y)q Ff(\()p Fe(x)p Ff(\).)p
eop
%%Page: 8 8
8 7 bop 262 307 a Fn(T)l(est)15 b(Problem)e(8)h Fm(\(Linear\))g([6,)f
(p.14])262 357 y Fl(\017y)300 342 y Fk(00)331 357 y Fm(+)c
Fl(y)393 342 y Fk(0)417 357 y Fm(=)j(0,)59 b Fl(y)q Fm(\(0\))13
b(=)e(1)p Fl(;)18 b(y)q Fm(\(1\))13 b(=)e(2)p Fl(:)262
407 y Fm(Exact)j(solution)f(is)h Fl(y)q Fm(\()p Fl(x)p
Fm(\))e(=)g(\(2)d Fj(\000)g Fm(exp)q(\()p Fj(\000)p Fm(1)p
Fl(=\017)p Fm(\))g Fj(\000)h Fm(exp\()p Fj(\000)p Fl(x=\017)p
Fm(\)\))p Fl(=)p Fm(\(1)f Fj(\000)g Fm(exp)q(\()p Fj(\000)p
Fm(1)p Fl(=\017)p Fm(\)\).)262 457 y(The)14 b(solution)f(has)h(a)g(b)q
(oundary)f(la)o(y)o(er)h(of)f(width)h Fl(O)q Fm(\()p
Fl(\017)p Fm(\))g(at)f Fl(x)f Fm(=)f(0.)439 1739 y @beginspecial
72 @llx 72 @lly 540 @urx 720 @ury 2834 @rwi @setspecial
%%BeginDocument: ../PLOTS/pr8.ps

/Mathdict 150 dict def
Mathdict begin
/Mlmarg		1.0 72 mul def
/Mrmarg		1.0 72 mul def
/Mbmarg		1.0 72 mul def
/Mtmarg		1.0 72 mul def
/Mwidth		8.5 72 mul def
/Mheight	11 72 mul def
/Mtransform	{  } bind def
/Mnodistort	true def
/Mfixwid	true	def
/Mfixdash	false def
/Mrot		0	def
/Mpstart {
MathPictureStart
} bind def
/Mpend {
MathPictureEnd
} bind def
/Mscale {
0 1 0 1
5 -1 roll
MathScale
} bind def
/ISOLatin1Encoding dup where
{ pop pop }
{
[
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft
/logicalnot /hyphen /registered /macron
/degree /plusminus /twosuperior /threesuperior
/acute /mu /paragraph /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright
/onequarter /onehalf /threequarters /questiondown
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis
] def
} ifelse
/MFontDict 50 dict def
/MStrCat
{
exch
dup length
2 index length add
string
dup 3 1 roll
copy
length
exch dup
4 2 roll exch
putinterval
} def
/MCreateEncoding
{
1 index
255 string cvs
(-) MStrCat
1 index MStrCat
cvn exch
(Encoding) MStrCat
cvn dup where
{
exch get
}
{
pop
StandardEncoding
} ifelse
3 1 roll
dup MFontDict exch known not
{
1 index findfont
dup length dict
begin
{1 index /FID ne
{def}
{pop pop}
ifelse} forall
/Encoding 3 index
def
currentdict
end
1 index exch definefont pop
MFontDict 1 index
null put
}
if
exch pop
exch pop
} def
/ISOLatin1 { (ISOLatin1) MCreateEncoding } def
/ISO8859 { (ISOLatin1) MCreateEncoding } def
/Mcopyfont {
dup
maxlength
dict
exch
{
1 index
/FID
eq
{
pop pop
}
{
2 index
3 1 roll
put
}
ifelse
}
forall
} def
/Plain	/Courier findfont Mcopyfont definefont pop
/Bold	/Courier-Bold findfont Mcopyfont definefont pop
/Italic /Courier-Oblique findfont Mcopyfont definefont pop
/MathPictureStart {
gsave
Mtransform
Mlmarg
Mbmarg
translate
Mwidth
Mlmarg Mrmarg add
sub
/Mwidth exch def
Mheight
Mbmarg Mtmarg add
sub
/Mheight exch def
/Mtmatrix
matrix currentmatrix
def
/Mgmatrix
matrix currentmatrix
def
} bind def
/MathPictureEnd {
grestore
} bind def
/MFill {
0 0 		moveto
Mwidth 0 	lineto
Mwidth Mheight 	lineto
0 Mheight 	lineto
fill
} bind def
/MPlotRegion {
3 index
Mwidth mul
2 index
Mheight mul
translate
exch sub
Mheight mul
/Mheight
exch def
exch sub
Mwidth mul
/Mwidth
exch def
} bind def
/MathSubStart {
Momatrix
Mgmatrix Mtmatrix
Mwidth Mheight
7 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
Mgmatrix setmatrix
9 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
2 copy translate
/Mtmatrix matrix currentmatrix def
3 -1 roll
exch sub
/Mheight exch def
sub
/Mwidth exch def
} bind def
/MathSubEnd {
/Mheight exch def
/Mwidth exch def
/Mtmatrix exch def
dup setmatrix
/Mgmatrix exch def
/Momatrix exch def
} bind def
/Mdot {
moveto
0 0 rlineto
stroke
} bind def
/Mtetra {
moveto
lineto
lineto
lineto
fill
} bind def
/Metetra {
moveto
lineto
lineto
lineto
closepath
gsave
fill
grestore
0 setgray
stroke
} bind def
/Mistroke {
flattenpath
0 0 0
{
4 2 roll
pop pop
}
{
4 -1 roll
2 index
sub dup mul
4 -1 roll
2 index
sub dup mul
add sqrt
4 -1 roll
add
3 1 roll
}
{
stop
}
{
stop
}
pathforall
pop pop
currentpoint
stroke
moveto
currentdash
3 -1 roll
add
setdash
} bind def
/Mfstroke {
stroke
currentdash
pop 0
setdash
} bind def
/Mrotsboxa {
gsave
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
grestore
Msboxa
3  -1 roll
/Mtmatrix
exch def
/Mrot
0 def
} bind def
/Msboxa {
newpath
5 -1 roll
Mvboxa
pop
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Msboxa1
5 -3 roll
Msboxa1
Mboxrot
[
7 -2 roll
2 copy
[
3 1 roll
10 -1 roll
9 -1 roll
]
6 1 roll
5 -2 roll
]
} bind def
/Msboxa1 {
sub
2 div
dup
2 index
1 add
mul
3 -1 roll
-1 add
3 -1 roll
mul
} bind def
/Mvboxa	{
Mfixwid
{
Mvboxa1
}
{
dup
Mwidthcal
0 exch
{
add
}
forall
exch
Mvboxa1
4 index
7 -1 roll
add
4 -1 roll
pop
3 1 roll
}
ifelse
} bind def
/Mvboxa1 {
gsave
newpath
[ true
3 -1 roll
{
Mbbox
5 -1 roll
{
0
5 1 roll
}
{
7 -1 roll
exch sub
(m) stringwidth pop
.3 mul
sub
7 1 roll
6 -1 roll
4 -1 roll
Mmin
3 -1 roll
5 index
add
5 -1 roll
4 -1 roll
Mmax
4 -1 roll
}
ifelse
false
}
forall
{ stop } if
counttomark
1 add
4 roll
]
grestore
} bind def
/Mbbox {
1 dict begin
0 0 moveto
/temp (T) def
{	gsave
currentpoint newpath moveto
temp 0 3 -1 roll put temp
false charpath flattenpath currentpoint
pathbbox
grestore moveto lineto moveto} forall
pathbbox
newpath
end
} bind def
/Mmin {
2 copy
gt
{ exch } if
pop
} bind def
/Mmax {
2 copy
lt
{ exch } if
pop
} bind def
/Mrotshowa {
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
Mgmatrix setmatrix
Mshowa
/Mtmatrix
exch def
/Mrot 0 def
} bind def
/Mshowa {
4 -2 roll
moveto
2 index
Mtmatrix setmatrix
Mvboxa
7 1 roll
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Mshowa1
4 1 roll
Mshowa1
rmoveto
currentpoint
Mfixwid
{
Mshowax
}
{
Mshoway
}
ifelse
pop pop pop pop
Mgmatrix setmatrix
} bind def
/Mshowax {	
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
Mfixdash
{
Mfixdashp		
}
if
show
} for
} bind def
/Mfixdashp {
dup
length
1
gt
1 index
true exch
{
45
eq
and
} forall
and
{
gsave
(--)		
stringwidth pop
(-)
stringwidth pop
sub
2 div
0 rmoveto
dup
length
1 sub
{
(-)
show
}
repeat
grestore
}
if
} bind def	
/Mshoway {
3 index
Mwidthcal
5 1 roll
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
[
6 index
aload
length
2 add
-1 roll
{
pop
Strform
stringwidth
pop
neg 
exch
add
0 rmoveto
}
exch
kshow
cleartomark
} for
pop	
} bind def
/Mwidthcal {
[
exch
{
Mwidthcal1
}
forall
]
[
exch
dup
Maxlen
-1 add
0 1
3 -1 roll
{
[
exch
2 index
{		 
1 index	
Mget
exch
}
forall		
pop
Maxget
exch
}
for
pop
]
Mreva
} bind def
/Mreva	{
[
exch
aload
length
-1 1
{1 roll}
for
]
} bind def
/Mget	{
1 index
length
-1 add
1 index
ge
{
get
}
{
pop pop
0
}
ifelse
} bind def
/Maxlen	{
[
exch
{
length
}
forall
Maxget
} bind def
/Maxget	{
counttomark
-1 add
1 1
3 -1 roll
{
pop
Mmax
}
for
exch
pop
} bind def
/Mwidthcal1 {
[
exch
{
Strform
stringwidth
pop
}
forall
]
} bind def
/Strform {
/tem (x) def
tem 0
3 -1 roll
put
tem
} bind def
/Mshowa1 {
2 copy
add
4 1 roll
sub
mul
sub
-2 div
} bind def
/MathScale {
Mwidth
Mheight
Mlp
translate
scale
/yscale exch def
/ybias exch def
/xscale exch def
/xbias exch def
/Momatrix
xscale yscale matrix scale
xbias ybias matrix translate
matrix concatmatrix def
/Mgmatrix
matrix currentmatrix
def
} bind def
/Mlp {
3 copy
Mlpfirst
{
Mnodistort
{
Mmin
dup
} if
4 index
2 index
2 index
Mlprun
11 index
11 -1 roll
10 -4 roll
Mlp1
8 index
9 -5 roll
Mlp1
4 -1 roll
and
{ exit } if
3 -1 roll
pop pop
} loop
exch
3 1 roll
7 -3 roll
pop pop pop
} bind def
/Mlpfirst {
3 -1 roll
dup length
2 copy
-2 add
get
aload
pop pop pop
4 -2 roll
-1 add
get
aload
pop pop pop
6 -1 roll
3 -1 roll
5 -1 roll
sub
div
4 1 roll
exch sub
div
} bind def
/Mlprun {
2 copy
4 index
0 get
dup
4 1 roll
Mlprun1
3 copy
8 -2 roll
9 -1 roll
{
3 copy
Mlprun1
3 copy
11 -3 roll
/gt Mlpminmax
8 3 roll
11 -3 roll
/lt Mlpminmax
8 3 roll
} forall
pop pop pop pop
3 1 roll
pop pop
aload pop
5 -1 roll
aload pop
exch
6 -1 roll
Mlprun2
8 2 roll
4 -1 roll
Mlprun2
6 2 roll
3 -1 roll
Mlprun2
4 2 roll
exch
Mlprun2
6 2 roll
} bind def
/Mlprun1 {
aload pop
exch
6 -1 roll
5 -1 roll
mul add
4 -2 roll
mul
3 -1 roll
add
} bind def
/Mlprun2 {
2 copy
add 2 div
3 1 roll
exch sub
} bind def
/Mlpminmax {
cvx
2 index
6 index
2 index
exec
{
7 -3 roll
4 -1 roll
} if
1 index
5 index
3 -1 roll
exec
{
4 1 roll
pop
5 -1 roll
aload
pop pop
4 -1 roll
aload pop
[
8 -2 roll
pop
5 -2 roll
pop
6 -2 roll
pop
5 -1 roll
]
4 1 roll
pop
}
{
pop pop pop
} ifelse
} bind def
/Mlp1 {
5 index
3 index	sub
5 index
2 index mul
1 index
le
1 index
0 le
or
dup
not
{
1 index
3 index	div
.99999 mul
8 -1 roll
pop
7 1 roll
}
if
8 -1 roll
2 div
7 -2 roll
pop sub
5 index
6 -3 roll
pop pop
mul sub
exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
outflag
1
eq
{
/outflag 0 def
/intop 0 def
/inrht 0 def
} if		
5 index
gsave
Mtmatrix setmatrix
Mvboxa pop
grestore
3 -1 roll
pop
dup
intop
gt
{
/intop
exch def
}
{ pop }
ifelse
dup
inrht
gt
{
/inrht
exch def
}
{ pop }
ifelse
pop
/inflag
1 def
} bind def
/Mouter {
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
inflag
1 eq
{
dup
0 lt
{
dup
intop
mul
neg
/yadtop
exch def
} if
dup
0 gt
{
dup
intop
mul
/yadbot
exch def
}
if
pop
dup
0 lt
{
dup
inrht
mul
neg
/xadrht
exch def
} if
dup
0 gt
{
dup
inrht
mul
/xadlft
exch def
} if
pop
/outflag 1 def
}
{ pop pop}
ifelse
/inflag 0 def
/inrht 0 def
/intop 0 def
} bind def	
/Mboxout {
outflag
1
eq
{
4 -1
roll
xadlft
leadjust
add
sub
4 1 roll
3 -1
roll
yadbot
leadjust
add
sub
3 1
roll
exch
xadrht
leadjust
add
add
exch
yadtop
leadjust
add
add
/outflag 0 def
/xadlft 0 def
/yadbot 0 def
/xadrht 0 def
/yadtop 0 def
} if
} bind def
/leadjust {
(m) stringwidth pop
.5 mul
} bind def
/Mrotcheck {
dup
90
eq
{
yadbot
/yadbot
xadrht
def	
/xadrht
yadtop
def
/yadtop
xadlft
def
/xadlft
exch
def
}
if
dup
cos
1 index
sin
Checkaux
dup
cos
1 index
sin neg
exch
Checkaux
3 1 roll
pop pop
} bind def
/Checkaux {
4 index
exch
4 index
mul
3 1 roll
mul add
4 1 roll
} bind def
/Mboxrot {
Mrot
90 eq
{
brotaux
4 2
roll
}
if
Mrot
180 eq
{
4 2
roll
brotaux
4 2
roll
brotaux
}	
if
Mrot
270 eq
{
4 2
roll
brotaux
}
if
} bind def
/brotaux {
neg
exch
neg
} bind def
/Mabsproc {
0
matrix defaultmatrix
dtransform idtransform
dup mul exch
dup mul
add sqrt
} bind def
/Mabswid {
Mabsproc
setlinewidth	
} bind def
/Mabsdash {
exch
[
exch
{
Mabsproc
}
forall
]
exch
setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop}
repeat
} bind def
} ifelse
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/setcmykcolor where
{ pop}
{ /setcmykcolor {
4 1
roll
[
4 1 
roll
]
{
1 index
sub
1
sub neg
dup
0
lt
{
pop
0
}
if
dup
1
gt
{
pop
1
}
if
exch
} forall
pop
setrgbcolor
} bind def
} ifelse
/Mcharproc
{
currentfile
(x)
readhexstring
pop
0 get
exch
div
} bind def
/Mshadeproc
{
dup
3 1
roll
{
dup
Mcharproc
3 1
roll
} repeat
1 eq
{
setgray
}
{
3 eq
{
setrgbcolor
}
{
setcmykcolor
} ifelse
} ifelse
} bind def
/Mrectproc
{
3 index
2 index
moveto
2 index
3 -1
roll
lineto
dup
3 1
roll
lineto
lineto
fill
} bind def
/Mcolorimage
{
7 1
roll
pop
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
9 index
Mshadeproc
Mrectproc
} for
pop
} for
pop pop pop pop
} bind def
/Mimage
{
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
Mcharproc
setgray
Mrectproc
} for
pop
} for
pop pop pop
} bind def

MathPictureStart
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0454545 0.909091 -0.533757 0.561849 [
[(0)] .04545 0 0 2 0 Minner Mrotsboxa
[(0.2)] .22727 0 0 2 0 Minner Mrotsboxa
[(0.4)] .40909 0 0 2 0 Minner Mrotsboxa
[(0.6)] .59091 0 0 2 0 Minner Mrotsboxa
[(0.8)] .77273 0 0 2 0 Minner Mrotsboxa
[(1)] .95455 0 0 2 0 Minner Mrotsboxa
[()] .5 0 0 2 0 0 -1 Mouter Mrotsboxa
[(1)] -0.0125 .02809 1 0 0 Minner Mrotsboxa
[(1.2)] -0.0125 .14046 1 0 0 Minner Mrotsboxa
[(1.4)] -0.0125 .25283 1 0 0 Minner Mrotsboxa
[(1.6)] -0.0125 .3652 1 0 0 Minner Mrotsboxa
[(1.8)] -0.0125 .47757 1 0 0 Minner Mrotsboxa
[(2)] -0.0125 .58994 1 0 0 Minner Mrotsboxa
[(Epsilon = 0.2, 0.1, 0.01)] .5 .61803 0 -4 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 .61903 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 g
p
p
.002 w
.04545 0 m
.04545 .00625 L
s
P
[(0)] .04545 0 0 2 0 Minner Mrotshowa
p
.002 w
.22727 0 m
.22727 .00625 L
s
P
[(0.2)] .22727 0 0 2 0 Minner Mrotshowa
p
.002 w
.40909 0 m
.40909 .00625 L
s
P
[(0.4)] .40909 0 0 2 0 Minner Mrotshowa
p
.002 w
.59091 0 m
.59091 .00625 L
s
P
[(0.6)] .59091 0 0 2 0 Minner Mrotshowa
p
.002 w
.77273 0 m
.77273 .00625 L
s
P
[(0.8)] .77273 0 0 2 0 Minner Mrotshowa
p
.002 w
.95455 0 m
.95455 .00625 L
s
P
[(1)] .95455 0 0 2 0 Minner Mrotshowa
p
.001 w
.08182 0 m
.08182 .00375 L
s
P
p
.001 w
.11818 0 m
.11818 .00375 L
s
P
p
.001 w
.15455 0 m
.15455 .00375 L
s
P
p
.001 w
.19091 0 m
.19091 .00375 L
s
P
p
.001 w
.26364 0 m
.26364 .00375 L
s
P
p
.001 w
.3 0 m
.3 .00375 L
s
P
p
.001 w
.33636 0 m
.33636 .00375 L
s
P
p
.001 w
.37273 0 m
.37273 .00375 L
s
P
p
.001 w
.44545 0 m
.44545 .00375 L
s
P
p
.001 w
.48182 0 m
.48182 .00375 L
s
P
p
.001 w
.51818 0 m
.51818 .00375 L
s
P
p
.001 w
.55455 0 m
.55455 .00375 L
s
P
p
.001 w
.62727 0 m
.62727 .00375 L
s
P
p
.001 w
.66364 0 m
.66364 .00375 L
s
P
p
.001 w
.7 0 m
.7 .00375 L
s
P
p
.001 w
.73636 0 m
.73636 .00375 L
s
P
p
.001 w
.80909 0 m
.80909 .00375 L
s
P
p
.001 w
.84545 0 m
.84545 .00375 L
s
P
p
.001 w
.88182 0 m
.88182 .00375 L
s
P
p
.001 w
.91818 0 m
.91818 .00375 L
s
P
p
.001 w
.00909 0 m
.00909 .00375 L
s
P
p
.001 w
.99091 0 m
.99091 .00375 L
s
P
[()] .5 0 0 2 0 0 -1 Mouter Mrotshowa
p
.002 w
0 0 m
1 0 L
s
P
p
.002 w
0 .02809 m
.00625 .02809 L
s
P
[(1)] -0.0125 .02809 1 0 0 Minner Mrotshowa
p
.002 w
0 .14046 m
.00625 .14046 L
s
P
[(1.2)] -0.0125 .14046 1 0 0 Minner Mrotshowa
p
.002 w
0 .25283 m
.00625 .25283 L
s
P
[(1.4)] -0.0125 .25283 1 0 0 Minner Mrotshowa
p
.002 w
0 .3652 m
.00625 .3652 L
s
P
[(1.6)] -0.0125 .3652 1 0 0 Minner Mrotshowa
p
.002 w
0 .47757 m
.00625 .47757 L
s
P
[(1.8)] -0.0125 .47757 1 0 0 Minner Mrotshowa
p
.002 w
0 .58994 m
.00625 .58994 L
s
P
[(2)] -0.0125 .58994 1 0 0 Minner Mrotshowa
p
.001 w
0 .05057 m
.00375 .05057 L
s
P
p
.001 w
0 .07304 m
.00375 .07304 L
s
P
p
.001 w
0 .09551 m
.00375 .09551 L
s
P
p
.001 w
0 .11799 m
.00375 .11799 L
s
P
p
.001 w
0 .16294 m
.00375 .16294 L
s
P
p
.001 w
0 .18541 m
.00375 .18541 L
s
P
p
.001 w
0 .20788 m
.00375 .20788 L
s
P
p
.001 w
0 .23036 m
.00375 .23036 L
s
P
p
.001 w
0 .27531 m
.00375 .27531 L
s
P
p
.001 w
0 .29778 m
.00375 .29778 L
s
P
p
.001 w
0 .32025 m
.00375 .32025 L
s
P
p
.001 w
0 .34273 m
.00375 .34273 L
s
P
p
.001 w
0 .38768 m
.00375 .38768 L
s
P
p
.001 w
0 .41015 m
.00375 .41015 L
s
P
p
.001 w
0 .43262 m
.00375 .43262 L
s
P
p
.001 w
0 .4551 m
.00375 .4551 L
s
P
p
.001 w
0 .50005 m
.00375 .50005 L
s
P
p
.001 w
0 .52252 m
.00375 .52252 L
s
P
p
.001 w
0 .54499 m
.00375 .54499 L
s
P
p
.001 w
0 .56747 m
.00375 .56747 L
s
P
p
.001 w
0 .00562 m
.00375 .00562 L
s
P
p
.001 w
0 .61242 m
.00375 .61242 L
s
P
p
.002 w
0 0 m
0 .61803 L
s
P
P
p
p
.002 w
.04545 .61178 m
.04545 .61803 L
s
P
p
.002 w
.22727 .61178 m
.22727 .61803 L
s
P
p
.002 w
.40909 .61178 m
.40909 .61803 L
s
P
p
.002 w
.59091 .61178 m
.59091 .61803 L
s
P
p
.002 w
.77273 .61178 m
.77273 .61803 L
s
P
p
.002 w
.95455 .61178 m
.95455 .61803 L
s
P
p
.001 w
.08182 .61428 m
.08182 .61803 L
s
P
p
.001 w
.11818 .61428 m
.11818 .61803 L
s
P
p
.001 w
.15455 .61428 m
.15455 .61803 L
s
P
p
.001 w
.19091 .61428 m
.19091 .61803 L
s
P
p
.001 w
.26364 .61428 m
.26364 .61803 L
s
P
p
.001 w
.3 .61428 m
.3 .61803 L
s
P
p
.001 w
.33636 .61428 m
.33636 .61803 L
s
P
p
.001 w
.37273 .61428 m
.37273 .61803 L
s
P
p
.001 w
.44545 .61428 m
.44545 .61803 L
s
P
p
.001 w
.48182 .61428 m
.48182 .61803 L
s
P
p
.001 w
.51818 .61428 m
.51818 .61803 L
s
P
p
.001 w
.55455 .61428 m
.55455 .61803 L
s
P
p
.001 w
.62727 .61428 m
.62727 .61803 L
s
P
p
.001 w
.66364 .61428 m
.66364 .61803 L
s
P
p
.001 w
.7 .61428 m
.7 .61803 L
s
P
p
.001 w
.73636 .61428 m
.73636 .61803 L
s
P
p
.001 w
.80909 .61428 m
.80909 .61803 L
s
P
p
.001 w
.84545 .61428 m
.84545 .61803 L
s
P
p
.001 w
.88182 .61428 m
.88182 .61803 L
s
P
p
.001 w
.91818 .61428 m
.91818 .61803 L
s
P
p
.001 w
.00909 .61428 m
.00909 .61803 L
s
P
p
.001 w
.99091 .61428 m
.99091 .61803 L
s
P
[(Epsilon = 0.2, 0.1, 0.01)] .5 .61803 0 -4 Mshowa
p
.002 w
0 .61803 m
1 .61803 L
s
P
p
.002 w
.99375 .02809 m
1 .02809 L
s
P
p
.002 w
.99375 .14046 m
1 .14046 L
s
P
p
.002 w
.99375 .25283 m
1 .25283 L
s
P
p
.002 w
.99375 .3652 m
1 .3652 L
s
P
p
.002 w
.99375 .47757 m
1 .47757 L
s
P
p
.002 w
.99375 .58994 m
1 .58994 L
s
P
p
.001 w
.99625 .05057 m
1 .05057 L
s
P
p
.001 w
.99625 .07304 m
1 .07304 L
s
P
p
.001 w
.99625 .09551 m
1 .09551 L
s
P
p
.001 w
.99625 .11799 m
1 .11799 L
s
P
p
.001 w
.99625 .16294 m
1 .16294 L
s
P
p
.001 w
.99625 .18541 m
1 .18541 L
s
P
p
.001 w
.99625 .20788 m
1 .20788 L
s
P
p
.001 w
.99625 .23036 m
1 .23036 L
s
P
p
.001 w
.99625 .27531 m
1 .27531 L
s
P
p
.001 w
.99625 .29778 m
1 .29778 L
s
P
p
.001 w
.99625 .32025 m
1 .32025 L
s
P
p
.001 w
.99625 .34273 m
1 .34273 L
s
P
p
.001 w
.99625 .38768 m
1 .38768 L
s
P
p
.001 w
.99625 .41015 m
1 .41015 L
s
P
p
.001 w
.99625 .43262 m
1 .43262 L
s
P
p
.001 w
.99625 .4551 m
1 .4551 L
s
P
p
.001 w
.99625 .50005 m
1 .50005 L
s
P
p
.001 w
.99625 .52252 m
1 .52252 L
s
P
p
.001 w
.99625 .54499 m
1 .54499 L
s
P
p
.001 w
.99625 .56747 m
1 .56747 L
s
P
p
.001 w
.99625 .00562 m
1 .00562 L
s
P
p
.001 w
.99625 .61242 m
1 .61242 L
s
P
p
.002 w
1 0 m
1 .61803 L
s
P
P
p
P
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
p
p
p
.001 w
.04545 .02809 m
.08333 .13447 L
.12121 .22085 L
.15909 .29098 L
.19697 .34792 L
.23485 .39415 L
.27273 .43169 L
.31061 .46217 L
.34848 .48691 L
.38636 .50701 L
.42424 .52332 L
.46212 .53657 L
.5 .54732 L
.53788 .55605 L
.57576 .56314 L
.61364 .5689 L
.65152 .57357 L
.68939 .57737 L
.72727 .58045 L
.76515 .58295 L
.80303 .58498 L
.84091 .58663 L
.87879 .58797 L
.91667 .58906 L
.95455 .58994 L
s
P
P
p
p
.001 w
.04545 .02809 m
.06439 .13376 L
.08333 .21956 L
.12121 .34578 L
.14015 .3917 L
.15909 .42899 L
.17803 .45926 L
.19697 .48384 L
.21591 .5038 L
.23485 .52001 L
.25379 .53316 L
.27273 .54385 L
.31061 .55956 L
.32955 .56528 L
.34848 .56992 L
.36742 .57369 L
.38636 .57675 L
.4053 .57924 L
.42424 .58126 L
.44318 .58289 L
.46212 .58422 L
.48106 .5853 L
.5 .58618 L
.51894 .58689 L
.53788 .58747 L
.55682 .58794 L
.57576 .58832 L
.5947 .58863 L
.61364 .58888 L
.63258 .58909 L
.65152 .58925 L
.67045 .58939 L
.68939 .5895 L
.70833 .58958 L
.72727 .58966 L
.74621 .58971 L
.76515 .58976 L
.78409 .5898 L
.80303 .58983 L
.82197 .58986 L
.84091 .58988 L
.85985 .58989 L
.87879 .58991 L
.91667 .58993 L
.93561 .58994 L
.95455 .58994 L
s
P
P
p
p
.001 w
.04545 .02809 m
.04782 .15691 L
.05019 .25619 L
.05256 .33271 L
.05492 .39168 L
.05729 .43714 L
.05966 .47217 L
.06203 .49917 L
.06439 .51998 L
.06676 .53602 L
.06913 .54838 L
.0715 .55791 L
.07386 .56526 L
.07623 .57092 L
.0786 .57528 L
.08097 .57864 L
.08333 .58123 L
.0857 .58323 L
.08807 .58477 L
.09044 .58595 L
.0928 .58687 L
.09517 .58757 L
.09754 .58812 L
.09991 .58853 L
.10227 .58886 L
.10464 .58911 L
.10701 .5893 L
.10938 .58944 L
.11174 .58956 L
.11411 .58965 L
.11648 .58971 L
.11884 .58977 L
.12121 .58981 L
.12358 .58984 L
.12595 .58986 L
.12831 .58988 L
.13068 .58989 L
.13305 .5899 L
.13542 .58991 L
.13778 .58992 L
.14015 .58992 L
.14252 .58993 L
.14489 .58993 L
.14725 .58993 L
.14962 .58994 L
.15199 .58994 L
.15436 .58994 L
.15672 .58994 L
.15909 .58994 L
.16146 .58994 L
Mistroke
.16383 .58994 L
.16619 .58994 L
.16856 .58994 L
.17093 .58994 L
.1733 .58994 L
.17566 .58994 L
.17803 .58994 L
.1804 .58994 L
.18277 .58994 L
.18513 .58994 L
.1875 .58994 L
.18987 .58994 L
.19223 .58994 L
.1946 .58994 L
.19697 .58994 L
.19934 .58994 L
.2017 .58994 L
.20407 .58994 L
.20644 .58994 L
.20881 .58994 L
.21117 .58994 L
.21354 .58994 L
.21591 .58994 L
.21828 .58994 L
.22064 .58994 L
.22301 .58994 L
.22538 .58994 L
.22775 .58994 L
.23011 .58994 L
.23248 .58994 L
.23485 .58994 L
.23722 .58994 L
.23958 .58994 L
.24195 .58994 L
.24432 .58994 L
.24669 .58994 L
.24905 .58994 L
.25142 .58994 L
.25379 .58994 L
.25616 .58994 L
.25852 .58994 L
.26089 .58994 L
.26326 .58994 L
.26563 .58994 L
.26799 .58994 L
.27036 .58994 L
.27273 .58994 L
.27509 .58994 L
.27746 .58994 L
.27983 .58994 L
Mistroke
.2822 .58994 L
.28456 .58994 L
.28693 .58994 L
.2893 .58994 L
.29167 .58994 L
.29403 .58994 L
.2964 .58994 L
.29877 .58994 L
.30114 .58994 L
.3035 .58994 L
.30587 .58994 L
.30824 .58994 L
.31061 .58994 L
.31297 .58994 L
.31534 .58994 L
.31771 .58994 L
.32008 .58994 L
.32244 .58994 L
.32481 .58994 L
.32718 .58994 L
.32955 .58994 L
.33191 .58994 L
.33428 .58994 L
.33665 .58994 L
.33902 .58994 L
.34138 .58994 L
.34257 .58994 L
.34375 .58994 L
.34612 .58994 L
.3473 .58994 L
.34848 .58994 L
.35085 .58994 L
.35204 .58994 L
.35322 .58994 L
.3544 .58994 L
.35559 .58994 L
.35677 .58994 L
.35795 .58994 L
.36032 .58994 L
.36269 .58994 L
.36387 .58994 L
.36506 .58994 L
.36742 .58994 L
.36861 .58994 L
.36979 .58994 L
.37216 .58994 L
.37453 .58994 L
.37689 .58994 L
.37808 .58994 L
.37926 .58994 L
Mistroke
.38045 .58994 L
.38163 .58994 L
.38281 .58994 L
.384 .58994 L
.38636 .58994 L
.42424 .58994 L
.46212 .58994 L
.5 .58994 L
.53788 .58994 L
.57576 .58994 L
.61364 .58994 L
.65152 .58994 L
.68939 .58994 L
.72727 .58994 L
.76515 .58994 L
.80303 .58994 L
.84091 .58994 L
.87879 .58994 L
.91667 .58994 L
.95455 .58994 L
Mfstroke
P
P
P
% End of Graphics
MathPictureEnd
end
showpage
%%EndDocument
 @endspecial 607 1352 a(Figure)j(8:)k(T)m(est)c(Problem)f(8,)g
Fl(y)q Fm(\()p Fl(x)p Fm(\))i(v)o(ersus)g Fl(x)p eop
%%Page: 9 9
9 8 bop 262 307 a Fn(T)l(est)15 b(Problem)e(9)h Fm(Mo)q(di\014ed)g
(Runge)g(Problem)f(\(Linear\))h([2)o(])262 357 y(\()p
Fl(\017)9 b Fm(+)g Fl(x)369 342 y Fi(2)388 357 y Fm(\))p
Fl(y)425 342 y Fk(00)456 357 y Fm(+)h(4)p Fl(xy)564 342
y Fk(0)585 357 y Fm(+)f(2)p Fl(y)k Fm(=)f(0,)59 b Fl(y)q
Fm(\()p Fj(\000)p Fm(1\))13 b(=)f Fl(y)q Fm(\(1\))g(=)g(1)p
Fl(=)p Fm(\(1)d(+)g Fl(\017)p Fm(\).)262 407 y(Exact)14
b(solution)f(is)h Fl(y)q Fm(\()p Fl(x)p Fm(\))e(=)g(1)p
Fl(=)p Fm(\()p Fl(\017)d Fm(+)g Fl(x)862 392 y Fi(2)880
407 y Fm(\).)262 457 y(The)14 b(solution)f(has)h(a)g(spik)o(e)g(of)f
(heigh)o(t)g(1)p Fl(=\017)h Fm(at)f Fl(x)f Fm(=)f(0.)439
1762 y @beginspecial 72 @llx 72 @lly 540 @urx 720 @ury
2834 @rwi @setspecial
%%BeginDocument: ../PLOTS/pr9.ps

/Mathdict 150 dict def
Mathdict begin
/Mlmarg		1.0 72 mul def
/Mrmarg		1.0 72 mul def
/Mbmarg		1.0 72 mul def
/Mtmarg		1.0 72 mul def
/Mwidth		8.5 72 mul def
/Mheight	11 72 mul def
/Mtransform	{  } bind def
/Mnodistort	true def
/Mfixwid	true	def
/Mfixdash	false def
/Mrot		0	def
/Mpstart {
MathPictureStart
} bind def
/Mpend {
MathPictureEnd
} bind def
/Mscale {
0 1 0 1
5 -1 roll
MathScale
} bind def
/ISOLatin1Encoding dup where
{ pop pop }
{
[
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft
/logicalnot /hyphen /registered /macron
/degree /plusminus /twosuperior /threesuperior
/acute /mu /paragraph /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright
/onequarter /onehalf /threequarters /questiondown
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis
] def
} ifelse
/MFontDict 50 dict def
/MStrCat
{
exch
dup length
2 index length add
string
dup 3 1 roll
copy
length
exch dup
4 2 roll exch
putinterval
} def
/MCreateEncoding
{
1 index
255 string cvs
(-) MStrCat
1 index MStrCat
cvn exch
(Encoding) MStrCat
cvn dup where
{
exch get
}
{
pop
StandardEncoding
} ifelse
3 1 roll
dup MFontDict exch known not
{
1 index findfont
dup length dict
begin
{1 index /FID ne
{def}
{pop pop}
ifelse} forall
/Encoding 3 index
def
currentdict
end
1 index exch definefont pop
MFontDict 1 index
null put
}
if
exch pop
exch pop
} def
/ISOLatin1 { (ISOLatin1) MCreateEncoding } def
/ISO8859 { (ISOLatin1) MCreateEncoding } def
/Mcopyfont {
dup
maxlength
dict
exch
{
1 index
/FID
eq
{
pop pop
}
{
2 index
3 1 roll
put
}
ifelse
}
forall
} def
/Plain	/Courier findfont Mcopyfont definefont pop
/Bold	/Courier-Bold findfont Mcopyfont definefont pop
/Italic /Courier-Oblique findfont Mcopyfont definefont pop
/MathPictureStart {
gsave
Mtransform
Mlmarg
Mbmarg
translate
Mwidth
Mlmarg Mrmarg add
sub
/Mwidth exch def
Mheight
Mbmarg Mtmarg add
sub
/Mheight exch def
/Mtmatrix
matrix currentmatrix
def
/Mgmatrix
matrix currentmatrix
def
} bind def
/MathPictureEnd {
grestore
} bind def
/MFill {
0 0 		moveto
Mwidth 0 	lineto
Mwidth Mheight 	lineto
0 Mheight 	lineto
fill
} bind def
/MPlotRegion {
3 index
Mwidth mul
2 index
Mheight mul
translate
exch sub
Mheight mul
/Mheight
exch def
exch sub
Mwidth mul
/Mwidth
exch def
} bind def
/MathSubStart {
Momatrix
Mgmatrix Mtmatrix
Mwidth Mheight
7 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
Mgmatrix setmatrix
9 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
2 copy translate
/Mtmatrix matrix currentmatrix def
3 -1 roll
exch sub
/Mheight exch def
sub
/Mwidth exch def
} bind def
/MathSubEnd {
/Mheight exch def
/Mwidth exch def
/Mtmatrix exch def
dup setmatrix
/Mgmatrix exch def
/Momatrix exch def
} bind def
/Mdot {
moveto
0 0 rlineto
stroke
} bind def
/Mtetra {
moveto
lineto
lineto
lineto
fill
} bind def
/Metetra {
moveto
lineto
lineto
lineto
closepath
gsave
fill
grestore
0 setgray
stroke
} bind def
/Mistroke {
flattenpath
0 0 0
{
4 2 roll
pop pop
}
{
4 -1 roll
2 index
sub dup mul
4 -1 roll
2 index
sub dup mul
add sqrt
4 -1 roll
add
3 1 roll
}
{
stop
}
{
stop
}
pathforall
pop pop
currentpoint
stroke
moveto
currentdash
3 -1 roll
add
setdash
} bind def
/Mfstroke {
stroke
currentdash
pop 0
setdash
} bind def
/Mrotsboxa {
gsave
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
grestore
Msboxa
3  -1 roll
/Mtmatrix
exch def
/Mrot
0 def
} bind def
/Msboxa {
newpath
5 -1 roll
Mvboxa
pop
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Msboxa1
5 -3 roll
Msboxa1
Mboxrot
[
7 -2 roll
2 copy
[
3 1 roll
10 -1 roll
9 -1 roll
]
6 1 roll
5 -2 roll
]
} bind def
/Msboxa1 {
sub
2 div
dup
2 index
1 add
mul
3 -1 roll
-1 add
3 -1 roll
mul
} bind def
/Mvboxa	{
Mfixwid
{
Mvboxa1
}
{
dup
Mwidthcal
0 exch
{
add
}
forall
exch
Mvboxa1
4 index
7 -1 roll
add
4 -1 roll
pop
3 1 roll
}
ifelse
} bind def
/Mvboxa1 {
gsave
newpath
[ true
3 -1 roll
{
Mbbox
5 -1 roll
{
0
5 1 roll
}
{
7 -1 roll
exch sub
(m) stringwidth pop
.3 mul
sub
7 1 roll
6 -1 roll
4 -1 roll
Mmin
3 -1 roll
5 index
add
5 -1 roll
4 -1 roll
Mmax
4 -1 roll
}
ifelse
false
}
forall
{ stop } if
counttomark
1 add
4 roll
]
grestore
} bind def
/Mbbox {
1 dict begin
0 0 moveto
/temp (T) def
{	gsave
currentpoint newpath moveto
temp 0 3 -1 roll put temp
false charpath flattenpath currentpoint
pathbbox
grestore moveto lineto moveto} forall
pathbbox
newpath
end
} bind def
/Mmin {
2 copy
gt
{ exch } if
pop
} bind def
/Mmax {
2 copy
lt
{ exch } if
pop
} bind def
/Mrotshowa {
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
Mgmatrix setmatrix
Mshowa
/Mtmatrix
exch def
/Mrot 0 def
} bind def
/Mshowa {
4 -2 roll
moveto
2 index
Mtmatrix setmatrix
Mvboxa
7 1 roll
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Mshowa1
4 1 roll
Mshowa1
rmoveto
currentpoint
Mfixwid
{
Mshowax
}
{
Mshoway
}
ifelse
pop pop pop pop
Mgmatrix setmatrix
} bind def
/Mshowax {	
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
Mfixdash
{
Mfixdashp		
}
if
show
} for
} bind def
/Mfixdashp {
dup
length
1
gt
1 index
true exch
{
45
eq
and
} forall
and
{
gsave
(--)		
stringwidth pop
(-)
stringwidth pop
sub
2 div
0 rmoveto
dup
length
1 sub
{
(-)
show
}
repeat
grestore
}
if
} bind def	
/Mshoway {
3 index
Mwidthcal
5 1 roll
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
[
6 index
aload
length
2 add
-1 roll
{
pop
Strform
stringwidth
pop
neg 
exch
add
0 rmoveto
}
exch
kshow
cleartomark
} for
pop	
} bind def
/Mwidthcal {
[
exch
{
Mwidthcal1
}
forall
]
[
exch
dup
Maxlen
-1 add
0 1
3 -1 roll
{
[
exch
2 index
{		 
1 index	
Mget
exch
}
forall		
pop
Maxget
exch
}
for
pop
]
Mreva
} bind def
/Mreva	{
[
exch
aload
length
-1 1
{1 roll}
for
]
} bind def
/Mget	{
1 index
length
-1 add
1 index
ge
{
get
}
{
pop pop
0
}
ifelse
} bind def
/Maxlen	{
[
exch
{
length
}
forall
Maxget
} bind def
/Maxget	{
counttomark
-1 add
1 1
3 -1 roll
{
pop
Mmax
}
for
exch
pop
} bind def
/Mwidthcal1 {
[
exch
{
Strform
stringwidth
pop
}
forall
]
} bind def
/Strform {
/tem (x) def
tem 0
3 -1 roll
put
tem
} bind def
/Mshowa1 {
2 copy
add
4 1 roll
sub
mul
sub
-2 div
} bind def
/MathScale {
Mwidth
Mheight
Mlp
translate
scale
/yscale exch def
/ybias exch def
/xscale exch def
/xbias exch def
/Momatrix
xscale yscale matrix scale
xbias ybias matrix translate
matrix concatmatrix def
/Mgmatrix
matrix currentmatrix
def
} bind def
/Mlp {
3 copy
Mlpfirst
{
Mnodistort
{
Mmin
dup
} if
4 index
2 index
2 index
Mlprun
11 index
11 -1 roll
10 -4 roll
Mlp1
8 index
9 -5 roll
Mlp1
4 -1 roll
and
{ exit } if
3 -1 roll
pop pop
} loop
exch
3 1 roll
7 -3 roll
pop pop pop
} bind def
/Mlpfirst {
3 -1 roll
dup length
2 copy
-2 add
get
aload
pop pop pop
4 -2 roll
-1 add
get
aload
pop pop pop
6 -1 roll
3 -1 roll
5 -1 roll
sub
div
4 1 roll
exch sub
div
} bind def
/Mlprun {
2 copy
4 index
0 get
dup
4 1 roll
Mlprun1
3 copy
8 -2 roll
9 -1 roll
{
3 copy
Mlprun1
3 copy
11 -3 roll
/gt Mlpminmax
8 3 roll
11 -3 roll
/lt Mlpminmax
8 3 roll
} forall
pop pop pop pop
3 1 roll
pop pop
aload pop
5 -1 roll
aload pop
exch
6 -1 roll
Mlprun2
8 2 roll
4 -1 roll
Mlprun2
6 2 roll
3 -1 roll
Mlprun2
4 2 roll
exch
Mlprun2
6 2 roll
} bind def
/Mlprun1 {
aload pop
exch
6 -1 roll
5 -1 roll
mul add
4 -2 roll
mul
3 -1 roll
add
} bind def
/Mlprun2 {
2 copy
add 2 div
3 1 roll
exch sub
} bind def
/Mlpminmax {
cvx
2 index
6 index
2 index
exec
{
7 -3 roll
4 -1 roll
} if
1 index
5 index
3 -1 roll
exec
{
4 1 roll
pop
5 -1 roll
aload
pop pop
4 -1 roll
aload pop
[
8 -2 roll
pop
5 -2 roll
pop
6 -2 roll
pop
5 -1 roll
]
4 1 roll
pop
}
{
pop pop pop
} ifelse
} bind def
/Mlp1 {
5 index
3 index	sub
5 index
2 index mul
1 index
le
1 index
0 le
or
dup
not
{
1 index
3 index	div
.99999 mul
8 -1 roll
pop
7 1 roll
}
if
8 -1 roll
2 div
7 -2 roll
pop sub
5 index
6 -3 roll
pop pop
mul sub
exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
outflag
1
eq
{
/outflag 0 def
/intop 0 def
/inrht 0 def
} if		
5 index
gsave
Mtmatrix setmatrix
Mvboxa pop
grestore
3 -1 roll
pop
dup
intop
gt
{
/intop
exch def
}
{ pop }
ifelse
dup
inrht
gt
{
/inrht
exch def
}
{ pop }
ifelse
pop
/inflag
1 def
} bind def
/Mouter {
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
inflag
1 eq
{
dup
0 lt
{
dup
intop
mul
neg
/yadtop
exch def
} if
dup
0 gt
{
dup
intop
mul
/yadbot
exch def
}
if
pop
dup
0 lt
{
dup
inrht
mul
neg
/xadrht
exch def
} if
dup
0 gt
{
dup
inrht
mul
/xadlft
exch def
} if
pop
/outflag 1 def
}
{ pop pop}
ifelse
/inflag 0 def
/inrht 0 def
/intop 0 def
} bind def	
/Mboxout {
outflag
1
eq
{
4 -1
roll
xadlft
leadjust
add
sub
4 1 roll
3 -1
roll
yadbot
leadjust
add
sub
3 1
roll
exch
xadrht
leadjust
add
add
exch
yadtop
leadjust
add
add
/outflag 0 def
/xadlft 0 def
/yadbot 0 def
/xadrht 0 def
/yadtop 0 def
} if
} bind def
/leadjust {
(m) stringwidth pop
.5 mul
} bind def
/Mrotcheck {
dup
90
eq
{
yadbot
/yadbot
xadrht
def	
/xadrht
yadtop
def
/yadtop
xadlft
def
/xadlft
exch
def
}
if
dup
cos
1 index
sin
Checkaux
dup
cos
1 index
sin neg
exch
Checkaux
3 1 roll
pop pop
} bind def
/Checkaux {
4 index
exch
4 index
mul
3 1 roll
mul add
4 1 roll
} bind def
/Mboxrot {
Mrot
90 eq
{
brotaux
4 2
roll
}
if
Mrot
180 eq
{
4 2
roll
brotaux
4 2
roll
brotaux
}	
if
Mrot
270 eq
{
4 2
roll
brotaux
}
if
} bind def
/brotaux {
neg
exch
neg
} bind def
/Mabsproc {
0
matrix defaultmatrix
dtransform idtransform
dup mul exch
dup mul
add sqrt
} bind def
/Mabswid {
Mabsproc
setlinewidth	
} bind def
/Mabsdash {
exch
[
exch
{
Mabsproc
}
forall
]
exch
setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop}
repeat
} bind def
} ifelse
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/setcmykcolor where
{ pop}
{ /setcmykcolor {
4 1
roll
[
4 1 
roll
]
{
1 index
sub
1
sub neg
dup
0
lt
{
pop
0
}
if
dup
1
gt
{
pop
1
}
if
exch
} forall
pop
setrgbcolor
} bind def
} ifelse
/Mcharproc
{
currentfile
(x)
readhexstring
pop
0 get
exch
div
} bind def
/Mshadeproc
{
dup
3 1
roll
{
dup
Mcharproc
3 1
roll
} repeat
1 eq
{
setgray
}
{
3 eq
{
setrgbcolor
}
{
setcmykcolor
} ifelse
} ifelse
} bind def
/Mrectproc
{
3 index
2 index
moveto
2 index
3 -1
roll
lineto
dup
3 1
roll
lineto
lineto
fill
} bind def
/Mcolorimage
{
7 1
roll
pop
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
9 index
Mshadeproc
Mrectproc
} for
pop
} for
pop pop pop pop
} bind def
/Mimage
{
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
Mcharproc
setgray
Mrectproc
} for
pop
} for
pop pop pop
} bind def

MathPictureStart
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.5 0.47619 0 0.00611915 [
[(-1)] .02381 0 0 2 0 Minner Mrotsboxa
[(-0.5)] .2619 0 0 2 0 Minner Mrotsboxa
[(0)] .5 0 0 2 0 Minner Mrotsboxa
[(0.5)] .7381 0 0 2 0 Minner Mrotsboxa
[(1)] .97619 0 0 2 0 Minner Mrotsboxa
[()] .5 0 0 2 0 0 -1 Mouter Mrotsboxa
[(0)] -0.0125 0 1 0 0 Minner Mrotsboxa
[(20)] -0.0125 .12238 1 0 0 Minner Mrotsboxa
[(40)] -0.0125 .24477 1 0 0 Minner Mrotsboxa
[(60)] -0.0125 .36715 1 0 0 Minner Mrotsboxa
[(80)] -0.0125 .48953 1 0 0 Minner Mrotsboxa
[(100)] -0.0125 .61191 1 0 0 Minner Mrotsboxa
[(Epsilon = 0.05, 0.02, 0.01)] .5 .61803 0 -4 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 .61903 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 g
p
p
.002 w
.02381 0 m
.02381 .00625 L
s
P
[(-1)] .02381 0 0 2 0 Minner Mrotshowa
p
.002 w
.2619 0 m
.2619 .00625 L
s
P
[(-0.5)] .2619 0 0 2 0 Minner Mrotshowa
p
.002 w
.5 0 m
.5 .00625 L
s
P
[(0)] .5 0 0 2 0 Minner Mrotshowa
p
.002 w
.7381 0 m
.7381 .00625 L
s
P
[(0.5)] .7381 0 0 2 0 Minner Mrotshowa
p
.002 w
.97619 0 m
.97619 .00625 L
s
P
[(1)] .97619 0 0 2 0 Minner Mrotshowa
p
.001 w
.07143 0 m
.07143 .00375 L
s
P
p
.001 w
.11905 0 m
.11905 .00375 L
s
P
p
.001 w
.16667 0 m
.16667 .00375 L
s
P
p
.001 w
.21429 0 m
.21429 .00375 L
s
P
p
.001 w
.30952 0 m
.30952 .00375 L
s
P
p
.001 w
.35714 0 m
.35714 .00375 L
s
P
p
.001 w
.40476 0 m
.40476 .00375 L
s
P
p
.001 w
.45238 0 m
.45238 .00375 L
s
P
p
.001 w
.54762 0 m
.54762 .00375 L
s
P
p
.001 w
.59524 0 m
.59524 .00375 L
s
P
p
.001 w
.64286 0 m
.64286 .00375 L
s
P
p
.001 w
.69048 0 m
.69048 .00375 L
s
P
p
.001 w
.78571 0 m
.78571 .00375 L
s
P
p
.001 w
.83333 0 m
.83333 .00375 L
s
P
p
.001 w
.88095 0 m
.88095 .00375 L
s
P
p
.001 w
.92857 0 m
.92857 .00375 L
s
P
[()] .5 0 0 2 0 0 -1 Mouter Mrotshowa
p
.002 w
0 0 m
1 0 L
s
P
p
.002 w
0 0 m
.00625 0 L
s
P
[(0)] -0.0125 0 1 0 0 Minner Mrotshowa
p
.002 w
0 .12238 m
.00625 .12238 L
s
P
[(20)] -0.0125 .12238 1 0 0 Minner Mrotshowa
p
.002 w
0 .24477 m
.00625 .24477 L
s
P
[(40)] -0.0125 .24477 1 0 0 Minner Mrotshowa
p
.002 w
0 .36715 m
.00625 .36715 L
s
P
[(60)] -0.0125 .36715 1 0 0 Minner Mrotshowa
p
.002 w
0 .48953 m
.00625 .48953 L
s
P
[(80)] -0.0125 .48953 1 0 0 Minner Mrotshowa
p
.002 w
0 .61191 m
.00625 .61191 L
s
P
[(100)] -0.0125 .61191 1 0 0 Minner Mrotshowa
p
.001 w
0 .02448 m
.00375 .02448 L
s
P
p
.001 w
0 .04895 m
.00375 .04895 L
s
P
p
.001 w
0 .07343 m
.00375 .07343 L
s
P
p
.001 w
0 .09791 m
.00375 .09791 L
s
P
p
.001 w
0 .14686 m
.00375 .14686 L
s
P
p
.001 w
0 .17134 m
.00375 .17134 L
s
P
p
.001 w
0 .19581 m
.00375 .19581 L
s
P
p
.001 w
0 .22029 m
.00375 .22029 L
s
P
p
.001 w
0 .26924 m
.00375 .26924 L
s
P
p
.001 w
0 .29372 m
.00375 .29372 L
s
P
p
.001 w
0 .3182 m
.00375 .3182 L
s
P
p
.001 w
0 .34267 m
.00375 .34267 L
s
P
p
.001 w
0 .39163 m
.00375 .39163 L
s
P
p
.001 w
0 .4161 m
.00375 .4161 L
s
P
p
.001 w
0 .44058 m
.00375 .44058 L
s
P
p
.001 w
0 .46506 m
.00375 .46506 L
s
P
p
.001 w
0 .51401 m
.00375 .51401 L
s
P
p
.001 w
0 .53849 m
.00375 .53849 L
s
P
p
.001 w
0 .56296 m
.00375 .56296 L
s
P
p
.001 w
0 .58744 m
.00375 .58744 L
s
P
p
.002 w
0 0 m
0 .61803 L
s
P
P
p
p
.002 w
.02381 .61178 m
.02381 .61803 L
s
P
p
.002 w
.2619 .61178 m
.2619 .61803 L
s
P
p
.002 w
.5 .61178 m
.5 .61803 L
s
P
p
.002 w
.7381 .61178 m
.7381 .61803 L
s
P
p
.002 w
.97619 .61178 m
.97619 .61803 L
s
P
p
.001 w
.07143 .61428 m
.07143 .61803 L
s
P
p
.001 w
.11905 .61428 m
.11905 .61803 L
s
P
p
.001 w
.16667 .61428 m
.16667 .61803 L
s
P
p
.001 w
.21429 .61428 m
.21429 .61803 L
s
P
p
.001 w
.30952 .61428 m
.30952 .61803 L
s
P
p
.001 w
.35714 .61428 m
.35714 .61803 L
s
P
p
.001 w
.40476 .61428 m
.40476 .61803 L
s
P
p
.001 w
.45238 .61428 m
.45238 .61803 L
s
P
p
.001 w
.54762 .61428 m
.54762 .61803 L
s
P
p
.001 w
.59524 .61428 m
.59524 .61803 L
s
P
p
.001 w
.64286 .61428 m
.64286 .61803 L
s
P
p
.001 w
.69048 .61428 m
.69048 .61803 L
s
P
p
.001 w
.78571 .61428 m
.78571 .61803 L
s
P
p
.001 w
.83333 .61428 m
.83333 .61803 L
s
P
p
.001 w
.88095 .61428 m
.88095 .61803 L
s
P
p
.001 w
.92857 .61428 m
.92857 .61803 L
s
P
[(Epsilon = 0.05, 0.02, 0.01)] .5 .61803 0 -4 Mshowa
p
.002 w
0 .61803 m
1 .61803 L
s
P
p
.002 w
.99375 0 m
1 0 L
s
P
p
.002 w
.99375 .12238 m
1 .12238 L
s
P
p
.002 w
.99375 .24477 m
1 .24477 L
s
P
p
.002 w
.99375 .36715 m
1 .36715 L
s
P
p
.002 w
.99375 .48953 m
1 .48953 L
s
P
p
.002 w
.99375 .61191 m
1 .61191 L
s
P
p
.001 w
.99625 .02448 m
1 .02448 L
s
P
p
.001 w
.99625 .04895 m
1 .04895 L
s
P
p
.001 w
.99625 .07343 m
1 .07343 L
s
P
p
.001 w
.99625 .09791 m
1 .09791 L
s
P
p
.001 w
.99625 .14686 m
1 .14686 L
s
P
p
.001 w
.99625 .17134 m
1 .17134 L
s
P
p
.001 w
.99625 .19581 m
1 .19581 L
s
P
p
.001 w
.99625 .22029 m
1 .22029 L
s
P
p
.001 w
.99625 .26924 m
1 .26924 L
s
P
p
.001 w
.99625 .29372 m
1 .29372 L
s
P
p
.001 w
.99625 .3182 m
1 .3182 L
s
P
p
.001 w
.99625 .34267 m
1 .34267 L
s
P
p
.001 w
.99625 .39163 m
1 .39163 L
s
P
p
.001 w
.99625 .4161 m
1 .4161 L
s
P
p
.001 w
.99625 .44058 m
1 .44058 L
s
P
p
.001 w
.99625 .46506 m
1 .46506 L
s
P
p
.001 w
.99625 .51401 m
1 .51401 L
s
P
p
.001 w
.99625 .53849 m
1 .53849 L
s
P
p
.001 w
.99625 .56296 m
1 .56296 L
s
P
p
.001 w
.99625 .58744 m
1 .58744 L
s
P
p
.002 w
1 0 m
1 .61803 L
s
P
P
p
P
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
p
p
p
.001 w
.02381 .00583 m
.06349 .00687 L
.10317 .00822 L
.14286 .00999 L
.18254 .01238 L
.20238 .01389 L
.22222 .01568 L
.24206 .01782 L
.2619 .0204 L
.28175 .02353 L
.30159 .02737 L
.32143 .0321 L
.34127 .03798 L
.36111 .0453 L
.38095 .05439 L
.42063 .07867 L
.44048 .09324 L
.46032 .10746 L
.47024 .11351 L
.4752 .11608 L
.48016 .11828 L
.48512 .12004 L
.4876 .12075 L
.49008 .12133 L
.49256 .12179 L
.4938 .12197 L
.49504 .12212 L
.49628 .12223 L
.49752 .12232 L
.49876 .12237 L
.5 .12238 L
.50124 .12237 L
.50248 .12232 L
.50372 .12223 L
.50496 .12212 L
.5062 .12197 L
.50744 .12179 L
.50992 .12133 L
.51488 .12004 L
.51984 .11828 L
.52976 .11351 L
.53968 .10746 L
.57937 .07867 L
.59921 .06551 L
.61905 .05439 L
.63889 .0453 L
.65873 .03798 L
.67857 .0321 L
.69841 .02737 L
.7381 .0204 L
Mistroke
.75794 .01782 L
.77778 .01568 L
.81746 .01238 L
.85714 .00999 L
.89683 .00822 L
.93651 .00687 L
.97619 .00583 L
Mfstroke
P
P
p
p
.001 w
.02381 .006 m
.06349 .00711 L
.10317 .00856 L
.14286 .0105 L
.1627 .01173 L
.18254 .01318 L
.20238 .0149 L
.22222 .01698 L
.24206 .01952 L
.2619 .02266 L
.28175 .0266 L
.30159 .03161 L
.32143 .0381 L
.34127 .04667 L
.36111 .05824 L
.38095 .07417 L
.40079 .09651 L
.42063 .12808 L
.44048 .17177 L
.46032 .2271 L
.47024 .25596 L
.4752 .26942 L
.48016 .28152 L
.48512 .29171 L
.4876 .29592 L
.49008 .29946 L
.49256 .30227 L
.4938 .30339 L
.49504 .30431 L
.49628 .30503 L
.49752 .30554 L
.49876 .30585 L
.5 .30596 L
.50124 .30585 L
.50248 .30554 L
.50372 .30503 L
.50496 .30431 L
.5062 .30339 L
.50744 .30227 L
.50992 .29946 L
.51488 .29171 L
.51984 .28152 L
.53968 .2271 L
.55952 .17177 L
.57937 .12808 L
.59921 .09651 L
.61905 .07417 L
.63889 .05824 L
.65873 .04667 L
.67857 .0381 L
Mistroke
.69841 .03161 L
.71825 .0266 L
.7381 .02266 L
.75794 .01952 L
.77778 .01698 L
.79762 .0149 L
.81746 .01318 L
.85714 .0105 L
.89683 .00856 L
.93651 .00711 L
.97619 .006 L
Mfstroke
P
P
p
p
.001 w
.02381 .00606 m
.06349 .0072 L
.10317 .00869 L
.14286 .01069 L
.1627 .01196 L
.18254 .01347 L
.20238 .01527 L
.22222 .01747 L
.24206 .02017 L
.2619 .02354 L
.28175 .02781 L
.30159 .03333 L
.32143 .04063 L
.34127 .05053 L
.35119 .05684 L
.36111 .06437 L
.38095 .0844 L
.39087 .09788 L
.40079 .11458 L
.41071 .13551 L
.42063 .16198 L
.43056 .1957 L
.44048 .2388 L
.46032 .36113 L
.47024 .44003 L
.48016 .52139 L
.48512 .55747 L
.4876 .57305 L
.49008 .58646 L
.49256 .59733 L
.4938 .60171 L
.49504 .60535 L
.49628 .6082 L
.49752 .61026 L
.49876 .6115 L
.5 .61191 L
.50124 .6115 L
.50248 .61026 L
.50372 .6082 L
.50496 .60535 L
.5062 .60171 L
.50744 .59733 L
.50992 .58646 L
.51488 .55747 L
.51984 .52139 L
.53968 .36113 L
.5496 .29347 L
.55952 .2388 L
.56944 .1957 L
.57937 .16198 L
Mistroke
.58929 .13551 L
.59921 .11458 L
.61905 .0844 L
.62897 .07341 L
.63889 .06437 L
.65873 .05053 L
.67857 .04063 L
.69841 .03333 L
.71825 .02781 L
.7381 .02354 L
.75794 .02017 L
.77778 .01747 L
.79762 .01527 L
.81746 .01347 L
.85714 .01069 L
.89683 .00869 L
.93651 .0072 L
.97619 .00606 L
Mfstroke
P
P
P
% End of Graphics
MathPictureEnd
end
showpage
%%EndDocument
 @endspecial 607 1381 a(Figure)j(9:)k(T)m(est)c(Problem)f(9,)g
Fl(y)q Fm(\()p Fl(x)p Fm(\))i(v)o(ersus)g Fl(x)p eop
%%Page: 10 10
10 9 bop 262 307 a Fn(T)l(est)15 b(Problem)e(10)h Fm(\(Linear\))g([6)o
(,)g(p.14])262 357 y Fl(\017y)300 342 y Fk(00)331 357
y Fm(+)9 b Fl(xy)417 342 y Fk(0)441 357 y Fm(=)j(0,)59
b Fl(y)q Fm(\()p Fj(\000)p Fm(1\))13 b(=)e(0)p Fl(;)18
b(y)q Fm(\(1\))13 b(=)e(2.)262 407 y(Exact)j(solution)f(is)h
Fl(y)q Fm(\()p Fl(x)p Fm(\))e(=)g(1)d(+)g(erf)t(\()p
Fl(x=)896 372 y Fj(p)p 930 372 38 2 v 930 407 a Fm(2)p
Fl(\017)p Fm(\))p Fl(=)p Fm(erf)s(\(1)p Fl(=)1113 372
y Fj(p)p 1148 372 V 35 x Fm(2)p Fl(\017)o Fm(\).)262
457 y(The)14 b(solution)f(has)h(a)g(turning)f(p)q(oin)o(t)h(of)f(width)
h Fl(O)q Fm(\()1083 427 y Fj(p)p 1117 427 17 2 v 1117
457 a Fl(\017)p Fm(\))g(at)g Fl(x)d Fm(=)h(0.)439 1762
y @beginspecial 72 @llx 72 @lly 540 @urx 720 @ury 2834
@rwi @setspecial
%%BeginDocument: ../PLOTS/pr10.ps

/Mathdict 150 dict def
Mathdict begin
/Mlmarg		1.0 72 mul def
/Mrmarg		1.0 72 mul def
/Mbmarg		1.0 72 mul def
/Mtmarg		1.0 72 mul def
/Mwidth		8.5 72 mul def
/Mheight	11 72 mul def
/Mtransform	{  } bind def
/Mnodistort	true def
/Mfixwid	true	def
/Mfixdash	false def
/Mrot		0	def
/Mpstart {
MathPictureStart
} bind def
/Mpend {
MathPictureEnd
} bind def
/Mscale {
0 1 0 1
5 -1 roll
MathScale
} bind def
/ISOLatin1Encoding dup where
{ pop pop }
{
[
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft
/logicalnot /hyphen /registered /macron
/degree /plusminus /twosuperior /threesuperior
/acute /mu /paragraph /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright
/onequarter /onehalf /threequarters /questiondown
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis
] def
} ifelse
/MFontDict 50 dict def
/MStrCat
{
exch
dup length
2 index length add
string
dup 3 1 roll
copy
length
exch dup
4 2 roll exch
putinterval
} def
/MCreateEncoding
{
1 index
255 string cvs
(-) MStrCat
1 index MStrCat
cvn exch
(Encoding) MStrCat
cvn dup where
{
exch get
}
{
pop
StandardEncoding
} ifelse
3 1 roll
dup MFontDict exch known not
{
1 index findfont
dup length dict
begin
{1 index /FID ne
{def}
{pop pop}
ifelse} forall
/Encoding 3 index
def
currentdict
end
1 index exch definefont pop
MFontDict 1 index
null put
}
if
exch pop
exch pop
} def
/ISOLatin1 { (ISOLatin1) MCreateEncoding } def
/ISO8859 { (ISOLatin1) MCreateEncoding } def
/Mcopyfont {
dup
maxlength
dict
exch
{
1 index
/FID
eq
{
pop pop
}
{
2 index
3 1 roll
put
}
ifelse
}
forall
} def
/Plain	/Courier findfont Mcopyfont definefont pop
/Bold	/Courier-Bold findfont Mcopyfont definefont pop
/Italic /Courier-Oblique findfont Mcopyfont definefont pop
/MathPictureStart {
gsave
Mtransform
Mlmarg
Mbmarg
translate
Mwidth
Mlmarg Mrmarg add
sub
/Mwidth exch def
Mheight
Mbmarg Mtmarg add
sub
/Mheight exch def
/Mtmatrix
matrix currentmatrix
def
/Mgmatrix
matrix currentmatrix
def
} bind def
/MathPictureEnd {
grestore
} bind def
/MFill {
0 0 		moveto
Mwidth 0 	lineto
Mwidth Mheight 	lineto
0 Mheight 	lineto
fill
} bind def
/MPlotRegion {
3 index
Mwidth mul
2 index
Mheight mul
translate
exch sub
Mheight mul
/Mheight
exch def
exch sub
Mwidth mul
/Mwidth
exch def
} bind def
/MathSubStart {
Momatrix
Mgmatrix Mtmatrix
Mwidth Mheight
7 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
Mgmatrix setmatrix
9 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
2 copy translate
/Mtmatrix matrix currentmatrix def
3 -1 roll
exch sub
/Mheight exch def
sub
/Mwidth exch def
} bind def
/MathSubEnd {
/Mheight exch def
/Mwidth exch def
/Mtmatrix exch def
dup setmatrix
/Mgmatrix exch def
/Momatrix exch def
} bind def
/Mdot {
moveto
0 0 rlineto
stroke
} bind def
/Mtetra {
moveto
lineto
lineto
lineto
fill
} bind def
/Metetra {
moveto
lineto
lineto
lineto
closepath
gsave
fill
grestore
0 setgray
stroke
} bind def
/Mistroke {
flattenpath
0 0 0
{
4 2 roll
pop pop
}
{
4 -1 roll
2 index
sub dup mul
4 -1 roll
2 index
sub dup mul
add sqrt
4 -1 roll
add
3 1 roll
}
{
stop
}
{
stop
}
pathforall
pop pop
currentpoint
stroke
moveto
currentdash
3 -1 roll
add
setdash
} bind def
/Mfstroke {
stroke
currentdash
pop 0
setdash
} bind def
/Mrotsboxa {
gsave
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
grestore
Msboxa
3  -1 roll
/Mtmatrix
exch def
/Mrot
0 def
} bind def
/Msboxa {
newpath
5 -1 roll
Mvboxa
pop
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Msboxa1
5 -3 roll
Msboxa1
Mboxrot
[
7 -2 roll
2 copy
[
3 1 roll
10 -1 roll
9 -1 roll
]
6 1 roll
5 -2 roll
]
} bind def
/Msboxa1 {
sub
2 div
dup
2 index
1 add
mul
3 -1 roll
-1 add
3 -1 roll
mul
} bind def
/Mvboxa	{
Mfixwid
{
Mvboxa1
}
{
dup
Mwidthcal
0 exch
{
add
}
forall
exch
Mvboxa1
4 index
7 -1 roll
add
4 -1 roll
pop
3 1 roll
}
ifelse
} bind def
/Mvboxa1 {
gsave
newpath
[ true
3 -1 roll
{
Mbbox
5 -1 roll
{
0
5 1 roll
}
{
7 -1 roll
exch sub
(m) stringwidth pop
.3 mul
sub
7 1 roll
6 -1 roll
4 -1 roll
Mmin
3 -1 roll
5 index
add
5 -1 roll
4 -1 roll
Mmax
4 -1 roll
}
ifelse
false
}
forall
{ stop } if
counttomark
1 add
4 roll
]
grestore
} bind def
/Mbbox {
1 dict begin
0 0 moveto
/temp (T) def
{	gsave
currentpoint newpath moveto
temp 0 3 -1 roll put temp
false charpath flattenpath currentpoint
pathbbox
grestore moveto lineto moveto} forall
pathbbox
newpath
end
} bind def
/Mmin {
2 copy
gt
{ exch } if
pop
} bind def
/Mmax {
2 copy
lt
{ exch } if
pop
} bind def
/Mrotshowa {
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
Mgmatrix setmatrix
Mshowa
/Mtmatrix
exch def
/Mrot 0 def
} bind def
/Mshowa {
4 -2 roll
moveto
2 index
Mtmatrix setmatrix
Mvboxa
7 1 roll
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Mshowa1
4 1 roll
Mshowa1
rmoveto
currentpoint
Mfixwid
{
Mshowax
}
{
Mshoway
}
ifelse
pop pop pop pop
Mgmatrix setmatrix
} bind def
/Mshowax {	
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
Mfixdash
{
Mfixdashp		
}
if
show
} for
} bind def
/Mfixdashp {
dup
length
1
gt
1 index
true exch
{
45
eq
and
} forall
and
{
gsave
(--)		
stringwidth pop
(-)
stringwidth pop
sub
2 div
0 rmoveto
dup
length
1 sub
{
(-)
show
}
repeat
grestore
}
if
} bind def	
/Mshoway {
3 index
Mwidthcal
5 1 roll
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
[
6 index
aload
length
2 add
-1 roll
{
pop
Strform
stringwidth
pop
neg 
exch
add
0 rmoveto
}
exch
kshow
cleartomark
} for
pop	
} bind def
/Mwidthcal {
[
exch
{
Mwidthcal1
}
forall
]
[
exch
dup
Maxlen
-1 add
0 1
3 -1 roll
{
[
exch
2 index
{		 
1 index	
Mget
exch
}
forall		
pop
Maxget
exch
}
for
pop
]
Mreva
} bind def
/Mreva	{
[
exch
aload
length
-1 1
{1 roll}
for
]
} bind def
/Mget	{
1 index
length
-1 add
1 index
ge
{
get
}
{
pop pop
0
}
ifelse
} bind def
/Maxlen	{
[
exch
{
length
}
forall
Maxget
} bind def
/Maxget	{
counttomark
-1 add
1 1
3 -1 roll
{
pop
Mmax
}
for
exch
pop
} bind def
/Mwidthcal1 {
[
exch
{
Strform
stringwidth
pop
}
forall
]
} bind def
/Strform {
/tem (x) def
tem 0
3 -1 roll
put
tem
} bind def
/Mshowa1 {
2 copy
add
4 1 roll
sub
mul
sub
-2 div
} bind def
/MathScale {
Mwidth
Mheight
Mlp
translate
scale
/yscale exch def
/ybias exch def
/xscale exch def
/xbias exch def
/Momatrix
xscale yscale matrix scale
xbias ybias matrix translate
matrix concatmatrix def
/Mgmatrix
matrix currentmatrix
def
} bind def
/Mlp {
3 copy
Mlpfirst
{
Mnodistort
{
Mmin
dup
} if
4 index
2 index
2 index
Mlprun
11 index
11 -1 roll
10 -4 roll
Mlp1
8 index
9 -5 roll
Mlp1
4 -1 roll
and
{ exit } if
3 -1 roll
pop pop
} loop
exch
3 1 roll
7 -3 roll
pop pop pop
} bind def
/Mlpfirst {
3 -1 roll
dup length
2 copy
-2 add
get
aload
pop pop pop
4 -2 roll
-1 add
get
aload
pop pop pop
6 -1 roll
3 -1 roll
5 -1 roll
sub
div
4 1 roll
exch sub
div
} bind def
/Mlprun {
2 copy
4 index
0 get
dup
4 1 roll
Mlprun1
3 copy
8 -2 roll
9 -1 roll
{
3 copy
Mlprun1
3 copy
11 -3 roll
/gt Mlpminmax
8 3 roll
11 -3 roll
/lt Mlpminmax
8 3 roll
} forall
pop pop pop pop
3 1 roll
pop pop
aload pop
5 -1 roll
aload pop
exch
6 -1 roll
Mlprun2
8 2 roll
4 -1 roll
Mlprun2
6 2 roll
3 -1 roll
Mlprun2
4 2 roll
exch
Mlprun2
6 2 roll
} bind def
/Mlprun1 {
aload pop
exch
6 -1 roll
5 -1 roll
mul add
4 -2 roll
mul
3 -1 roll
add
} bind def
/Mlprun2 {
2 copy
add 2 div
3 1 roll
exch sub
} bind def
/Mlpminmax {
cvx
2 index
6 index
2 index
exec
{
7 -3 roll
4 -1 roll
} if
1 index
5 index
3 -1 roll
exec
{
4 1 roll
pop
5 -1 roll
aload
pop pop
4 -1 roll
aload pop
[
8 -2 roll
pop
5 -2 roll
pop
6 -2 roll
pop
5 -1 roll
]
4 1 roll
pop
}
{
pop pop pop
} ifelse
} bind def
/Mlp1 {
5 index
3 index	sub
5 index
2 index mul
1 index
le
1 index
0 le
or
dup
not
{
1 index
3 index	div
.99999 mul
8 -1 roll
pop
7 1 roll
}
if
8 -1 roll
2 div
7 -2 roll
pop sub
5 index
6 -3 roll
pop pop
mul sub
exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
outflag
1
eq
{
/outflag 0 def
/intop 0 def
/inrht 0 def
} if		
5 index
gsave
Mtmatrix setmatrix
Mvboxa pop
grestore
3 -1 roll
pop
dup
intop
gt
{
/intop
exch def
}
{ pop }
ifelse
dup
inrht
gt
{
/inrht
exch def
}
{ pop }
ifelse
pop
/inflag
1 def
} bind def
/Mouter {
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
inflag
1 eq
{
dup
0 lt
{
dup
intop
mul
neg
/yadtop
exch def
} if
dup
0 gt
{
dup
intop
mul
/yadbot
exch def
}
if
pop
dup
0 lt
{
dup
inrht
mul
neg
/xadrht
exch def
} if
dup
0 gt
{
dup
inrht
mul
/xadlft
exch def
} if
pop
/outflag 1 def
}
{ pop pop}
ifelse
/inflag 0 def
/inrht 0 def
/intop 0 def
} bind def	
/Mboxout {
outflag
1
eq
{
4 -1
roll
xadlft
leadjust
add
sub
4 1 roll
3 -1
roll
yadbot
leadjust
add
sub
3 1
roll
exch
xadrht
leadjust
add
add
exch
yadtop
leadjust
add
add
/outflag 0 def
/xadlft 0 def
/yadbot 0 def
/xadrht 0 def
/yadtop 0 def
} if
} bind def
/leadjust {
(m) stringwidth pop
.5 mul
} bind def
/Mrotcheck {
dup
90
eq
{
yadbot
/yadbot
xadrht
def	
/xadrht
yadtop
def
/yadtop
xadlft
def
/xadlft
exch
def
}
if
dup
cos
1 index
sin
Checkaux
dup
cos
1 index
sin neg
exch
Checkaux
3 1 roll
pop pop
} bind def
/Checkaux {
4 index
exch
4 index
mul
3 1 roll
mul add
4 1 roll
} bind def
/Mboxrot {
Mrot
90 eq
{
brotaux
4 2
roll
}
if
Mrot
180 eq
{
4 2
roll
brotaux
4 2
roll
brotaux
}	
if
Mrot
270 eq
{
4 2
roll
brotaux
}
if
} bind def
/brotaux {
neg
exch
neg
} bind def
/Mabsproc {
0
matrix defaultmatrix
dtransform idtransform
dup mul exch
dup mul
add sqrt
} bind def
/Mabswid {
Mabsproc
setlinewidth	
} bind def
/Mabsdash {
exch
[
exch
{
Mabsproc
}
forall
]
exch
setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop}
repeat
} bind def
} ifelse
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/setcmykcolor where
{ pop}
{ /setcmykcolor {
4 1
roll
[
4 1 
roll
]
{
1 index
sub
1
sub neg
dup
0
lt
{
pop
0
}
if
dup
1
gt
{
pop
1
}
if
exch
} forall
pop
setrgbcolor
} bind def
} ifelse
/Mcharproc
{
currentfile
(x)
readhexstring
pop
0 get
exch
div
} bind def
/Mshadeproc
{
dup
3 1
roll
{
dup
Mcharproc
3 1
roll
} repeat
1 eq
{
setgray
}
{
3 eq
{
setrgbcolor
}
{
setcmykcolor
} ifelse
} ifelse
} bind def
/Mrectproc
{
3 index
2 index
moveto
2 index
3 -1
roll
lineto
dup
3 1
roll
lineto
lineto
fill
} bind def
/Mcolorimage
{
7 1
roll
pop
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
9 index
Mshadeproc
Mrectproc
} for
pop
} for
pop pop pop pop
} bind def
/Mimage
{
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
Mcharproc
setgray
Mrectproc
} for
pop
} for
pop pop pop
} bind def

MathPictureStart
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.5 0.47619 0.0147151 0.294302 [
[(-1)] .02381 0 0 2 0 Minner Mrotsboxa
[(-0.5)] .2619 0 0 2 0 Minner Mrotsboxa
[(0)] .5 0 0 2 0 Minner Mrotsboxa
[(0.5)] .7381 0 0 2 0 Minner Mrotsboxa
[(1)] .97619 0 0 2 0 Minner Mrotsboxa
[()] .5 0 0 2 0 0 -1 Mouter Mrotsboxa
[(0)] -0.0125 .01472 1 0 0 Minner Mrotsboxa
[(0.5)] -0.0125 .16187 1 0 0 Minner Mrotsboxa
[(1)] -0.0125 .30902 1 0 0 Minner Mrotsboxa
[(1.5)] -0.0125 .45617 1 0 0 Minner Mrotsboxa
[(2)] -0.0125 .60332 1 0 0 Minner Mrotsboxa
[(Epsilon = 0.1, 0.05, 0.01)] .5 .61803 0 -4 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 .61903 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 g
p
p
.002 w
.02381 0 m
.02381 .00625 L
s
P
[(-1)] .02381 0 0 2 0 Minner Mrotshowa
p
.002 w
.2619 0 m
.2619 .00625 L
s
P
[(-0.5)] .2619 0 0 2 0 Minner Mrotshowa
p
.002 w
.5 0 m
.5 .00625 L
s
P
[(0)] .5 0 0 2 0 Minner Mrotshowa
p
.002 w
.7381 0 m
.7381 .00625 L
s
P
[(0.5)] .7381 0 0 2 0 Minner Mrotshowa
p
.002 w
.97619 0 m
.97619 .00625 L
s
P
[(1)] .97619 0 0 2 0 Minner Mrotshowa
p
.001 w
.07143 0 m
.07143 .00375 L
s
P
p
.001 w
.11905 0 m
.11905 .00375 L
s
P
p
.001 w
.16667 0 m
.16667 .00375 L
s
P
p
.001 w
.21429 0 m
.21429 .00375 L
s
P
p
.001 w
.30952 0 m
.30952 .00375 L
s
P
p
.001 w
.35714 0 m
.35714 .00375 L
s
P
p
.001 w
.40476 0 m
.40476 .00375 L
s
P
p
.001 w
.45238 0 m
.45238 .00375 L
s
P
p
.001 w
.54762 0 m
.54762 .00375 L
s
P
p
.001 w
.59524 0 m
.59524 .00375 L
s
P
p
.001 w
.64286 0 m
.64286 .00375 L
s
P
p
.001 w
.69048 0 m
.69048 .00375 L
s
P
p
.001 w
.78571 0 m
.78571 .00375 L
s
P
p
.001 w
.83333 0 m
.83333 .00375 L
s
P
p
.001 w
.88095 0 m
.88095 .00375 L
s
P
p
.001 w
.92857 0 m
.92857 .00375 L
s
P
[()] .5 0 0 2 0 0 -1 Mouter Mrotshowa
p
.002 w
0 0 m
1 0 L
s
P
p
.002 w
0 .01472 m
.00625 .01472 L
s
P
[(0)] -0.0125 .01472 1 0 0 Minner Mrotshowa
p
.002 w
0 .16187 m
.00625 .16187 L
s
P
[(0.5)] -0.0125 .16187 1 0 0 Minner Mrotshowa
p
.002 w
0 .30902 m
.00625 .30902 L
s
P
[(1)] -0.0125 .30902 1 0 0 Minner Mrotshowa
p
.002 w
0 .45617 m
.00625 .45617 L
s
P
[(1.5)] -0.0125 .45617 1 0 0 Minner Mrotshowa
p
.002 w
0 .60332 m
.00625 .60332 L
s
P
[(2)] -0.0125 .60332 1 0 0 Minner Mrotshowa
p
.001 w
0 .04415 m
.00375 .04415 L
s
P
p
.001 w
0 .07358 m
.00375 .07358 L
s
P
p
.001 w
0 .10301 m
.00375 .10301 L
s
P
p
.001 w
0 .13244 m
.00375 .13244 L
s
P
p
.001 w
0 .1913 m
.00375 .1913 L
s
P
p
.001 w
0 .22073 m
.00375 .22073 L
s
P
p
.001 w
0 .25016 m
.00375 .25016 L
s
P
p
.001 w
0 .27959 m
.00375 .27959 L
s
P
p
.001 w
0 .33845 m
.00375 .33845 L
s
P
p
.001 w
0 .36788 m
.00375 .36788 L
s
P
p
.001 w
0 .39731 m
.00375 .39731 L
s
P
p
.001 w
0 .42674 m
.00375 .42674 L
s
P
p
.001 w
0 .4856 m
.00375 .4856 L
s
P
p
.001 w
0 .51503 m
.00375 .51503 L
s
P
p
.001 w
0 .54446 m
.00375 .54446 L
s
P
p
.001 w
0 .57389 m
.00375 .57389 L
s
P
p
.002 w
0 0 m
0 .61803 L
s
P
P
p
p
.002 w
.02381 .61178 m
.02381 .61803 L
s
P
p
.002 w
.2619 .61178 m
.2619 .61803 L
s
P
p
.002 w
.5 .61178 m
.5 .61803 L
s
P
p
.002 w
.7381 .61178 m
.7381 .61803 L
s
P
p
.002 w
.97619 .61178 m
.97619 .61803 L
s
P
p
.001 w
.07143 .61428 m
.07143 .61803 L
s
P
p
.001 w
.11905 .61428 m
.11905 .61803 L
s
P
p
.001 w
.16667 .61428 m
.16667 .61803 L
s
P
p
.001 w
.21429 .61428 m
.21429 .61803 L
s
P
p
.001 w
.30952 .61428 m
.30952 .61803 L
s
P
p
.001 w
.35714 .61428 m
.35714 .61803 L
s
P
p
.001 w
.40476 .61428 m
.40476 .61803 L
s
P
p
.001 w
.45238 .61428 m
.45238 .61803 L
s
P
p
.001 w
.54762 .61428 m
.54762 .61803 L
s
P
p
.001 w
.59524 .61428 m
.59524 .61803 L
s
P
p
.001 w
.64286 .61428 m
.64286 .61803 L
s
P
p
.001 w
.69048 .61428 m
.69048 .61803 L
s
P
p
.001 w
.78571 .61428 m
.78571 .61803 L
s
P
p
.001 w
.83333 .61428 m
.83333 .61803 L
s
P
p
.001 w
.88095 .61428 m
.88095 .61803 L
s
P
p
.001 w
.92857 .61428 m
.92857 .61803 L
s
P
[(Epsilon = 0.1, 0.05, 0.01)] .5 .61803 0 -4 Mshowa
p
.002 w
0 .61803 m
1 .61803 L
s
P
p
.002 w
.99375 .01472 m
1 .01472 L
s
P
p
.002 w
.99375 .16187 m
1 .16187 L
s
P
p
.002 w
.99375 .30902 m
1 .30902 L
s
P
p
.002 w
.99375 .45617 m
1 .45617 L
s
P
p
.002 w
.99375 .60332 m
1 .60332 L
s
P
p
.001 w
.99625 .04415 m
1 .04415 L
s
P
p
.001 w
.99625 .07358 m
1 .07358 L
s
P
p
.001 w
.99625 .10301 m
1 .10301 L
s
P
p
.001 w
.99625 .13244 m
1 .13244 L
s
P
p
.001 w
.99625 .1913 m
1 .1913 L
s
P
p
.001 w
.99625 .22073 m
1 .22073 L
s
P
p
.001 w
.99625 .25016 m
1 .25016 L
s
P
p
.001 w
.99625 .27959 m
1 .27959 L
s
P
p
.001 w
.99625 .33845 m
1 .33845 L
s
P
p
.001 w
.99625 .36788 m
1 .36788 L
s
P
p
.001 w
.99625 .39731 m
1 .39731 L
s
P
p
.001 w
.99625 .42674 m
1 .42674 L
s
P
p
.001 w
.99625 .4856 m
1 .4856 L
s
P
p
.001 w
.99625 .51503 m
1 .51503 L
s
P
p
.001 w
.99625 .54446 m
1 .54446 L
s
P
p
.001 w
.99625 .57389 m
1 .57389 L
s
P
p
.002 w
1 0 m
1 .61803 L
s
P
P
p
P
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
p
p
p
.001 w
.02381 .01472 m
.03373 .01483 L
.04365 .01497 L
.05357 .01515 L
.06349 .01536 L
.08333 .01592 L
.09325 .01629 L
.10317 .01673 L
.12302 .01788 L
.14286 .01947 L
.1627 .02165 L
.18254 .02457 L
.20238 .02843 L
.22222 .03344 L
.24206 .03982 L
.2619 .04781 L
.30159 .06956 L
.34127 .10028 L
.38095 .14076 L
.42063 .19057 L
.46032 .24775 L
.5 .30902 L
.53968 .37028 L
.57937 .42746 L
.61905 .47727 L
.65873 .51776 L
.69841 .54847 L
.7381 .57022 L
.75794 .57822 L
.77778 .5846 L
.79762 .5896 L
.81746 .59346 L
.8373 .59638 L
.85714 .59856 L
.87698 .60016 L
.89683 .6013 L
.90675 .60174 L
.91667 .60211 L
.92659 .60242 L
.93651 .60268 L
.94643 .60289 L
.95635 .60306 L
.97619 .60332 L
s
P
P
p
p
.001 w
.02381 .01472 m
.02877 .01472 L
.03373 .01472 L
.03869 .01472 L
.04365 .01472 L
.05357 .01472 L
.05853 .01472 L
.06349 .01473 L
.06845 .01473 L
.07341 .01473 L
.08333 .01474 L
.08829 .01475 L
.09325 .01475 L
.10317 .01477 L
.1131 .0148 L
.12302 .01483 L
.13294 .01488 L
.14286 .01495 L
.15278 .01504 L
.1627 .01516 L
.17262 .01533 L
.18254 .01556 L
.19246 .01585 L
.20238 .01624 L
.2123 .01674 L
.22222 .01739 L
.23214 .01821 L
.24206 .01925 L
.25198 .02055 L
.2619 .02217 L
.27183 .02417 L
.28175 .0266 L
.30159 .03308 L
.32143 .04224 L
.34127 .05475 L
.36111 .07125 L
.38095 .09228 L
.42063 .14893 L
.46032 .22349 L
.5 .30902 L
.53968 .39455 L
.57937 .4691 L
.59921 .49987 L
.61905 .52576 L
.63889 .54678 L
.65873 .56328 L
.67857 .57579 L
.69841 .58495 L
.70833 .58849 L
.71825 .59143 L
Mistroke
.7381 .59586 L
.74802 .59748 L
.75794 .59878 L
.76786 .59982 L
.77778 .60065 L
.7877 .60129 L
.79762 .60179 L
.80754 .60218 L
.81746 .60248 L
.82738 .6027 L
.8373 .60287 L
.84722 .60299 L
.85714 .60309 L
.86706 .60315 L
.87698 .6032 L
.8869 .60324 L
.89683 .60326 L
.90179 .60327 L
.90675 .60328 L
.91171 .60329 L
.91667 .60329 L
.92659 .6033 L
.93155 .60331 L
.93651 .60331 L
.94147 .60331 L
.94643 .60331 L
.95139 .60331 L
.95635 .60332 L
.96131 .60332 L
.96627 .60332 L
.97619 .60332 L
Mfstroke
P
P
p
p
.001 w
.02381 .01472 m
.04365 .01472 L
.06349 .01472 L
.08333 .01472 L
.08829 .01472 L
.09325 .01472 L
.09821 .01472 L
.09945 .01472 L
.10069 .01472 L
.10317 .01472 L
.10441 .01472 L
.10565 .01472 L
.10813 .01472 L
.11062 .01472 L
.11186 .01472 L
.1131 .01472 L
.11434 .01472 L
.11558 .01472 L
.11682 .01472 L
.11806 .01472 L
.1193 .01472 L
.12054 .01472 L
.12302 .01472 L
.12426 .01472 L
.1255 .01472 L
.12674 .01472 L
.12798 .01472 L
.12922 .01472 L
.13046 .01472 L
.13294 .01472 L
.13418 .01472 L
.13542 .01472 L
.13666 .01472 L
.1379 .01472 L
.14038 .01472 L
.14162 .01472 L
.14286 .01472 L
.1441 .01472 L
.14534 .01472 L
.14782 .01472 L
.14906 .01472 L
.1503 .01472 L
.15154 .01472 L
.15278 .01472 L
.15526 .01472 L
.1565 .01472 L
.15774 .01472 L
.15898 .01472 L
.16022 .01472 L
.1627 .01472 L
Mistroke
.16394 .01472 L
.16518 .01472 L
.16642 .01472 L
.16766 .01472 L
.17014 .01472 L
.17138 .01472 L
.17262 .01472 L
.17386 .01472 L
.1751 .01472 L
.17758 .01472 L
.17882 .01472 L
.18006 .01472 L
.18254 .01472 L
.18502 .01472 L
.1875 .01472 L
.18998 .01472 L
.19246 .01472 L
.19494 .01472 L
.19742 .01472 L
.1999 .01472 L
.20238 .01472 L
.20486 .01472 L
.20734 .01472 L
.20982 .01472 L
.2123 .01472 L
.21478 .01472 L
.21726 .01472 L
.21974 .01472 L
.22222 .01472 L
.2247 .01472 L
.22718 .01472 L
.22966 .01472 L
.23214 .01472 L
.23462 .01472 L
.2371 .01472 L
.23958 .01472 L
.24206 .01472 L
.24454 .01472 L
.24702 .01472 L
.2495 .01472 L
.25198 .01472 L
.25446 .01472 L
.25694 .01472 L
.25942 .01472 L
.2619 .01472 L
.26438 .01472 L
.26687 .01472 L
.26935 .01472 L
.27183 .01472 L
.27431 .01472 L
Mistroke
.27679 .01472 L
.27927 .01472 L
.28175 .01472 L
.28423 .01472 L
.28671 .01472 L
.28919 .01472 L
.29167 .01472 L
.29415 .01472 L
.29663 .01472 L
.29911 .01472 L
.30159 .01472 L
.30655 .01473 L
.30903 .01473 L
.31151 .01474 L
.31399 .01474 L
.31647 .01475 L
.32143 .01477 L
.32391 .01478 L
.32639 .01479 L
.32887 .01481 L
.33135 .01483 L
.33631 .01489 L
.33879 .01492 L
.34127 .01497 L
.34623 .01508 L
.35119 .01524 L
.35615 .01546 L
.36111 .01576 L
.36607 .01616 L
.37103 .01671 L
.37599 .01743 L
.38095 .01837 L
.38591 .0196 L
.39087 .02117 L
.39583 .02316 L
.40079 .02567 L
.40575 .02878 L
.41071 .03261 L
.42063 .04284 L
.43056 .05731 L
.44048 .0769 L
.4504 .10229 L
.46032 .13381 L
.5 .30902 L
.51984 .4041 L
.53968 .48423 L
.5496 .51574 L
.55952 .54113 L
.56944 .56072 L
.57937 .57519 L
Mistroke
.58929 .58543 L
.59425 .58925 L
.59921 .59236 L
.60417 .59487 L
.60913 .59687 L
.61409 .59844 L
.61905 .59966 L
.62401 .60061 L
.62897 .60133 L
.63393 .60187 L
.63889 .60228 L
.64385 .60258 L
.64881 .6028 L
.65377 .60295 L
.65873 .60307 L
.66369 .60315 L
.66617 .60318 L
.66865 .6032 L
.67113 .60322 L
.67361 .60324 L
.67857 .60327 L
.68105 .60328 L
.68353 .60328 L
.68601 .60329 L
.68849 .6033 L
.69345 .6033 L
.69593 .60331 L
.69841 .60331 L
.70089 .60331 L
.70337 .60331 L
.70833 .60332 L
.71081 .60332 L
.71329 .60332 L
.71577 .60332 L
.71825 .60332 L
.72073 .60332 L
.72321 .60332 L
.72569 .60332 L
.72817 .60332 L
.73065 .60332 L
.73313 .60332 L
.73562 .60332 L
.7381 .60332 L
.74058 .60332 L
.74306 .60332 L
.74554 .60332 L
.74802 .60332 L
.7505 .60332 L
.75298 .60332 L
.75546 .60332 L
Mistroke
.75794 .60332 L
.76042 .60332 L
.7629 .60332 L
.76538 .60332 L
.76786 .60332 L
.77034 .60332 L
.77282 .60332 L
.7753 .60332 L
.77778 .60332 L
.78026 .60332 L
.78274 .60332 L
.78522 .60332 L
.7877 .60332 L
.79018 .60332 L
.79266 .60332 L
.79514 .60332 L
.79762 .60332 L
.8001 .60332 L
.80258 .60332 L
.80506 .60332 L
.80754 .60332 L
.81002 .60332 L
.8125 .60332 L
.81498 .60332 L
.81746 .60332 L
.81994 .60332 L
.82118 .60332 L
.82242 .60332 L
.8249 .60332 L
.82614 .60332 L
.82738 .60332 L
.82862 .60332 L
.82986 .60332 L
.83234 .60332 L
.83358 .60332 L
.83482 .60332 L
.83606 .60332 L
.8373 .60332 L
.83978 .60332 L
.84102 .60332 L
.84226 .60332 L
.8435 .60332 L
.84474 .60332 L
.84722 .60332 L
.84846 .60332 L
.8497 .60332 L
.85094 .60332 L
.85218 .60332 L
.85466 .60332 L
.8559 .60332 L
Mistroke
.85714 .60332 L
.85838 .60332 L
.85962 .60332 L
.8621 .60332 L
.86334 .60332 L
.86458 .60332 L
.86706 .60332 L
.8683 .60332 L
.86954 .60332 L
.87078 .60332 L
.87202 .60332 L
.87326 .60332 L
.8745 .60332 L
.87698 .60332 L
.87946 .60332 L
.8807 .60332 L
.88194 .60332 L
.88442 .60332 L
.88566 .60332 L
.8869 .60332 L
.88814 .60332 L
.88938 .60332 L
.89187 .60332 L
.89311 .60332 L
.89435 .60332 L
.89683 .60332 L
.93651 .60332 L
.97619 .60332 L
Mfstroke
P
P
P
% End of Graphics
MathPictureEnd
end
showpage
%%EndDocument
 @endspecial 587 1381 a(Figure)i(10:)j(T)m(est)d(Problem)f(10,)g
Fl(y)q Fm(\()p Fl(x)p Fm(\))i(v)o(ersus)g Fl(x)p eop
%%Page: 11 11
11 10 bop 262 307 a Fn(T)l(est)15 b(Problem)e(11)h Fm(\(Linear\))g([2)o
(])262 357 y Fl(\017y)300 342 y Fk(00)331 357 y Fj(\000)9
b Fl(y)14 b Fm(=)d Fj(\000)p Fm(\()p Fl(\017\031)539
342 y Fi(2)568 357 y Fm(+)e(1\))e(cos)q(\()p Fl(\031)q(x)p
Fm(\),)59 b Fl(y)q Fm(\()p Fj(\000)p Fm(1\))13 b(=)f
Fl(y)q Fm(\(1\))g(=)g Fj(\000)p Fm(1.)262 407 y(Exact)i(solution)f(is)h
Fl(y)q Fm(\()p Fl(x)p Fm(\))e(=)g(cos\()p Fl(\031)q(x)p
Fm(\).)262 457 y(The)i(solution)f(is)h(smo)q(oth.)439
1752 y @beginspecial 72 @llx 72 @lly 540 @urx 720 @ury
2834 @rwi @setspecial
%%BeginDocument: ../PLOTS/pr11.ps

/Mathdict 150 dict def
Mathdict begin
/Mlmarg		1.0 72 mul def
/Mrmarg		1.0 72 mul def
/Mbmarg		1.0 72 mul def
/Mtmarg		1.0 72 mul def
/Mwidth		8.5 72 mul def
/Mheight	11 72 mul def
/Mtransform	{  } bind def
/Mnodistort	true def
/Mfixwid	true	def
/Mfixdash	false def
/Mrot		0	def
/Mpstart {
MathPictureStart
} bind def
/Mpend {
MathPictureEnd
} bind def
/Mscale {
0 1 0 1
5 -1 roll
MathScale
} bind def
/ISOLatin1Encoding dup where
{ pop pop }
{
[
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft
/logicalnot /hyphen /registered /macron
/degree /plusminus /twosuperior /threesuperior
/acute /mu /paragraph /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright
/onequarter /onehalf /threequarters /questiondown
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis
] def
} ifelse
/MFontDict 50 dict def
/MStrCat
{
exch
dup length
2 index length add
string
dup 3 1 roll
copy
length
exch dup
4 2 roll exch
putinterval
} def
/MCreateEncoding
{
1 index
255 string cvs
(-) MStrCat
1 index MStrCat
cvn exch
(Encoding) MStrCat
cvn dup where
{
exch get
}
{
pop
StandardEncoding
} ifelse
3 1 roll
dup MFontDict exch known not
{
1 index findfont
dup length dict
begin
{1 index /FID ne
{def}
{pop pop}
ifelse} forall
/Encoding 3 index
def
currentdict
end
1 index exch definefont pop
MFontDict 1 index
null put
}
if
exch pop
exch pop
} def
/ISOLatin1 { (ISOLatin1) MCreateEncoding } def
/ISO8859 { (ISOLatin1) MCreateEncoding } def
/Mcopyfont {
dup
maxlength
dict
exch
{
1 index
/FID
eq
{
pop pop
}
{
2 index
3 1 roll
put
}
ifelse
}
forall
} def
/Plain	/Courier findfont Mcopyfont definefont pop
/Bold	/Courier-Bold findfont Mcopyfont definefont pop
/Italic /Courier-Oblique findfont Mcopyfont definefont pop
/MathPictureStart {
gsave
Mtransform
Mlmarg
Mbmarg
translate
Mwidth
Mlmarg Mrmarg add
sub
/Mwidth exch def
Mheight
Mbmarg Mtmarg add
sub
/Mheight exch def
/Mtmatrix
matrix currentmatrix
def
/Mgmatrix
matrix currentmatrix
def
} bind def
/MathPictureEnd {
grestore
} bind def
/MFill {
0 0 		moveto
Mwidth 0 	lineto
Mwidth Mheight 	lineto
0 Mheight 	lineto
fill
} bind def
/MPlotRegion {
3 index
Mwidth mul
2 index
Mheight mul
translate
exch sub
Mheight mul
/Mheight
exch def
exch sub
Mwidth mul
/Mwidth
exch def
} bind def
/MathSubStart {
Momatrix
Mgmatrix Mtmatrix
Mwidth Mheight
7 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
Mgmatrix setmatrix
9 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
2 copy translate
/Mtmatrix matrix currentmatrix def
3 -1 roll
exch sub
/Mheight exch def
sub
/Mwidth exch def
} bind def
/MathSubEnd {
/Mheight exch def
/Mwidth exch def
/Mtmatrix exch def
dup setmatrix
/Mgmatrix exch def
/Momatrix exch def
} bind def
/Mdot {
moveto
0 0 rlineto
stroke
} bind def
/Mtetra {
moveto
lineto
lineto
lineto
fill
} bind def
/Metetra {
moveto
lineto
lineto
lineto
closepath
gsave
fill
grestore
0 setgray
stroke
} bind def
/Mistroke {
flattenpath
0 0 0
{
4 2 roll
pop pop
}
{
4 -1 roll
2 index
sub dup mul
4 -1 roll
2 index
sub dup mul
add sqrt
4 -1 roll
add
3 1 roll
}
{
stop
}
{
stop
}
pathforall
pop pop
currentpoint
stroke
moveto
currentdash
3 -1 roll
add
setdash
} bind def
/Mfstroke {
stroke
currentdash
pop 0
setdash
} bind def
/Mrotsboxa {
gsave
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
grestore
Msboxa
3  -1 roll
/Mtmatrix
exch def
/Mrot
0 def
} bind def
/Msboxa {
newpath
5 -1 roll
Mvboxa
pop
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Msboxa1
5 -3 roll
Msboxa1
Mboxrot
[
7 -2 roll
2 copy
[
3 1 roll
10 -1 roll
9 -1 roll
]
6 1 roll
5 -2 roll
]
} bind def
/Msboxa1 {
sub
2 div
dup
2 index
1 add
mul
3 -1 roll
-1 add
3 -1 roll
mul
} bind def
/Mvboxa	{
Mfixwid
{
Mvboxa1
}
{
dup
Mwidthcal
0 exch
{
add
}
forall
exch
Mvboxa1
4 index
7 -1 roll
add
4 -1 roll
pop
3 1 roll
}
ifelse
} bind def
/Mvboxa1 {
gsave
newpath
[ true
3 -1 roll
{
Mbbox
5 -1 roll
{
0
5 1 roll
}
{
7 -1 roll
exch sub
(m) stringwidth pop
.3 mul
sub
7 1 roll
6 -1 roll
4 -1 roll
Mmin
3 -1 roll
5 index
add
5 -1 roll
4 -1 roll
Mmax
4 -1 roll
}
ifelse
false
}
forall
{ stop } if
counttomark
1 add
4 roll
]
grestore
} bind def
/Mbbox {
1 dict begin
0 0 moveto
/temp (T) def
{	gsave
currentpoint newpath moveto
temp 0 3 -1 roll put temp
false charpath flattenpath currentpoint
pathbbox
grestore moveto lineto moveto} forall
pathbbox
newpath
end
} bind def
/Mmin {
2 copy
gt
{ exch } if
pop
} bind def
/Mmax {
2 copy
lt
{ exch } if
pop
} bind def
/Mrotshowa {
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
Mgmatrix setmatrix
Mshowa
/Mtmatrix
exch def
/Mrot 0 def
} bind def
/Mshowa {
4 -2 roll
moveto
2 index
Mtmatrix setmatrix
Mvboxa
7 1 roll
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Mshowa1
4 1 roll
Mshowa1
rmoveto
currentpoint
Mfixwid
{
Mshowax
}
{
Mshoway
}
ifelse
pop pop pop pop
Mgmatrix setmatrix
} bind def
/Mshowax {	
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
Mfixdash
{
Mfixdashp		
}
if
show
} for
} bind def
/Mfixdashp {
dup
length
1
gt
1 index
true exch
{
45
eq
and
} forall
and
{
gsave
(--)		
stringwidth pop
(-)
stringwidth pop
sub
2 div
0 rmoveto
dup
length
1 sub
{
(-)
show
}
repeat
grestore
}
if
} bind def	
/Mshoway {
3 index
Mwidthcal
5 1 roll
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
[
6 index
aload
length
2 add
-1 roll
{
pop
Strform
stringwidth
pop
neg 
exch
add
0 rmoveto
}
exch
kshow
cleartomark
} for
pop	
} bind def
/Mwidthcal {
[
exch
{
Mwidthcal1
}
forall
]
[
exch
dup
Maxlen
-1 add
0 1
3 -1 roll
{
[
exch
2 index
{		 
1 index	
Mget
exch
}
forall		
pop
Maxget
exch
}
for
pop
]
Mreva
} bind def
/Mreva	{
[
exch
aload
length
-1 1
{1 roll}
for
]
} bind def
/Mget	{
1 index
length
-1 add
1 index
ge
{
get
}
{
pop pop
0
}
ifelse
} bind def
/Maxlen	{
[
exch
{
length
}
forall
Maxget
} bind def
/Maxget	{
counttomark
-1 add
1 1
3 -1 roll
{
pop
Mmax
}
for
exch
pop
} bind def
/Mwidthcal1 {
[
exch
{
Strform
stringwidth
pop
}
forall
]
} bind def
/Strform {
/tem (x) def
tem 0
3 -1 roll
put
tem
} bind def
/Mshowa1 {
2 copy
add
4 1 roll
sub
mul
sub
-2 div
} bind def
/MathScale {
Mwidth
Mheight
Mlp
translate
scale
/yscale exch def
/ybias exch def
/xscale exch def
/xbias exch def
/Momatrix
xscale yscale matrix scale
xbias ybias matrix translate
matrix concatmatrix def
/Mgmatrix
matrix currentmatrix
def
} bind def
/Mlp {
3 copy
Mlpfirst
{
Mnodistort
{
Mmin
dup
} if
4 index
2 index
2 index
Mlprun
11 index
11 -1 roll
10 -4 roll
Mlp1
8 index
9 -5 roll
Mlp1
4 -1 roll
and
{ exit } if
3 -1 roll
pop pop
} loop
exch
3 1 roll
7 -3 roll
pop pop pop
} bind def
/Mlpfirst {
3 -1 roll
dup length
2 copy
-2 add
get
aload
pop pop pop
4 -2 roll
-1 add
get
aload
pop pop pop
6 -1 roll
3 -1 roll
5 -1 roll
sub
div
4 1 roll
exch sub
div
} bind def
/Mlprun {
2 copy
4 index
0 get
dup
4 1 roll
Mlprun1
3 copy
8 -2 roll
9 -1 roll
{
3 copy
Mlprun1
3 copy
11 -3 roll
/gt Mlpminmax
8 3 roll
11 -3 roll
/lt Mlpminmax
8 3 roll
} forall
pop pop pop pop
3 1 roll
pop pop
aload pop
5 -1 roll
aload pop
exch
6 -1 roll
Mlprun2
8 2 roll
4 -1 roll
Mlprun2
6 2 roll
3 -1 roll
Mlprun2
4 2 roll
exch
Mlprun2
6 2 roll
} bind def
/Mlprun1 {
aload pop
exch
6 -1 roll
5 -1 roll
mul add
4 -2 roll
mul
3 -1 roll
add
} bind def
/Mlprun2 {
2 copy
add 2 div
3 1 roll
exch sub
} bind def
/Mlpminmax {
cvx
2 index
6 index
2 index
exec
{
7 -3 roll
4 -1 roll
} if
1 index
5 index
3 -1 roll
exec
{
4 1 roll
pop
5 -1 roll
aload
pop pop
4 -1 roll
aload pop
[
8 -2 roll
pop
5 -2 roll
pop
6 -2 roll
pop
5 -1 roll
]
4 1 roll
pop
}
{
pop pop pop
} ifelse
} bind def
/Mlp1 {
5 index
3 index	sub
5 index
2 index mul
1 index
le
1 index
0 le
or
dup
not
{
1 index
3 index	div
.99999 mul
8 -1 roll
pop
7 1 roll
}
if
8 -1 roll
2 div
7 -2 roll
pop sub
5 index
6 -3 roll
pop pop
mul sub
exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
outflag
1
eq
{
/outflag 0 def
/intop 0 def
/inrht 0 def
} if		
5 index
gsave
Mtmatrix setmatrix
Mvboxa pop
grestore
3 -1 roll
pop
dup
intop
gt
{
/intop
exch def
}
{ pop }
ifelse
dup
inrht
gt
{
/inrht
exch def
}
{ pop }
ifelse
pop
/inflag
1 def
} bind def
/Mouter {
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
inflag
1 eq
{
dup
0 lt
{
dup
intop
mul
neg
/yadtop
exch def
} if
dup
0 gt
{
dup
intop
mul
/yadbot
exch def
}
if
pop
dup
0 lt
{
dup
inrht
mul
neg
/xadrht
exch def
} if
dup
0 gt
{
dup
inrht
mul
/xadlft
exch def
} if
pop
/outflag 1 def
}
{ pop pop}
ifelse
/inflag 0 def
/inrht 0 def
/intop 0 def
} bind def	
/Mboxout {
outflag
1
eq
{
4 -1
roll
xadlft
leadjust
add
sub
4 1 roll
3 -1
roll
yadbot
leadjust
add
sub
3 1
roll
exch
xadrht
leadjust
add
add
exch
yadtop
leadjust
add
add
/outflag 0 def
/xadlft 0 def
/yadbot 0 def
/xadrht 0 def
/yadtop 0 def
} if
} bind def
/leadjust {
(m) stringwidth pop
.5 mul
} bind def
/Mrotcheck {
dup
90
eq
{
yadbot
/yadbot
xadrht
def	
/xadrht
yadtop
def
/yadtop
xadlft
def
/xadlft
exch
def
}
if
dup
cos
1 index
sin
Checkaux
dup
cos
1 index
sin neg
exch
Checkaux
3 1 roll
pop pop
} bind def
/Checkaux {
4 index
exch
4 index
mul
3 1 roll
mul add
4 1 roll
} bind def
/Mboxrot {
Mrot
90 eq
{
brotaux
4 2
roll
}
if
Mrot
180 eq
{
4 2
roll
brotaux
4 2
roll
brotaux
}	
if
Mrot
270 eq
{
4 2
roll
brotaux
}
if
} bind def
/brotaux {
neg
exch
neg
} bind def
/Mabsproc {
0
matrix defaultmatrix
dtransform idtransform
dup mul exch
dup mul
add sqrt
} bind def
/Mabswid {
Mabsproc
setlinewidth	
} bind def
/Mabsdash {
exch
[
exch
{
Mabsproc
}
forall
]
exch
setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop}
repeat
} bind def
} ifelse
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/setcmykcolor where
{ pop}
{ /setcmykcolor {
4 1
roll
[
4 1 
roll
]
{
1 index
sub
1
sub neg
dup
0
lt
{
pop
0
}
if
dup
1
gt
{
pop
1
}
if
exch
} forall
pop
setrgbcolor
} bind def
} ifelse
/Mcharproc
{
currentfile
(x)
readhexstring
pop
0 get
exch
div
} bind def
/Mshadeproc
{
dup
3 1
roll
{
dup
Mcharproc
3 1
roll
} repeat
1 eq
{
setgray
}
{
3 eq
{
setrgbcolor
}
{
setcmykcolor
} ifelse
} ifelse
} bind def
/Mrectproc
{
3 index
2 index
moveto
2 index
3 -1
roll
lineto
dup
3 1
roll
lineto
lineto
fill
} bind def
/Mcolorimage
{
7 1
roll
pop
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
9 index
Mshadeproc
Mrectproc
} for
pop
} for
pop pop pop pop
} bind def
/Mimage
{
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
Mcharproc
setgray
Mrectproc
} for
pop
} for
pop pop pop
} bind def

MathPictureStart
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.5 0.47619 0.309017 0.294302 [
[(-1)] .02381 0 0 2 0 Minner Mrotsboxa
[(-0.5)] .2619 0 0 2 0 Minner Mrotsboxa
[(0)] .5 0 0 2 0 Minner Mrotsboxa
[(0.5)] .7381 0 0 2 0 Minner Mrotsboxa
[(1)] .97619 0 0 2 0 Minner Mrotsboxa
[()] .5 0 0 2 0 0 -1 Mouter Mrotsboxa
[(-1)] -0.0125 .01472 1 0 0 Minner Mrotsboxa
[(-0.5)] -0.0125 .16187 1 0 0 Minner Mrotsboxa
[(0)] -0.0125 .30902 1 0 0 Minner Mrotsboxa
[(0.5)] -0.0125 .45617 1 0 0 Minner Mrotsboxa
[(1)] -0.0125 .60332 1 0 0 Minner Mrotsboxa
[(All Epsilon)] .5 .61803 0 -4 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 .61903 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 g
p
p
.002 w
.02381 0 m
.02381 .00625 L
s
P
[(-1)] .02381 0 0 2 0 Minner Mrotshowa
p
.002 w
.2619 0 m
.2619 .00625 L
s
P
[(-0.5)] .2619 0 0 2 0 Minner Mrotshowa
p
.002 w
.5 0 m
.5 .00625 L
s
P
[(0)] .5 0 0 2 0 Minner Mrotshowa
p
.002 w
.7381 0 m
.7381 .00625 L
s
P
[(0.5)] .7381 0 0 2 0 Minner Mrotshowa
p
.002 w
.97619 0 m
.97619 .00625 L
s
P
[(1)] .97619 0 0 2 0 Minner Mrotshowa
p
.001 w
.07143 0 m
.07143 .00375 L
s
P
p
.001 w
.11905 0 m
.11905 .00375 L
s
P
p
.001 w
.16667 0 m
.16667 .00375 L
s
P
p
.001 w
.21429 0 m
.21429 .00375 L
s
P
p
.001 w
.30952 0 m
.30952 .00375 L
s
P
p
.001 w
.35714 0 m
.35714 .00375 L
s
P
p
.001 w
.40476 0 m
.40476 .00375 L
s
P
p
.001 w
.45238 0 m
.45238 .00375 L
s
P
p
.001 w
.54762 0 m
.54762 .00375 L
s
P
p
.001 w
.59524 0 m
.59524 .00375 L
s
P
p
.001 w
.64286 0 m
.64286 .00375 L
s
P
p
.001 w
.69048 0 m
.69048 .00375 L
s
P
p
.001 w
.78571 0 m
.78571 .00375 L
s
P
p
.001 w
.83333 0 m
.83333 .00375 L
s
P
p
.001 w
.88095 0 m
.88095 .00375 L
s
P
p
.001 w
.92857 0 m
.92857 .00375 L
s
P
[()] .5 0 0 2 0 0 -1 Mouter Mrotshowa
p
.002 w
0 0 m
1 0 L
s
P
p
.002 w
0 .01472 m
.00625 .01472 L
s
P
[(-1)] -0.0125 .01472 1 0 0 Minner Mrotshowa
p
.002 w
0 .16187 m
.00625 .16187 L
s
P
[(-0.5)] -0.0125 .16187 1 0 0 Minner Mrotshowa
p
.002 w
0 .30902 m
.00625 .30902 L
s
P
[(0)] -0.0125 .30902 1 0 0 Minner Mrotshowa
p
.002 w
0 .45617 m
.00625 .45617 L
s
P
[(0.5)] -0.0125 .45617 1 0 0 Minner Mrotshowa
p
.002 w
0 .60332 m
.00625 .60332 L
s
P
[(1)] -0.0125 .60332 1 0 0 Minner Mrotshowa
p
.001 w
0 .04415 m
.00375 .04415 L
s
P
p
.001 w
0 .07358 m
.00375 .07358 L
s
P
p
.001 w
0 .10301 m
.00375 .10301 L
s
P
p
.001 w
0 .13244 m
.00375 .13244 L
s
P
p
.001 w
0 .1913 m
.00375 .1913 L
s
P
p
.001 w
0 .22073 m
.00375 .22073 L
s
P
p
.001 w
0 .25016 m
.00375 .25016 L
s
P
p
.001 w
0 .27959 m
.00375 .27959 L
s
P
p
.001 w
0 .33845 m
.00375 .33845 L
s
P
p
.001 w
0 .36788 m
.00375 .36788 L
s
P
p
.001 w
0 .39731 m
.00375 .39731 L
s
P
p
.001 w
0 .42674 m
.00375 .42674 L
s
P
p
.001 w
0 .4856 m
.00375 .4856 L
s
P
p
.001 w
0 .51503 m
.00375 .51503 L
s
P
p
.001 w
0 .54446 m
.00375 .54446 L
s
P
p
.001 w
0 .57389 m
.00375 .57389 L
s
P
p
.002 w
0 0 m
0 .61803 L
s
P
P
p
p
.002 w
.02381 .61178 m
.02381 .61803 L
s
P
p
.002 w
.2619 .61178 m
.2619 .61803 L
s
P
p
.002 w
.5 .61178 m
.5 .61803 L
s
P
p
.002 w
.7381 .61178 m
.7381 .61803 L
s
P
p
.002 w
.97619 .61178 m
.97619 .61803 L
s
P
p
.001 w
.07143 .61428 m
.07143 .61803 L
s
P
p
.001 w
.11905 .61428 m
.11905 .61803 L
s
P
p
.001 w
.16667 .61428 m
.16667 .61803 L
s
P
p
.001 w
.21429 .61428 m
.21429 .61803 L
s
P
p
.001 w
.30952 .61428 m
.30952 .61803 L
s
P
p
.001 w
.35714 .61428 m
.35714 .61803 L
s
P
p
.001 w
.40476 .61428 m
.40476 .61803 L
s
P
p
.001 w
.45238 .61428 m
.45238 .61803 L
s
P
p
.001 w
.54762 .61428 m
.54762 .61803 L
s
P
p
.001 w
.59524 .61428 m
.59524 .61803 L
s
P
p
.001 w
.64286 .61428 m
.64286 .61803 L
s
P
p
.001 w
.69048 .61428 m
.69048 .61803 L
s
P
p
.001 w
.78571 .61428 m
.78571 .61803 L
s
P
p
.001 w
.83333 .61428 m
.83333 .61803 L
s
P
p
.001 w
.88095 .61428 m
.88095 .61803 L
s
P
p
.001 w
.92857 .61428 m
.92857 .61803 L
s
P
[(All Epsilon)] .5 .61803 0 -4 Mshowa
p
.002 w
0 .61803 m
1 .61803 L
s
P
p
.002 w
.99375 .01472 m
1 .01472 L
s
P
p
.002 w
.99375 .16187 m
1 .16187 L
s
P
p
.002 w
.99375 .30902 m
1 .30902 L
s
P
p
.002 w
.99375 .45617 m
1 .45617 L
s
P
p
.002 w
.99375 .60332 m
1 .60332 L
s
P
p
.001 w
.99625 .04415 m
1 .04415 L
s
P
p
.001 w
.99625 .07358 m
1 .07358 L
s
P
p
.001 w
.99625 .10301 m
1 .10301 L
s
P
p
.001 w
.99625 .13244 m
1 .13244 L
s
P
p
.001 w
.99625 .1913 m
1 .1913 L
s
P
p
.001 w
.99625 .22073 m
1 .22073 L
s
P
p
.001 w
.99625 .25016 m
1 .25016 L
s
P
p
.001 w
.99625 .27959 m
1 .27959 L
s
P
p
.001 w
.99625 .33845 m
1 .33845 L
s
P
p
.001 w
.99625 .36788 m
1 .36788 L
s
P
p
.001 w
.99625 .39731 m
1 .39731 L
s
P
p
.001 w
.99625 .42674 m
1 .42674 L
s
P
p
.001 w
.99625 .4856 m
1 .4856 L
s
P
p
.001 w
.99625 .51503 m
1 .51503 L
s
P
p
.001 w
.99625 .54446 m
1 .54446 L
s
P
p
.001 w
.99625 .57389 m
1 .57389 L
s
P
p
.002 w
1 0 m
1 .61803 L
s
P
P
p
P
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
p
p
.001 w
.02381 .01472 m
.02505 .01472 L
.02629 .01475 L
.02753 .0148 L
.02877 .01487 L
.03125 .01507 L
.03373 .01535 L
.03621 .0157 L
.03869 .01613 L
.04365 .01723 L
.04861 .01865 L
.05357 .02037 L
.06349 .02474 L
.08333 .03712 L
.10317 .05414 L
.14286 .10091 L
.18254 .16187 L
.22222 .23285 L
.2619 .30902 L
.30159 .38519 L
.34127 .45617 L
.38095 .51712 L
.42063 .56389 L
.44048 .58092 L
.4504 .5877 L
.46032 .59329 L
.47024 .59766 L
.4752 .59939 L
.48016 .6008 L
.48512 .6019 L
.4876 .60233 L
.49008 .60269 L
.49256 .60296 L
.4938 .60307 L
.49504 .60316 L
.49628 .60323 L
.49752 .60328 L
.49876 .60331 L
.5 .60332 L
.50124 .60331 L
.50248 .60328 L
.50372 .60323 L
.50496 .60316 L
.5062 .60307 L
.50744 .60296 L
.50992 .60269 L
.5124 .60233 L
.51488 .6019 L
.51984 .6008 L
.5248 .59939 L
Mistroke
.52976 .59766 L
.53968 .59329 L
.55952 .58092 L
.57937 .56389 L
.61905 .51712 L
.65873 .45617 L
.69841 .38519 L
.7381 .30902 L
.77778 .23285 L
.81746 .16187 L
.85714 .10091 L
.87698 .07553 L
.89683 .05414 L
.91667 .03712 L
.92659 .03033 L
.93651 .02474 L
.94643 .02037 L
.95139 .01865 L
.95635 .01723 L
.96131 .01613 L
.96379 .0157 L
.96627 .01535 L
.96875 .01507 L
.96999 .01496 L
.97123 .01487 L
.97247 .0148 L
.97371 .01475 L
.97495 .01472 L
.97619 .01472 L
Mfstroke
P
P
% End of Graphics
MathPictureEnd
end
showpage
%%EndDocument
 @endspecial 587 1371 a(Figure)g(11:)j(T)m(est)d(Problem)f(11,)g
Fl(y)q Fm(\()p Fl(x)p Fm(\))i(v)o(ersus)g Fl(x)p eop
%%Page: 12 12
12 11 bop 262 307 a Fn(T)l(est)15 b(Problem)e(12)h Fm(\(Linear\))g([2)o
(])262 357 y Fl(\017y)300 342 y Fk(00)331 357 y Fj(\000)9
b Fl(y)14 b Fm(=)d Fj(\000)p Fm(\()p Fl(\017\031)539
342 y Fi(2)568 357 y Fm(+)e(1\))e(cos)q(\()p Fl(\031)q(x)p
Fm(\),)59 b Fl(y)q Fm(\()p Fj(\000)p Fm(1\))13 b(=)f
Fj(\000)p Fm(1)p Fl(;)18 b(y)q Fm(\(1\))12 b(=)g(0.)262
407 y(Exact)i(solution)f(is)h Fl(y)q Fm(\()p Fl(x)p Fm(\))e(=)g(cos\()p
Fl(\031)q(x)p Fm(\))e(+)f(exp)q(\(\()p Fl(x)g Fj(\000)g
Fm(1\))p Fl(=)1128 377 y Fj(p)p 1163 377 17 2 v 30 x
Fl(\017)p Fm(\).)262 457 y(The)14 b(solution)f(has)h(a)g(b)q(oundary)f
(la)o(y)o(er)h(of)f(width)h Fl(O)q Fm(\()1114 427 y Fj(p)p
1148 427 V 1148 457 a Fl(\017)p Fm(\))g(near)h Fl(x)c
Fm(=)h(1.)439 1762 y @beginspecial 72 @llx 72 @lly 540
@urx 720 @ury 2834 @rwi @setspecial
%%BeginDocument: ../PLOTS/pr12.ps

/Mathdict 150 dict def
Mathdict begin
/Mlmarg		1.0 72 mul def
/Mrmarg		1.0 72 mul def
/Mbmarg		1.0 72 mul def
/Mtmarg		1.0 72 mul def
/Mwidth		8.5 72 mul def
/Mheight	11 72 mul def
/Mtransform	{  } bind def
/Mnodistort	true def
/Mfixwid	true	def
/Mfixdash	false def
/Mrot		0	def
/Mpstart {
MathPictureStart
} bind def
/Mpend {
MathPictureEnd
} bind def
/Mscale {
0 1 0 1
5 -1 roll
MathScale
} bind def
/ISOLatin1Encoding dup where
{ pop pop }
{
[
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft
/logicalnot /hyphen /registered /macron
/degree /plusminus /twosuperior /threesuperior
/acute /mu /paragraph /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright
/onequarter /onehalf /threequarters /questiondown
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis
] def
} ifelse
/MFontDict 50 dict def
/MStrCat
{
exch
dup length
2 index length add
string
dup 3 1 roll
copy
length
exch dup
4 2 roll exch
putinterval
} def
/MCreateEncoding
{
1 index
255 string cvs
(-) MStrCat
1 index MStrCat
cvn exch
(Encoding) MStrCat
cvn dup where
{
exch get
}
{
pop
StandardEncoding
} ifelse
3 1 roll
dup MFontDict exch known not
{
1 index findfont
dup length dict
begin
{1 index /FID ne
{def}
{pop pop}
ifelse} forall
/Encoding 3 index
def
currentdict
end
1 index exch definefont pop
MFontDict 1 index
null put
}
if
exch pop
exch pop
} def
/ISOLatin1 { (ISOLatin1) MCreateEncoding } def
/ISO8859 { (ISOLatin1) MCreateEncoding } def
/Mcopyfont {
dup
maxlength
dict
exch
{
1 index
/FID
eq
{
pop pop
}
{
2 index
3 1 roll
put
}
ifelse
}
forall
} def
/Plain	/Courier findfont Mcopyfont definefont pop
/Bold	/Courier-Bold findfont Mcopyfont definefont pop
/Italic /Courier-Oblique findfont Mcopyfont definefont pop
/MathPictureStart {
gsave
Mtransform
Mlmarg
Mbmarg
translate
Mwidth
Mlmarg Mrmarg add
sub
/Mwidth exch def
Mheight
Mbmarg Mtmarg add
sub
/Mheight exch def
/Mtmatrix
matrix currentmatrix
def
/Mgmatrix
matrix currentmatrix
def
} bind def
/MathPictureEnd {
grestore
} bind def
/MFill {
0 0 		moveto
Mwidth 0 	lineto
Mwidth Mheight 	lineto
0 Mheight 	lineto
fill
} bind def
/MPlotRegion {
3 index
Mwidth mul
2 index
Mheight mul
translate
exch sub
Mheight mul
/Mheight
exch def
exch sub
Mwidth mul
/Mwidth
exch def
} bind def
/MathSubStart {
Momatrix
Mgmatrix Mtmatrix
Mwidth Mheight
7 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
Mgmatrix setmatrix
9 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
2 copy translate
/Mtmatrix matrix currentmatrix def
3 -1 roll
exch sub
/Mheight exch def
sub
/Mwidth exch def
} bind def
/MathSubEnd {
/Mheight exch def
/Mwidth exch def
/Mtmatrix exch def
dup setmatrix
/Mgmatrix exch def
/Momatrix exch def
} bind def
/Mdot {
moveto
0 0 rlineto
stroke
} bind def
/Mtetra {
moveto
lineto
lineto
lineto
fill
} bind def
/Metetra {
moveto
lineto
lineto
lineto
closepath
gsave
fill
grestore
0 setgray
stroke
} bind def
/Mistroke {
flattenpath
0 0 0
{
4 2 roll
pop pop
}
{
4 -1 roll
2 index
sub dup mul
4 -1 roll
2 index
sub dup mul
add sqrt
4 -1 roll
add
3 1 roll
}
{
stop
}
{
stop
}
pathforall
pop pop
currentpoint
stroke
moveto
currentdash
3 -1 roll
add
setdash
} bind def
/Mfstroke {
stroke
currentdash
pop 0
setdash
} bind def
/Mrotsboxa {
gsave
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
grestore
Msboxa
3  -1 roll
/Mtmatrix
exch def
/Mrot
0 def
} bind def
/Msboxa {
newpath
5 -1 roll
Mvboxa
pop
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Msboxa1
5 -3 roll
Msboxa1
Mboxrot
[
7 -2 roll
2 copy
[
3 1 roll
10 -1 roll
9 -1 roll
]
6 1 roll
5 -2 roll
]
} bind def
/Msboxa1 {
sub
2 div
dup
2 index
1 add
mul
3 -1 roll
-1 add
3 -1 roll
mul
} bind def
/Mvboxa	{
Mfixwid
{
Mvboxa1
}
{
dup
Mwidthcal
0 exch
{
add
}
forall
exch
Mvboxa1
4 index
7 -1 roll
add
4 -1 roll
pop
3 1 roll
}
ifelse
} bind def
/Mvboxa1 {
gsave
newpath
[ true
3 -1 roll
{
Mbbox
5 -1 roll
{
0
5 1 roll
}
{
7 -1 roll
exch sub
(m) stringwidth pop
.3 mul
sub
7 1 roll
6 -1 roll
4 -1 roll
Mmin
3 -1 roll
5 index
add
5 -1 roll
4 -1 roll
Mmax
4 -1 roll
}
ifelse
false
}
forall
{ stop } if
counttomark
1 add
4 roll
]
grestore
} bind def
/Mbbox {
1 dict begin
0 0 moveto
/temp (T) def
{	gsave
currentpoint newpath moveto
temp 0 3 -1 roll put temp
false charpath flattenpath currentpoint
pathbbox
grestore moveto lineto moveto} forall
pathbbox
newpath
end
} bind def
/Mmin {
2 copy
gt
{ exch } if
pop
} bind def
/Mmax {
2 copy
lt
{ exch } if
pop
} bind def
/Mrotshowa {
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
Mgmatrix setmatrix
Mshowa
/Mtmatrix
exch def
/Mrot 0 def
} bind def
/Mshowa {
4 -2 roll
moveto
2 index
Mtmatrix setmatrix
Mvboxa
7 1 roll
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Mshowa1
4 1 roll
Mshowa1
rmoveto
currentpoint
Mfixwid
{
Mshowax
}
{
Mshoway
}
ifelse
pop pop pop pop
Mgmatrix setmatrix
} bind def
/Mshowax {	
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
Mfixdash
{
Mfixdashp		
}
if
show
} for
} bind def
/Mfixdashp {
dup
length
1
gt
1 index
true exch
{
45
eq
and
} forall
and
{
gsave
(--)		
stringwidth pop
(-)
stringwidth pop
sub
2 div
0 rmoveto
dup
length
1 sub
{
(-)
show
}
repeat
grestore
}
if
} bind def	
/Mshoway {
3 index
Mwidthcal
5 1 roll
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
[
6 index
aload
length
2 add
-1 roll
{
pop
Strform
stringwidth
pop
neg 
exch
add
0 rmoveto
}
exch
kshow
cleartomark
} for
pop	
} bind def
/Mwidthcal {
[
exch
{
Mwidthcal1
}
forall
]
[
exch
dup
Maxlen
-1 add
0 1
3 -1 roll
{
[
exch
2 index
{		 
1 index	
Mget
exch
}
forall		
pop
Maxget
exch
}
for
pop
]
Mreva
} bind def
/Mreva	{
[
exch
aload
length
-1 1
{1 roll}
for
]
} bind def
/Mget	{
1 index
length
-1 add
1 index
ge
{
get
}
{
pop pop
0
}
ifelse
} bind def
/Maxlen	{
[
exch
{
length
}
forall
Maxget
} bind def
/Maxget	{
counttomark
-1 add
1 1
3 -1 roll
{
pop
Mmax
}
for
exch
pop
} bind def
/Mwidthcal1 {
[
exch
{
Strform
stringwidth
pop
}
forall
]
} bind def
/Strform {
/tem (x) def
tem 0
3 -1 roll
put
tem
} bind def
/Mshowa1 {
2 copy
add
4 1 roll
sub
mul
sub
-2 div
} bind def
/MathScale {
Mwidth
Mheight
Mlp
translate
scale
/yscale exch def
/ybias exch def
/xscale exch def
/xbias exch def
/Momatrix
xscale yscale matrix scale
xbias ybias matrix translate
matrix concatmatrix def
/Mgmatrix
matrix currentmatrix
def
} bind def
/Mlp {
3 copy
Mlpfirst
{
Mnodistort
{
Mmin
dup
} if
4 index
2 index
2 index
Mlprun
11 index
11 -1 roll
10 -4 roll
Mlp1
8 index
9 -5 roll
Mlp1
4 -1 roll
and
{ exit } if
3 -1 roll
pop pop
} loop
exch
3 1 roll
7 -3 roll
pop pop pop
} bind def
/Mlpfirst {
3 -1 roll
dup length
2 copy
-2 add
get
aload
pop pop pop
4 -2 roll
-1 add
get
aload
pop pop pop
6 -1 roll
3 -1 roll
5 -1 roll
sub
div
4 1 roll
exch sub
div
} bind def
/Mlprun {
2 copy
4 index
0 get
dup
4 1 roll
Mlprun1
3 copy
8 -2 roll
9 -1 roll
{
3 copy
Mlprun1
3 copy
11 -3 roll
/gt Mlpminmax
8 3 roll
11 -3 roll
/lt Mlpminmax
8 3 roll
} forall
pop pop pop pop
3 1 roll
pop pop
aload pop
5 -1 roll
aload pop
exch
6 -1 roll
Mlprun2
8 2 roll
4 -1 roll
Mlprun2
6 2 roll
3 -1 roll
Mlprun2
4 2 roll
exch
Mlprun2
6 2 roll
} bind def
/Mlprun1 {
aload pop
exch
6 -1 roll
5 -1 roll
mul add
4 -2 roll
mul
3 -1 roll
add
} bind def
/Mlprun2 {
2 copy
add 2 div
3 1 roll
exch sub
} bind def
/Mlpminmax {
cvx
2 index
6 index
2 index
exec
{
7 -3 roll
4 -1 roll
} if
1 index
5 index
3 -1 roll
exec
{
4 1 roll
pop
5 -1 roll
aload
pop pop
4 -1 roll
aload pop
[
8 -2 roll
pop
5 -2 roll
pop
6 -2 roll
pop
5 -1 roll
]
4 1 roll
pop
}
{
pop pop pop
} ifelse
} bind def
/Mlp1 {
5 index
3 index	sub
5 index
2 index mul
1 index
le
1 index
0 le
or
dup
not
{
1 index
3 index	div
.99999 mul
8 -1 roll
pop
7 1 roll
}
if
8 -1 roll
2 div
7 -2 roll
pop sub
5 index
6 -3 roll
pop pop
mul sub
exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
outflag
1
eq
{
/outflag 0 def
/intop 0 def
/inrht 0 def
} if		
5 index
gsave
Mtmatrix setmatrix
Mvboxa pop
grestore
3 -1 roll
pop
dup
intop
gt
{
/intop
exch def
}
{ pop }
ifelse
dup
inrht
gt
{
/inrht
exch def
}
{ pop }
ifelse
pop
/inflag
1 def
} bind def
/Mouter {
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
inflag
1 eq
{
dup
0 lt
{
dup
intop
mul
neg
/yadtop
exch def
} if
dup
0 gt
{
dup
intop
mul
/yadbot
exch def
}
if
pop
dup
0 lt
{
dup
inrht
mul
neg
/xadrht
exch def
} if
dup
0 gt
{
dup
inrht
mul
/xadlft
exch def
} if
pop
/outflag 1 def
}
{ pop pop}
ifelse
/inflag 0 def
/inrht 0 def
/intop 0 def
} bind def	
/Mboxout {
outflag
1
eq
{
4 -1
roll
xadlft
leadjust
add
sub
4 1 roll
3 -1
roll
yadbot
leadjust
add
sub
3 1
roll
exch
xadrht
leadjust
add
add
exch
yadtop
leadjust
add
add
/outflag 0 def
/xadlft 0 def
/yadbot 0 def
/xadrht 0 def
/yadtop 0 def
} if
} bind def
/leadjust {
(m) stringwidth pop
.5 mul
} bind def
/Mrotcheck {
dup
90
eq
{
yadbot
/yadbot
xadrht
def	
/xadrht
yadtop
def
/yadtop
xadlft
def
/xadlft
exch
def
}
if
dup
cos
1 index
sin
Checkaux
dup
cos
1 index
sin neg
exch
Checkaux
3 1 roll
pop pop
} bind def
/Checkaux {
4 index
exch
4 index
mul
3 1 roll
mul add
4 1 roll
} bind def
/Mboxrot {
Mrot
90 eq
{
brotaux
4 2
roll
}
if
Mrot
180 eq
{
4 2
roll
brotaux
4 2
roll
brotaux
}	
if
Mrot
270 eq
{
4 2
roll
brotaux
}
if
} bind def
/brotaux {
neg
exch
neg
} bind def
/Mabsproc {
0
matrix defaultmatrix
dtransform idtransform
dup mul exch
dup mul
add sqrt
} bind def
/Mabswid {
Mabsproc
setlinewidth	
} bind def
/Mabsdash {
exch
[
exch
{
Mabsproc
}
forall
]
exch
setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop}
repeat
} bind def
} ifelse
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/setcmykcolor where
{ pop}
{ /setcmykcolor {
4 1
roll
[
4 1 
roll
]
{
1 index
sub
1
sub neg
dup
0
lt
{
pop
0
}
if
dup
1
gt
{
pop
1
}
if
exch
} forall
pop
setrgbcolor
} bind def
} ifelse
/Mcharproc
{
currentfile
(x)
readhexstring
pop
0 get
exch
div
} bind def
/Mshadeproc
{
dup
3 1
roll
{
dup
Mcharproc
3 1
roll
} repeat
1 eq
{
setgray
}
{
3 eq
{
setrgbcolor
}
{
setcmykcolor
} ifelse
} ifelse
} bind def
/Mrectproc
{
3 index
2 index
moveto
2 index
3 -1
roll
lineto
dup
3 1
roll
lineto
lineto
fill
} bind def
/Mcolorimage
{
7 1
roll
pop
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
9 index
Mshadeproc
Mrectproc
} for
pop
} for
pop pop pop pop
} bind def
/Mimage
{
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
Mcharproc
setgray
Mrectproc
} for
pop
} for
pop pop pop
} bind def

MathPictureStart
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.5 0.47619 0.309017 0.294302 [
[(-1)] .02381 0 0 2 0 Minner Mrotsboxa
[(-0.5)] .2619 0 0 2 0 Minner Mrotsboxa
[(0)] .5 0 0 2 0 Minner Mrotsboxa
[(0.5)] .7381 0 0 2 0 Minner Mrotsboxa
[(1)] .97619 0 0 2 0 Minner Mrotsboxa
[()] .5 0 0 2 0 0 -1 Mouter Mrotsboxa
[(-1)] -0.0125 .01472 1 0 0 Minner Mrotsboxa
[(-0.5)] -0.0125 .16187 1 0 0 Minner Mrotsboxa
[(0)] -0.0125 .30902 1 0 0 Minner Mrotsboxa
[(0.5)] -0.0125 .45617 1 0 0 Minner Mrotsboxa
[(1)] -0.0125 .60332 1 0 0 Minner Mrotsboxa
[(Epsilon = 0.01, 0.0025, 0.0001)] .5 .61803 0 -4 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 .61903 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 g
p
p
.002 w
.02381 0 m
.02381 .00625 L
s
P
[(-1)] .02381 0 0 2 0 Minner Mrotshowa
p
.002 w
.2619 0 m
.2619 .00625 L
s
P
[(-0.5)] .2619 0 0 2 0 Minner Mrotshowa
p
.002 w
.5 0 m
.5 .00625 L
s
P
[(0)] .5 0 0 2 0 Minner Mrotshowa
p
.002 w
.7381 0 m
.7381 .00625 L
s
P
[(0.5)] .7381 0 0 2 0 Minner Mrotshowa
p
.002 w
.97619 0 m
.97619 .00625 L
s
P
[(1)] .97619 0 0 2 0 Minner Mrotshowa
p
.001 w
.07143 0 m
.07143 .00375 L
s
P
p
.001 w
.11905 0 m
.11905 .00375 L
s
P
p
.001 w
.16667 0 m
.16667 .00375 L
s
P
p
.001 w
.21429 0 m
.21429 .00375 L
s
P
p
.001 w
.30952 0 m
.30952 .00375 L
s
P
p
.001 w
.35714 0 m
.35714 .00375 L
s
P
p
.001 w
.40476 0 m
.40476 .00375 L
s
P
p
.001 w
.45238 0 m
.45238 .00375 L
s
P
p
.001 w
.54762 0 m
.54762 .00375 L
s
P
p
.001 w
.59524 0 m
.59524 .00375 L
s
P
p
.001 w
.64286 0 m
.64286 .00375 L
s
P
p
.001 w
.69048 0 m
.69048 .00375 L
s
P
p
.001 w
.78571 0 m
.78571 .00375 L
s
P
p
.001 w
.83333 0 m
.83333 .00375 L
s
P
p
.001 w
.88095 0 m
.88095 .00375 L
s
P
p
.001 w
.92857 0 m
.92857 .00375 L
s
P
[()] .5 0 0 2 0 0 -1 Mouter Mrotshowa
p
.002 w
0 0 m
1 0 L
s
P
p
.002 w
0 .01472 m
.00625 .01472 L
s
P
[(-1)] -0.0125 .01472 1 0 0 Minner Mrotshowa
p
.002 w
0 .16187 m
.00625 .16187 L
s
P
[(-0.5)] -0.0125 .16187 1 0 0 Minner Mrotshowa
p
.002 w
0 .30902 m
.00625 .30902 L
s
P
[(0)] -0.0125 .30902 1 0 0 Minner Mrotshowa
p
.002 w
0 .45617 m
.00625 .45617 L
s
P
[(0.5)] -0.0125 .45617 1 0 0 Minner Mrotshowa
p
.002 w
0 .60332 m
.00625 .60332 L
s
P
[(1)] -0.0125 .60332 1 0 0 Minner Mrotshowa
p
.001 w
0 .04415 m
.00375 .04415 L
s
P
p
.001 w
0 .07358 m
.00375 .07358 L
s
P
p
.001 w
0 .10301 m
.00375 .10301 L
s
P
p
.001 w
0 .13244 m
.00375 .13244 L
s
P
p
.001 w
0 .1913 m
.00375 .1913 L
s
P
p
.001 w
0 .22073 m
.00375 .22073 L
s
P
p
.001 w
0 .25016 m
.00375 .25016 L
s
P
p
.001 w
0 .27959 m
.00375 .27959 L
s
P
p
.001 w
0 .33845 m
.00375 .33845 L
s
P
p
.001 w
0 .36788 m
.00375 .36788 L
s
P
p
.001 w
0 .39731 m
.00375 .39731 L
s
P
p
.001 w
0 .42674 m
.00375 .42674 L
s
P
p
.001 w
0 .4856 m
.00375 .4856 L
s
P
p
.001 w
0 .51503 m
.00375 .51503 L
s
P
p
.001 w
0 .54446 m
.00375 .54446 L
s
P
p
.001 w
0 .57389 m
.00375 .57389 L
s
P
p
.002 w
0 0 m
0 .61803 L
s
P
P
p
p
.002 w
.02381 .61178 m
.02381 .61803 L
s
P
p
.002 w
.2619 .61178 m
.2619 .61803 L
s
P
p
.002 w
.5 .61178 m
.5 .61803 L
s
P
p
.002 w
.7381 .61178 m
.7381 .61803 L
s
P
p
.002 w
.97619 .61178 m
.97619 .61803 L
s
P
p
.001 w
.07143 .61428 m
.07143 .61803 L
s
P
p
.001 w
.11905 .61428 m
.11905 .61803 L
s
P
p
.001 w
.16667 .61428 m
.16667 .61803 L
s
P
p
.001 w
.21429 .61428 m
.21429 .61803 L
s
P
p
.001 w
.30952 .61428 m
.30952 .61803 L
s
P
p
.001 w
.35714 .61428 m
.35714 .61803 L
s
P
p
.001 w
.40476 .61428 m
.40476 .61803 L
s
P
p
.001 w
.45238 .61428 m
.45238 .61803 L
s
P
p
.001 w
.54762 .61428 m
.54762 .61803 L
s
P
p
.001 w
.59524 .61428 m
.59524 .61803 L
s
P
p
.001 w
.64286 .61428 m
.64286 .61803 L
s
P
p
.001 w
.69048 .61428 m
.69048 .61803 L
s
P
p
.001 w
.78571 .61428 m
.78571 .61803 L
s
P
p
.001 w
.83333 .61428 m
.83333 .61803 L
s
P
p
.001 w
.88095 .61428 m
.88095 .61803 L
s
P
p
.001 w
.92857 .61428 m
.92857 .61803 L
s
P
[(Epsilon = 0.01, 0.0025, 0.0001)] .5 .61803 0 -4 Mshowa
p
.002 w
0 .61803 m
1 .61803 L
s
P
p
.002 w
.99375 .01472 m
1 .01472 L
s
P
p
.002 w
.99375 .16187 m
1 .16187 L
s
P
p
.002 w
.99375 .30902 m
1 .30902 L
s
P
p
.002 w
.99375 .45617 m
1 .45617 L
s
P
p
.002 w
.99375 .60332 m
1 .60332 L
s
P
p
.001 w
.99625 .04415 m
1 .04415 L
s
P
p
.001 w
.99625 .07358 m
1 .07358 L
s
P
p
.001 w
.99625 .10301 m
1 .10301 L
s
P
p
.001 w
.99625 .13244 m
1 .13244 L
s
P
p
.001 w
.99625 .1913 m
1 .1913 L
s
P
p
.001 w
.99625 .22073 m
1 .22073 L
s
P
p
.001 w
.99625 .25016 m
1 .25016 L
s
P
p
.001 w
.99625 .27959 m
1 .27959 L
s
P
p
.001 w
.99625 .33845 m
1 .33845 L
s
P
p
.001 w
.99625 .36788 m
1 .36788 L
s
P
p
.001 w
.99625 .39731 m
1 .39731 L
s
P
p
.001 w
.99625 .42674 m
1 .42674 L
s
P
p
.001 w
.99625 .4856 m
1 .4856 L
s
P
p
.001 w
.99625 .51503 m
1 .51503 L
s
P
p
.001 w
.99625 .54446 m
1 .54446 L
s
P
p
.001 w
.99625 .57389 m
1 .57389 L
s
P
p
.002 w
1 0 m
1 .61803 L
s
P
P
p
P
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
p
p
p
.001 w
.02381 .01473 m
.02505 .01474 L
.02629 .01477 L
.02753 .01482 L
.02877 .01489 L
.03125 .01508 L
.03373 .01536 L
.03621 .01571 L
.03869 .01615 L
.04365 .01725 L
.04861 .01866 L
.05357 .02039 L
.06349 .02476 L
.08333 .03714 L
.10317 .05417 L
.14286 .10096 L
.18254 .16194 L
.22222 .23295 L
.2619 .30918 L
.30159 .38543 L
.34127 .45654 L
.38095 .51769 L
.42063 .56475 L
.44048 .58198 L
.4504 .58888 L
.46032 .5946 L
.47024 .59911 L
.4752 .60092 L
.48016 .60241 L
.48512 .6036 L
.4876 .60408 L
.49008 .60448 L
.49256 .6048 L
.4938 .60493 L
.49504 .60504 L
.49628 .60514 L
.49752 .60521 L
.49876 .60527 L
.5 .6053 L
.50124 .60532 L
.50248 .60531 L
.50372 .60529 L
.50496 .60525 L
.5062 .60519 L
.50744 .60511 L
.50992 .60489 L
.5124 .60459 L
.51488 .60422 L
.51984 .60324 L
.5248 .60196 L
Mistroke
.52976 .60037 L
.53968 .5963 L
.5496 .59104 L
.55952 .58462 L
.57937 .56845 L
.61905 .52404 L
.65873 .46667 L
.69841 .40111 L
.7381 .33317 L
.77778 .26949 L
.79762 .24153 L
.81746 .21745 L
.82738 .2072 L
.8373 .19832 L
.84722 .19095 L
.85218 .18787 L
.85714 .18523 L
.8621 .18304 L
.86706 .18133 L
.86954 .18065 L
.87202 .1801 L
.87326 .17987 L
.8745 .17967 L
.87574 .17951 L
.87698 .17938 L
.87822 .17928 L
.87946 .17922 L
.8807 .17919 L
.88194 .1792 L
.88318 .17924 L
.88442 .17931 L
.88566 .17942 L
.8869 .17956 L
.88938 .17996 L
.89187 .18051 L
.89435 .1812 L
.89683 .18205 L
.90179 .18421 L
.90675 .18701 L
.91667 .19465 L
.92659 .20516 L
.93651 .21876 L
.95635 .25619 L
.97619 .30902 L
Mfstroke
P
P
p
p
.001 w
.02381 .01472 m
.02505 .01472 L
.02629 .01475 L
.02753 .0148 L
.02877 .01487 L
.03125 .01507 L
.03373 .01535 L
.03621 .0157 L
.03869 .01613 L
.04365 .01723 L
.04861 .01865 L
.05357 .02037 L
.06349 .02474 L
.08333 .03712 L
.10317 .05414 L
.14286 .10091 L
.18254 .16187 L
.22222 .23285 L
.2619 .30902 L
.30159 .38519 L
.34127 .45617 L
.38095 .51712 L
.42063 .56389 L
.44048 .58092 L
.4504 .58771 L
.46032 .5933 L
.47024 .59767 L
.4752 .5994 L
.48016 .60081 L
.48512 .60191 L
.4876 .60234 L
.49008 .6027 L
.49256 .60298 L
.4938 .60308 L
.49504 .60317 L
.49628 .60324 L
.49752 .60329 L
.49876 .60332 L
.5 .60333 L
.50124 .60332 L
.50248 .60329 L
.50372 .60324 L
.50496 .60318 L
.5062 .60309 L
.50744 .60298 L
.50992 .60271 L
.5124 .60235 L
.51488 .60192 L
.51984 .60082 L
.5248 .59941 L
Mistroke
.52976 .59769 L
.53968 .59332 L
.55952 .58096 L
.57937 .56396 L
.61905 .51728 L
.65873 .45654 L
.69841 .38605 L
.7381 .311 L
.77778 .23741 L
.81746 .17236 L
.8373 .14578 L
.84722 .13458 L
.85714 .12507 L
.8621 .12103 L
.86706 .1175 L
.87202 .11454 L
.87698 .11218 L
.87946 .11124 L
.88194 .11046 L
.88442 .10986 L
.88566 .10963 L
.8869 .10945 L
.88814 .10931 L
.88938 .10922 L
.89063 .10918 L
.89187 .10918 L
.89311 .10924 L
.89435 .10935 L
.89559 .10951 L
.89683 .10973 L
.89931 .11033 L
.90179 .11115 L
.90427 .11222 L
.90675 .11353 L
.91171 .11693 L
.91667 .12144 L
.92659 .13418 L
.93155 .14264 L
.93651 .15265 L
.94643 .1779 L
.95635 .21125 L
.96627 .2543 L
.97619 .30902 L
Mfstroke
P
P
p
p
.001 w
.02381 .01472 m
.02505 .01472 L
.02629 .01475 L
.02753 .0148 L
.02877 .01487 L
.03125 .01507 L
.03373 .01535 L
.03621 .0157 L
.03869 .01613 L
.04365 .01723 L
.04861 .01865 L
.05357 .02037 L
.06349 .02474 L
.08333 .03712 L
.10317 .05414 L
.14286 .10091 L
.18254 .16187 L
.22222 .23285 L
.2619 .30902 L
.30159 .38519 L
.34127 .45617 L
.38095 .51712 L
.42063 .56389 L
.44048 .58092 L
.4504 .5877 L
.46032 .59329 L
.47024 .59766 L
.4752 .59939 L
.48016 .6008 L
.48512 .6019 L
.4876 .60233 L
.49008 .60269 L
.49256 .60296 L
.4938 .60307 L
.49504 .60316 L
.49628 .60323 L
.49752 .60328 L
.49876 .60331 L
.5 .60332 L
.50124 .60331 L
.50248 .60328 L
.50372 .60323 L
.50496 .60316 L
.5062 .60307 L
.50744 .60296 L
.50992 .60269 L
.5124 .60233 L
.51488 .6019 L
.51984 .6008 L
.5248 .59939 L
Mistroke
.52976 .59766 L
.53968 .59329 L
.55952 .58092 L
.57937 .56389 L
.61905 .51712 L
.65873 .45617 L
.69841 .38519 L
.7381 .30902 L
.77778 .23285 L
.81746 .16187 L
.85714 .10091 L
.87698 .07553 L
.89683 .05414 L
.91667 .03712 L
.92659 .03034 L
.93155 .02741 L
.93651 .02481 L
.94147 .0226 L
.94395 .02169 L
.94519 .02129 L
.94643 .02094 L
.94767 .02065 L
.94891 .02043 L
.95015 .02029 L
.95139 .02026 L
.95263 .02035 L
.95387 .02061 L
.95511 .02107 L
.95635 .0218 L
.95759 .02285 L
.95883 .02432 L
.96007 .02634 L
.96131 .02906 L
.96255 .03268 L
.96379 .03747 L
.96503 .04376 L
.96627 .05199 L
.96751 .06274 L
.96875 .07676 L
.96999 .095 L
.97123 .11872 L
.97247 .14954 L
.97371 .18958 L
.97495 .24155 L
.97619 .30902 L
Mfstroke
P
P
P
% End of Graphics
MathPictureEnd
end
showpage
%%EndDocument
 @endspecial 587 1381 a(Figure)i(12:)j(T)m(est)d(Problem)f(12,)g
Fl(y)q Fm(\()p Fl(x)p Fm(\))i(v)o(ersus)g Fl(x)p eop
%%Page: 13 13
13 12 bop 262 307 a Fn(T)l(est)15 b(Problem)e(13)h Fm(\(Linear\))g([2)o
(])262 357 y Fl(\017y)300 342 y Fk(00)331 357 y Fj(\000)9
b Fl(y)14 b Fm(=)d Fj(\000)p Fm(\()p Fl(\017\031)539
342 y Fi(2)568 357 y Fm(+)e(1\))e(cos)q(\()p Fl(\031)q(x)p
Fm(\),)59 b Fl(y)q Fm(\()p Fj(\000)p Fm(1\))13 b(=)f(0)p
Fl(;)17 b(y)q Fm(\(1\))c(=)f Fj(\000)p Fm(1.)262 407
y(Exact)i(solution)f(is)h Fl(y)q Fm(\()p Fl(x)p Fm(\))e(=)g(cos\()p
Fl(\031)q(x)p Fm(\))e(+)f(exp)q(\()p Fj(\000)p Fm(\()p
Fl(x)g Fm(+)h(1\))p Fl(=)1161 377 y Fj(p)p 1195 377 17
2 v 1195 407 a Fl(\017)p Fm(\).)262 457 y(The)k(solution)f(has)h(a)g(b)
q(oundary)f(la)o(y)o(er)h(of)f(width)h Fl(O)q Fm(\()1114
427 y Fj(p)p 1148 427 V 1148 457 a Fl(\017)p Fm(\))g(near)h
Fl(x)c Fm(=)h Fj(\000)p Fm(1.)439 1762 y @beginspecial
72 @llx 72 @lly 540 @urx 720 @ury 2834 @rwi @setspecial
%%BeginDocument: ../PLOTS/pr13.ps

/Mathdict 150 dict def
Mathdict begin
/Mlmarg		1.0 72 mul def
/Mrmarg		1.0 72 mul def
/Mbmarg		1.0 72 mul def
/Mtmarg		1.0 72 mul def
/Mwidth		8.5 72 mul def
/Mheight	11 72 mul def
/Mtransform	{  } bind def
/Mnodistort	true def
/Mfixwid	true	def
/Mfixdash	false def
/Mrot		0	def
/Mpstart {
MathPictureStart
} bind def
/Mpend {
MathPictureEnd
} bind def
/Mscale {
0 1 0 1
5 -1 roll
MathScale
} bind def
/ISOLatin1Encoding dup where
{ pop pop }
{
[
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft
/logicalnot /hyphen /registered /macron
/degree /plusminus /twosuperior /threesuperior
/acute /mu /paragraph /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright
/onequarter /onehalf /threequarters /questiondown
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis
] def
} ifelse
/MFontDict 50 dict def
/MStrCat
{
exch
dup length
2 index length add
string
dup 3 1 roll
copy
length
exch dup
4 2 roll exch
putinterval
} def
/MCreateEncoding
{
1 index
255 string cvs
(-) MStrCat
1 index MStrCat
cvn exch
(Encoding) MStrCat
cvn dup where
{
exch get
}
{
pop
StandardEncoding
} ifelse
3 1 roll
dup MFontDict exch known not
{
1 index findfont
dup length dict
begin
{1 index /FID ne
{def}
{pop pop}
ifelse} forall
/Encoding 3 index
def
currentdict
end
1 index exch definefont pop
MFontDict 1 index
null put
}
if
exch pop
exch pop
} def
/ISOLatin1 { (ISOLatin1) MCreateEncoding } def
/ISO8859 { (ISOLatin1) MCreateEncoding } def
/Mcopyfont {
dup
maxlength
dict
exch
{
1 index
/FID
eq
{
pop pop
}
{
2 index
3 1 roll
put
}
ifelse
}
forall
} def
/Plain	/Courier findfont Mcopyfont definefont pop
/Bold	/Courier-Bold findfont Mcopyfont definefont pop
/Italic /Courier-Oblique findfont Mcopyfont definefont pop
/MathPictureStart {
gsave
Mtransform
Mlmarg
Mbmarg
translate
Mwidth
Mlmarg Mrmarg add
sub
/Mwidth exch def
Mheight
Mbmarg Mtmarg add
sub
/Mheight exch def
/Mtmatrix
matrix currentmatrix
def
/Mgmatrix
matrix currentmatrix
def
} bind def
/MathPictureEnd {
grestore
} bind def
/MFill {
0 0 		moveto
Mwidth 0 	lineto
Mwidth Mheight 	lineto
0 Mheight 	lineto
fill
} bind def
/MPlotRegion {
3 index
Mwidth mul
2 index
Mheight mul
translate
exch sub
Mheight mul
/Mheight
exch def
exch sub
Mwidth mul
/Mwidth
exch def
} bind def
/MathSubStart {
Momatrix
Mgmatrix Mtmatrix
Mwidth Mheight
7 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
Mgmatrix setmatrix
9 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
2 copy translate
/Mtmatrix matrix currentmatrix def
3 -1 roll
exch sub
/Mheight exch def
sub
/Mwidth exch def
} bind def
/MathSubEnd {
/Mheight exch def
/Mwidth exch def
/Mtmatrix exch def
dup setmatrix
/Mgmatrix exch def
/Momatrix exch def
} bind def
/Mdot {
moveto
0 0 rlineto
stroke
} bind def
/Mtetra {
moveto
lineto
lineto
lineto
fill
} bind def
/Metetra {
moveto
lineto
lineto
lineto
closepath
gsave
fill
grestore
0 setgray
stroke
} bind def
/Mistroke {
flattenpath
0 0 0
{
4 2 roll
pop pop
}
{
4 -1 roll
2 index
sub dup mul
4 -1 roll
2 index
sub dup mul
add sqrt
4 -1 roll
add
3 1 roll
}
{
stop
}
{
stop
}
pathforall
pop pop
currentpoint
stroke
moveto
currentdash
3 -1 roll
add
setdash
} bind def
/Mfstroke {
stroke
currentdash
pop 0
setdash
} bind def
/Mrotsboxa {
gsave
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
grestore
Msboxa
3  -1 roll
/Mtmatrix
exch def
/Mrot
0 def
} bind def
/Msboxa {
newpath
5 -1 roll
Mvboxa
pop
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Msboxa1
5 -3 roll
Msboxa1
Mboxrot
[
7 -2 roll
2 copy
[
3 1 roll
10 -1 roll
9 -1 roll
]
6 1 roll
5 -2 roll
]
} bind def
/Msboxa1 {
sub
2 div
dup
2 index
1 add
mul
3 -1 roll
-1 add
3 -1 roll
mul
} bind def
/Mvboxa	{
Mfixwid
{
Mvboxa1
}
{
dup
Mwidthcal
0 exch
{
add
}
forall
exch
Mvboxa1
4 index
7 -1 roll
add
4 -1 roll
pop
3 1 roll
}
ifelse
} bind def
/Mvboxa1 {
gsave
newpath
[ true
3 -1 roll
{
Mbbox
5 -1 roll
{
0
5 1 roll
}
{
7 -1 roll
exch sub
(m) stringwidth pop
.3 mul
sub
7 1 roll
6 -1 roll
4 -1 roll
Mmin
3 -1 roll
5 index
add
5 -1 roll
4 -1 roll
Mmax
4 -1 roll
}
ifelse
false
}
forall
{ stop } if
counttomark
1 add
4 roll
]
grestore
} bind def
/Mbbox {
1 dict begin
0 0 moveto
/temp (T) def
{	gsave
currentpoint newpath moveto
temp 0 3 -1 roll put temp
false charpath flattenpath currentpoint
pathbbox
grestore moveto lineto moveto} forall
pathbbox
newpath
end
} bind def
/Mmin {
2 copy
gt
{ exch } if
pop
} bind def
/Mmax {
2 copy
lt
{ exch } if
pop
} bind def
/Mrotshowa {
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
Mgmatrix setmatrix
Mshowa
/Mtmatrix
exch def
/Mrot 0 def
} bind def
/Mshowa {
4 -2 roll
moveto
2 index
Mtmatrix setmatrix
Mvboxa
7 1 roll
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Mshowa1
4 1 roll
Mshowa1
rmoveto
currentpoint
Mfixwid
{
Mshowax
}
{
Mshoway
}
ifelse
pop pop pop pop
Mgmatrix setmatrix
} bind def
/Mshowax {	
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
Mfixdash
{
Mfixdashp		
}
if
show
} for
} bind def
/Mfixdashp {
dup
length
1
gt
1 index
true exch
{
45
eq
and
} forall
and
{
gsave
(--)		
stringwidth pop
(-)
stringwidth pop
sub
2 div
0 rmoveto
dup
length
1 sub
{
(-)
show
}
repeat
grestore
}
if
} bind def	
/Mshoway {
3 index
Mwidthcal
5 1 roll
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
[
6 index
aload
length
2 add
-1 roll
{
pop
Strform
stringwidth
pop
neg 
exch
add
0 rmoveto
}
exch
kshow
cleartomark
} for
pop	
} bind def
/Mwidthcal {
[
exch
{
Mwidthcal1
}
forall
]
[
exch
dup
Maxlen
-1 add
0 1
3 -1 roll
{
[
exch
2 index
{		 
1 index	
Mget
exch
}
forall		
pop
Maxget
exch
}
for
pop
]
Mreva
} bind def
/Mreva	{
[
exch
aload
length
-1 1
{1 roll}
for
]
} bind def
/Mget	{
1 index
length
-1 add
1 index
ge
{
get
}
{
pop pop
0
}
ifelse
} bind def
/Maxlen	{
[
exch
{
length
}
forall
Maxget
} bind def
/Maxget	{
counttomark
-1 add
1 1
3 -1 roll
{
pop
Mmax
}
for
exch
pop
} bind def
/Mwidthcal1 {
[
exch
{
Strform
stringwidth
pop
}
forall
]
} bind def
/Strform {
/tem (x) def
tem 0
3 -1 roll
put
tem
} bind def
/Mshowa1 {
2 copy
add
4 1 roll
sub
mul
sub
-2 div
} bind def
/MathScale {
Mwidth
Mheight
Mlp
translate
scale
/yscale exch def
/ybias exch def
/xscale exch def
/xbias exch def
/Momatrix
xscale yscale matrix scale
xbias ybias matrix translate
matrix concatmatrix def
/Mgmatrix
matrix currentmatrix
def
} bind def
/Mlp {
3 copy
Mlpfirst
{
Mnodistort
{
Mmin
dup
} if
4 index
2 index
2 index
Mlprun
11 index
11 -1 roll
10 -4 roll
Mlp1
8 index
9 -5 roll
Mlp1
4 -1 roll
and
{ exit } if
3 -1 roll
pop pop
} loop
exch
3 1 roll
7 -3 roll
pop pop pop
} bind def
/Mlpfirst {
3 -1 roll
dup length
2 copy
-2 add
get
aload
pop pop pop
4 -2 roll
-1 add
get
aload
pop pop pop
6 -1 roll
3 -1 roll
5 -1 roll
sub
div
4 1 roll
exch sub
div
} bind def
/Mlprun {
2 copy
4 index
0 get
dup
4 1 roll
Mlprun1
3 copy
8 -2 roll
9 -1 roll
{
3 copy
Mlprun1
3 copy
11 -3 roll
/gt Mlpminmax
8 3 roll
11 -3 roll
/lt Mlpminmax
8 3 roll
} forall
pop pop pop pop
3 1 roll
pop pop
aload pop
5 -1 roll
aload pop
exch
6 -1 roll
Mlprun2
8 2 roll
4 -1 roll
Mlprun2
6 2 roll
3 -1 roll
Mlprun2
4 2 roll
exch
Mlprun2
6 2 roll
} bind def
/Mlprun1 {
aload pop
exch
6 -1 roll
5 -1 roll
mul add
4 -2 roll
mul
3 -1 roll
add
} bind def
/Mlprun2 {
2 copy
add 2 div
3 1 roll
exch sub
} bind def
/Mlpminmax {
cvx
2 index
6 index
2 index
exec
{
7 -3 roll
4 -1 roll
} if
1 index
5 index
3 -1 roll
exec
{
4 1 roll
pop
5 -1 roll
aload
pop pop
4 -1 roll
aload pop
[
8 -2 roll
pop
5 -2 roll
pop
6 -2 roll
pop
5 -1 roll
]
4 1 roll
pop
}
{
pop pop pop
} ifelse
} bind def
/Mlp1 {
5 index
3 index	sub
5 index
2 index mul
1 index
le
1 index
0 le
or
dup
not
{
1 index
3 index	div
.99999 mul
8 -1 roll
pop
7 1 roll
}
if
8 -1 roll
2 div
7 -2 roll
pop sub
5 index
6 -3 roll
pop pop
mul sub
exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
outflag
1
eq
{
/outflag 0 def
/intop 0 def
/inrht 0 def
} if		
5 index
gsave
Mtmatrix setmatrix
Mvboxa pop
grestore
3 -1 roll
pop
dup
intop
gt
{
/intop
exch def
}
{ pop }
ifelse
dup
inrht
gt
{
/inrht
exch def
}
{ pop }
ifelse
pop
/inflag
1 def
} bind def
/Mouter {
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
inflag
1 eq
{
dup
0 lt
{
dup
intop
mul
neg
/yadtop
exch def
} if
dup
0 gt
{
dup
intop
mul
/yadbot
exch def
}
if
pop
dup
0 lt
{
dup
inrht
mul
neg
/xadrht
exch def
} if
dup
0 gt
{
dup
inrht
mul
/xadlft
exch def
} if
pop
/outflag 1 def
}
{ pop pop}
ifelse
/inflag 0 def
/inrht 0 def
/intop 0 def
} bind def	
/Mboxout {
outflag
1
eq
{
4 -1
roll
xadlft
leadjust
add
sub
4 1 roll
3 -1
roll
yadbot
leadjust
add
sub
3 1
roll
exch
xadrht
leadjust
add
add
exch
yadtop
leadjust
add
add
/outflag 0 def
/xadlft 0 def
/yadbot 0 def
/xadrht 0 def
/yadtop 0 def
} if
} bind def
/leadjust {
(m) stringwidth pop
.5 mul
} bind def
/Mrotcheck {
dup
90
eq
{
yadbot
/yadbot
xadrht
def	
/xadrht
yadtop
def
/yadtop
xadlft
def
/xadlft
exch
def
}
if
dup
cos
1 index
sin
Checkaux
dup
cos
1 index
sin neg
exch
Checkaux
3 1 roll
pop pop
} bind def
/Checkaux {
4 index
exch
4 index
mul
3 1 roll
mul add
4 1 roll
} bind def
/Mboxrot {
Mrot
90 eq
{
brotaux
4 2
roll
}
if
Mrot
180 eq
{
4 2
roll
brotaux
4 2
roll
brotaux
}	
if
Mrot
270 eq
{
4 2
roll
brotaux
}
if
} bind def
/brotaux {
neg
exch
neg
} bind def
/Mabsproc {
0
matrix defaultmatrix
dtransform idtransform
dup mul exch
dup mul
add sqrt
} bind def
/Mabswid {
Mabsproc
setlinewidth	
} bind def
/Mabsdash {
exch
[
exch
{
Mabsproc
}
forall
]
exch
setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop}
repeat
} bind def
} ifelse
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/setcmykcolor where
{ pop}
{ /setcmykcolor {
4 1
roll
[
4 1 
roll
]
{
1 index
sub
1
sub neg
dup
0
lt
{
pop
0
}
if
dup
1
gt
{
pop
1
}
if
exch
} forall
pop
setrgbcolor
} bind def
} ifelse
/Mcharproc
{
currentfile
(x)
readhexstring
pop
0 get
exch
div
} bind def
/Mshadeproc
{
dup
3 1
roll
{
dup
Mcharproc
3 1
roll
} repeat
1 eq
{
setgray
}
{
3 eq
{
setrgbcolor
}
{
setcmykcolor
} ifelse
} ifelse
} bind def
/Mrectproc
{
3 index
2 index
moveto
2 index
3 -1
roll
lineto
dup
3 1
roll
lineto
lineto
fill
} bind def
/Mcolorimage
{
7 1
roll
pop
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
9 index
Mshadeproc
Mrectproc
} for
pop
} for
pop pop pop pop
} bind def
/Mimage
{
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
Mcharproc
setgray
Mrectproc
} for
pop
} for
pop pop pop
} bind def

MathPictureStart
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.5 0.47619 0.309017 0.294302 [
[(-1)] .02381 0 0 2 0 Minner Mrotsboxa
[(-0.5)] .2619 0 0 2 0 Minner Mrotsboxa
[(0)] .5 0 0 2 0 Minner Mrotsboxa
[(0.5)] .7381 0 0 2 0 Minner Mrotsboxa
[(1)] .97619 0 0 2 0 Minner Mrotsboxa
[()] .5 0 0 2 0 0 -1 Mouter Mrotsboxa
[(-1)] -0.0125 .01472 1 0 0 Minner Mrotsboxa
[(-0.5)] -0.0125 .16187 1 0 0 Minner Mrotsboxa
[(0)] -0.0125 .30902 1 0 0 Minner Mrotsboxa
[(0.5)] -0.0125 .45617 1 0 0 Minner Mrotsboxa
[(1)] -0.0125 .60332 1 0 0 Minner Mrotsboxa
[(Epsilon = 0.01, 0.0025, 0.0001)] .5 .61803 0 -4 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 .61903 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 g
p
p
.002 w
.02381 0 m
.02381 .00625 L
s
P
[(-1)] .02381 0 0 2 0 Minner Mrotshowa
p
.002 w
.2619 0 m
.2619 .00625 L
s
P
[(-0.5)] .2619 0 0 2 0 Minner Mrotshowa
p
.002 w
.5 0 m
.5 .00625 L
s
P
[(0)] .5 0 0 2 0 Minner Mrotshowa
p
.002 w
.7381 0 m
.7381 .00625 L
s
P
[(0.5)] .7381 0 0 2 0 Minner Mrotshowa
p
.002 w
.97619 0 m
.97619 .00625 L
s
P
[(1)] .97619 0 0 2 0 Minner Mrotshowa
p
.001 w
.07143 0 m
.07143 .00375 L
s
P
p
.001 w
.11905 0 m
.11905 .00375 L
s
P
p
.001 w
.16667 0 m
.16667 .00375 L
s
P
p
.001 w
.21429 0 m
.21429 .00375 L
s
P
p
.001 w
.30952 0 m
.30952 .00375 L
s
P
p
.001 w
.35714 0 m
.35714 .00375 L
s
P
p
.001 w
.40476 0 m
.40476 .00375 L
s
P
p
.001 w
.45238 0 m
.45238 .00375 L
s
P
p
.001 w
.54762 0 m
.54762 .00375 L
s
P
p
.001 w
.59524 0 m
.59524 .00375 L
s
P
p
.001 w
.64286 0 m
.64286 .00375 L
s
P
p
.001 w
.69048 0 m
.69048 .00375 L
s
P
p
.001 w
.78571 0 m
.78571 .00375 L
s
P
p
.001 w
.83333 0 m
.83333 .00375 L
s
P
p
.001 w
.88095 0 m
.88095 .00375 L
s
P
p
.001 w
.92857 0 m
.92857 .00375 L
s
P
[()] .5 0 0 2 0 0 -1 Mouter Mrotshowa
p
.002 w
0 0 m
1 0 L
s
P
p
.002 w
0 .01472 m
.00625 .01472 L
s
P
[(-1)] -0.0125 .01472 1 0 0 Minner Mrotshowa
p
.002 w
0 .16187 m
.00625 .16187 L
s
P
[(-0.5)] -0.0125 .16187 1 0 0 Minner Mrotshowa
p
.002 w
0 .30902 m
.00625 .30902 L
s
P
[(0)] -0.0125 .30902 1 0 0 Minner Mrotshowa
p
.002 w
0 .45617 m
.00625 .45617 L
s
P
[(0.5)] -0.0125 .45617 1 0 0 Minner Mrotshowa
p
.002 w
0 .60332 m
.00625 .60332 L
s
P
[(1)] -0.0125 .60332 1 0 0 Minner Mrotshowa
p
.001 w
0 .04415 m
.00375 .04415 L
s
P
p
.001 w
0 .07358 m
.00375 .07358 L
s
P
p
.001 w
0 .10301 m
.00375 .10301 L
s
P
p
.001 w
0 .13244 m
.00375 .13244 L
s
P
p
.001 w
0 .1913 m
.00375 .1913 L
s
P
p
.001 w
0 .22073 m
.00375 .22073 L
s
P
p
.001 w
0 .25016 m
.00375 .25016 L
s
P
p
.001 w
0 .27959 m
.00375 .27959 L
s
P
p
.001 w
0 .33845 m
.00375 .33845 L
s
P
p
.001 w
0 .36788 m
.00375 .36788 L
s
P
p
.001 w
0 .39731 m
.00375 .39731 L
s
P
p
.001 w
0 .42674 m
.00375 .42674 L
s
P
p
.001 w
0 .4856 m
.00375 .4856 L
s
P
p
.001 w
0 .51503 m
.00375 .51503 L
s
P
p
.001 w
0 .54446 m
.00375 .54446 L
s
P
p
.001 w
0 .57389 m
.00375 .57389 L
s
P
p
.002 w
0 0 m
0 .61803 L
s
P
P
p
p
.002 w
.02381 .61178 m
.02381 .61803 L
s
P
p
.002 w
.2619 .61178 m
.2619 .61803 L
s
P
p
.002 w
.5 .61178 m
.5 .61803 L
s
P
p
.002 w
.7381 .61178 m
.7381 .61803 L
s
P
p
.002 w
.97619 .61178 m
.97619 .61803 L
s
P
p
.001 w
.07143 .61428 m
.07143 .61803 L
s
P
p
.001 w
.11905 .61428 m
.11905 .61803 L
s
P
p
.001 w
.16667 .61428 m
.16667 .61803 L
s
P
p
.001 w
.21429 .61428 m
.21429 .61803 L
s
P
p
.001 w
.30952 .61428 m
.30952 .61803 L
s
P
p
.001 w
.35714 .61428 m
.35714 .61803 L
s
P
p
.001 w
.40476 .61428 m
.40476 .61803 L
s
P
p
.001 w
.45238 .61428 m
.45238 .61803 L
s
P
p
.001 w
.54762 .61428 m
.54762 .61803 L
s
P
p
.001 w
.59524 .61428 m
.59524 .61803 L
s
P
p
.001 w
.64286 .61428 m
.64286 .61803 L
s
P
p
.001 w
.69048 .61428 m
.69048 .61803 L
s
P
p
.001 w
.78571 .61428 m
.78571 .61803 L
s
P
p
.001 w
.83333 .61428 m
.83333 .61803 L
s
P
p
.001 w
.88095 .61428 m
.88095 .61803 L
s
P
p
.001 w
.92857 .61428 m
.92857 .61803 L
s
P
[(Epsilon = 0.01, 0.0025, 0.0001)] .5 .61803 0 -4 Mshowa
p
.002 w
0 .61803 m
1 .61803 L
s
P
p
.002 w
.99375 .01472 m
1 .01472 L
s
P
p
.002 w
.99375 .16187 m
1 .16187 L
s
P
p
.002 w
.99375 .30902 m
1 .30902 L
s
P
p
.002 w
.99375 .45617 m
1 .45617 L
s
P
p
.002 w
.99375 .60332 m
1 .60332 L
s
P
p
.001 w
.99625 .04415 m
1 .04415 L
s
P
p
.001 w
.99625 .07358 m
1 .07358 L
s
P
p
.001 w
.99625 .10301 m
1 .10301 L
s
P
p
.001 w
.99625 .13244 m
1 .13244 L
s
P
p
.001 w
.99625 .1913 m
1 .1913 L
s
P
p
.001 w
.99625 .22073 m
1 .22073 L
s
P
p
.001 w
.99625 .25016 m
1 .25016 L
s
P
p
.001 w
.99625 .27959 m
1 .27959 L
s
P
p
.001 w
.99625 .33845 m
1 .33845 L
s
P
p
.001 w
.99625 .36788 m
1 .36788 L
s
P
p
.001 w
.99625 .39731 m
1 .39731 L
s
P
p
.001 w
.99625 .42674 m
1 .42674 L
s
P
p
.001 w
.99625 .4856 m
1 .4856 L
s
P
p
.001 w
.99625 .51503 m
1 .51503 L
s
P
p
.001 w
.99625 .54446 m
1 .54446 L
s
P
p
.001 w
.99625 .57389 m
1 .57389 L
s
P
p
.002 w
1 0 m
1 .61803 L
s
P
P
p
P
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
p
p
p
.001 w
.02381 .30902 m
.04365 .25619 L
.05357 .23569 L
.06349 .21876 L
.07341 .20516 L
.08333 .19465 L
.08829 .19048 L
.09325 .18701 L
.09821 .18421 L
.10317 .18205 L
.10565 .1812 L
.10813 .18051 L
.11062 .17996 L
.11186 .17975 L
.1131 .17956 L
.11434 .17942 L
.11558 .17931 L
.11682 .17924 L
.11806 .1792 L
.1193 .17919 L
.12054 .17922 L
.12178 .17928 L
.12302 .17938 L
.1255 .17967 L
.12674 .17987 L
.12798 .1801 L
.13294 .18133 L
.1379 .18304 L
.14286 .18523 L
.15278 .19095 L
.1627 .19832 L
.18254 .21745 L
.22222 .26949 L
.2619 .33317 L
.30159 .40111 L
.34127 .46667 L
.38095 .52404 L
.42063 .56845 L
.44048 .58462 L
.4504 .59104 L
.46032 .5963 L
.47024 .60037 L
.4752 .60196 L
.48016 .60324 L
.48512 .60422 L
.4876 .60459 L
.49008 .60489 L
.49256 .60511 L
.4938 .60519 L
.49504 .60525 L
Mistroke
.49628 .60529 L
.49752 .60531 L
.49876 .60532 L
.5 .6053 L
.50124 .60527 L
.50248 .60521 L
.50496 .60504 L
.5062 .60493 L
.50744 .6048 L
.50992 .60448 L
.51488 .6036 L
.51984 .60241 L
.52976 .59911 L
.53968 .5946 L
.55952 .58198 L
.57937 .56475 L
.61905 .51769 L
.65873 .45654 L
.69841 .38543 L
.7381 .30918 L
.77778 .23295 L
.81746 .16194 L
.85714 .10096 L
.87698 .07557 L
.89683 .05417 L
.91667 .03714 L
.92659 .03036 L
.93651 .02476 L
.94643 .02039 L
.95139 .01866 L
.95635 .01725 L
.96131 .01615 L
.96379 .01571 L
.96627 .01536 L
.96875 .01508 L
.96999 .01498 L
.97123 .01489 L
.97247 .01482 L
.97371 .01477 L
.97495 .01474 L
.97619 .01473 L
Mfstroke
P
P
p
p
.001 w
.02381 .30902 m
.03373 .2543 L
.04365 .21125 L
.05357 .1779 L
.06349 .15265 L
.06845 .14264 L
.07341 .13418 L
.08333 .12144 L
.08829 .11693 L
.09077 .11509 L
.09325 .11353 L
.09573 .11222 L
.09821 .11115 L
.10069 .11033 L
.10193 .11 L
.10317 .10973 L
.10441 .10951 L
.10565 .10935 L
.10689 .10924 L
.10813 .10918 L
.10938 .10918 L
.11062 .10922 L
.11186 .10931 L
.1131 .10945 L
.11434 .10963 L
.11558 .10986 L
.11806 .11046 L
.12054 .11124 L
.12302 .11218 L
.13294 .1175 L
.1379 .12103 L
.14286 .12507 L
.1627 .14578 L
.18254 .17236 L
.22222 .23741 L
.2619 .311 L
.30159 .38605 L
.34127 .45654 L
.38095 .51728 L
.42063 .56396 L
.44048 .58096 L
.4504 .58774 L
.46032 .59332 L
.47024 .59769 L
.4752 .59941 L
.48016 .60082 L
.48512 .60192 L
.4876 .60235 L
.49008 .60271 L
.49256 .60298 L
Mistroke
.4938 .60309 L
.49504 .60318 L
.49628 .60324 L
.49752 .60329 L
.49876 .60332 L
.5 .60333 L
.50124 .60332 L
.50248 .60329 L
.50372 .60324 L
.50496 .60317 L
.5062 .60308 L
.50744 .60298 L
.50992 .6027 L
.5124 .60234 L
.51488 .60191 L
.51984 .60081 L
.5248 .5994 L
.52976 .59767 L
.53968 .5933 L
.55952 .58092 L
.57937 .56389 L
.61905 .51712 L
.65873 .45617 L
.69841 .38519 L
.7381 .30902 L
.77778 .23285 L
.81746 .16187 L
.85714 .10091 L
.87698 .07553 L
.89683 .05414 L
.91667 .03712 L
.92659 .03033 L
.93651 .02474 L
.94643 .02037 L
.95139 .01865 L
.95635 .01723 L
.96131 .01613 L
.96379 .0157 L
.96627 .01535 L
.96875 .01507 L
.96999 .01496 L
.97123 .01487 L
.97247 .0148 L
.97371 .01475 L
.97495 .01472 L
.97619 .01472 L
Mfstroke
P
P
p
p
.001 w
.02381 .30902 m
.02505 .24155 L
.02629 .18958 L
.02753 .14954 L
.02877 .11872 L
.03001 .095 L
.03125 .07676 L
.03249 .06274 L
.03373 .05199 L
.03497 .04376 L
.03621 .03747 L
.03745 .03268 L
.03869 .02906 L
.03993 .02634 L
.04117 .02432 L
.04241 .02285 L
.04365 .0218 L
.04489 .02107 L
.04613 .02061 L
.04737 .02035 L
.04861 .02026 L
.04985 .02029 L
.05109 .02043 L
.05357 .02094 L
.05481 .02129 L
.05605 .02169 L
.05853 .0226 L
.06349 .02481 L
.08333 .03712 L
.10317 .05414 L
.14286 .10091 L
.18254 .16187 L
.22222 .23285 L
.2619 .30902 L
.30159 .38519 L
.34127 .45617 L
.38095 .51712 L
.42063 .56389 L
.44048 .58092 L
.4504 .5877 L
.46032 .59329 L
.47024 .59766 L
.4752 .59939 L
.48016 .6008 L
.48512 .6019 L
.4876 .60233 L
.49008 .60269 L
.49256 .60296 L
.4938 .60307 L
.49504 .60316 L
Mistroke
.49628 .60323 L
.49752 .60328 L
.49876 .60331 L
.5 .60332 L
.50124 .60331 L
.50248 .60328 L
.50372 .60323 L
.50496 .60316 L
.5062 .60307 L
.50744 .60296 L
.50992 .60269 L
.5124 .60233 L
.51488 .6019 L
.51984 .6008 L
.5248 .59939 L
.52976 .59766 L
.53968 .59329 L
.55952 .58092 L
.57937 .56389 L
.61905 .51712 L
.65873 .45617 L
.69841 .38519 L
.7381 .30902 L
.77778 .23285 L
.81746 .16187 L
.85714 .10091 L
.87698 .07553 L
.89683 .05414 L
.91667 .03712 L
.92659 .03033 L
.93651 .02474 L
.94643 .02037 L
.95139 .01865 L
.95635 .01723 L
.96131 .01613 L
.96379 .0157 L
.96627 .01535 L
.96875 .01507 L
.96999 .01496 L
.97123 .01487 L
.97247 .0148 L
.97371 .01475 L
.97495 .01472 L
.97619 .01472 L
Mfstroke
P
P
P
% End of Graphics
MathPictureEnd
end
showpage
%%EndDocument
 @endspecial 587 1381 a(Figure)i(13:)j(T)m(est)d(Problem)f(13,)g
Fl(y)q Fm(\()p Fl(x)p Fm(\))i(v)o(ersus)g Fl(x)p eop
%%Page: 14 14
14 13 bop 262 307 a Fn(T)l(est)15 b(Problem)e(14)h Fm(\(Linear\))g([2)o
(])262 357 y Fl(\017y)300 342 y Fk(00)331 357 y Fj(\000)9
b Fl(y)14 b Fm(=)d Fj(\000)p Fm(\()p Fl(\017\031)539
342 y Fi(2)568 357 y Fm(+)e(1\))e(cos)q(\()p Fl(\031)q(x)p
Fm(\),)59 b Fl(y)q Fm(\()p Fj(\000)p Fm(1\))13 b(=)f
Fl(y)q Fm(\(1\))g(=)g(0.)262 407 y(Exact)i(solution)f(is)h
Fl(y)q Fm(\()p Fl(x)p Fm(\))e(=)g(cos\()p Fl(\031)q(x)p
Fm(\))e(+)f(exp)q(\(\()p Fl(x)g Fj(\000)g Fm(1\))p Fl(=)1128
377 y Fj(p)p 1163 377 17 2 v 30 x Fl(\017)p Fm(\))g(+)g(exp)q(\()p
Fj(\000)p Fm(\()p Fl(x)g Fm(+)h(1\))p Fl(=)1507 377 y
Fj(p)p 1541 377 V 1541 407 a Fl(\017)p Fm(\).)262 457
y(The)k(solution)f(has)h(b)q(oundary)g(la)o(y)o(ers)g(of)f(width)h
Fl(O)q Fm(\()1096 427 y Fj(p)p 1130 427 V 1130 457 a
Fl(\017)p Fm(\))g(near)g Fl(x)e Fm(=)f Fj(\000)p Fm(1)j(and)g
Fl(x)d Fm(=)h(1.)439 1762 y @beginspecial 72 @llx 72
@lly 540 @urx 720 @ury 2834 @rwi @setspecial
%%BeginDocument: ../PLOTS/pr14.ps

/Mathdict 150 dict def
Mathdict begin
/Mlmarg		1.0 72 mul def
/Mrmarg		1.0 72 mul def
/Mbmarg		1.0 72 mul def
/Mtmarg		1.0 72 mul def
/Mwidth		8.5 72 mul def
/Mheight	11 72 mul def
/Mtransform	{  } bind def
/Mnodistort	true def
/Mfixwid	true	def
/Mfixdash	false def
/Mrot		0	def
/Mpstart {
MathPictureStart
} bind def
/Mpend {
MathPictureEnd
} bind def
/Mscale {
0 1 0 1
5 -1 roll
MathScale
} bind def
/ISOLatin1Encoding dup where
{ pop pop }
{
[
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft
/logicalnot /hyphen /registered /macron
/degree /plusminus /twosuperior /threesuperior
/acute /mu /paragraph /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright
/onequarter /onehalf /threequarters /questiondown
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis
] def
} ifelse
/MFontDict 50 dict def
/MStrCat
{
exch
dup length
2 index length add
string
dup 3 1 roll
copy
length
exch dup
4 2 roll exch
putinterval
} def
/MCreateEncoding
{
1 index
255 string cvs
(-) MStrCat
1 index MStrCat
cvn exch
(Encoding) MStrCat
cvn dup where
{
exch get
}
{
pop
StandardEncoding
} ifelse
3 1 roll
dup MFontDict exch known not
{
1 index findfont
dup length dict
begin
{1 index /FID ne
{def}
{pop pop}
ifelse} forall
/Encoding 3 index
def
currentdict
end
1 index exch definefont pop
MFontDict 1 index
null put
}
if
exch pop
exch pop
} def
/ISOLatin1 { (ISOLatin1) MCreateEncoding } def
/ISO8859 { (ISOLatin1) MCreateEncoding } def
/Mcopyfont {
dup
maxlength
dict
exch
{
1 index
/FID
eq
{
pop pop
}
{
2 index
3 1 roll
put
}
ifelse
}
forall
} def
/Plain	/Courier findfont Mcopyfont definefont pop
/Bold	/Courier-Bold findfont Mcopyfont definefont pop
/Italic /Courier-Oblique findfont Mcopyfont definefont pop
/MathPictureStart {
gsave
Mtransform
Mlmarg
Mbmarg
translate
Mwidth
Mlmarg Mrmarg add
sub
/Mwidth exch def
Mheight
Mbmarg Mtmarg add
sub
/Mheight exch def
/Mtmatrix
matrix currentmatrix
def
/Mgmatrix
matrix currentmatrix
def
} bind def
/MathPictureEnd {
grestore
} bind def
/MFill {
0 0 		moveto
Mwidth 0 	lineto
Mwidth Mheight 	lineto
0 Mheight 	lineto
fill
} bind def
/MPlotRegion {
3 index
Mwidth mul
2 index
Mheight mul
translate
exch sub
Mheight mul
/Mheight
exch def
exch sub
Mwidth mul
/Mwidth
exch def
} bind def
/MathSubStart {
Momatrix
Mgmatrix Mtmatrix
Mwidth Mheight
7 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
Mgmatrix setmatrix
9 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
2 copy translate
/Mtmatrix matrix currentmatrix def
3 -1 roll
exch sub
/Mheight exch def
sub
/Mwidth exch def
} bind def
/MathSubEnd {
/Mheight exch def
/Mwidth exch def
/Mtmatrix exch def
dup setmatrix
/Mgmatrix exch def
/Momatrix exch def
} bind def
/Mdot {
moveto
0 0 rlineto
stroke
} bind def
/Mtetra {
moveto
lineto
lineto
lineto
fill
} bind def
/Metetra {
moveto
lineto
lineto
lineto
closepath
gsave
fill
grestore
0 setgray
stroke
} bind def
/Mistroke {
flattenpath
0 0 0
{
4 2 roll
pop pop
}
{
4 -1 roll
2 index
sub dup mul
4 -1 roll
2 index
sub dup mul
add sqrt
4 -1 roll
add
3 1 roll
}
{
stop
}
{
stop
}
pathforall
pop pop
currentpoint
stroke
moveto
currentdash
3 -1 roll
add
setdash
} bind def
/Mfstroke {
stroke
currentdash
pop 0
setdash
} bind def
/Mrotsboxa {
gsave
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
grestore
Msboxa
3  -1 roll
/Mtmatrix
exch def
/Mrot
0 def
} bind def
/Msboxa {
newpath
5 -1 roll
Mvboxa
pop
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Msboxa1
5 -3 roll
Msboxa1
Mboxrot
[
7 -2 roll
2 copy
[
3 1 roll
10 -1 roll
9 -1 roll
]
6 1 roll
5 -2 roll
]
} bind def
/Msboxa1 {
sub
2 div
dup
2 index
1 add
mul
3 -1 roll
-1 add
3 -1 roll
mul
} bind def
/Mvboxa	{
Mfixwid
{
Mvboxa1
}
{
dup
Mwidthcal
0 exch
{
add
}
forall
exch
Mvboxa1
4 index
7 -1 roll
add
4 -1 roll
pop
3 1 roll
}
ifelse
} bind def
/Mvboxa1 {
gsave
newpath
[ true
3 -1 roll
{
Mbbox
5 -1 roll
{
0
5 1 roll
}
{
7 -1 roll
exch sub
(m) stringwidth pop
.3 mul
sub
7 1 roll
6 -1 roll
4 -1 roll
Mmin
3 -1 roll
5 index
add
5 -1 roll
4 -1 roll
Mmax
4 -1 roll
}
ifelse
false
}
forall
{ stop } if
counttomark
1 add
4 roll
]
grestore
} bind def
/Mbbox {
1 dict begin
0 0 moveto
/temp (T) def
{	gsave
currentpoint newpath moveto
temp 0 3 -1 roll put temp
false charpath flattenpath currentpoint
pathbbox
grestore moveto lineto moveto} forall
pathbbox
newpath
end
} bind def
/Mmin {
2 copy
gt
{ exch } if
pop
} bind def
/Mmax {
2 copy
lt
{ exch } if
pop
} bind def
/Mrotshowa {
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
Mgmatrix setmatrix
Mshowa
/Mtmatrix
exch def
/Mrot 0 def
} bind def
/Mshowa {
4 -2 roll
moveto
2 index
Mtmatrix setmatrix
Mvboxa
7 1 roll
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Mshowa1
4 1 roll
Mshowa1
rmoveto
currentpoint
Mfixwid
{
Mshowax
}
{
Mshoway
}
ifelse
pop pop pop pop
Mgmatrix setmatrix
} bind def
/Mshowax {	
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
Mfixdash
{
Mfixdashp		
}
if
show
} for
} bind def
/Mfixdashp {
dup
length
1
gt
1 index
true exch
{
45
eq
and
} forall
and
{
gsave
(--)		
stringwidth pop
(-)
stringwidth pop
sub
2 div
0 rmoveto
dup
length
1 sub
{
(-)
show
}
repeat
grestore
}
if
} bind def	
/Mshoway {
3 index
Mwidthcal
5 1 roll
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
[
6 index
aload
length
2 add
-1 roll
{
pop
Strform
stringwidth
pop
neg 
exch
add
0 rmoveto
}
exch
kshow
cleartomark
} for
pop	
} bind def
/Mwidthcal {
[
exch
{
Mwidthcal1
}
forall
]
[
exch
dup
Maxlen
-1 add
0 1
3 -1 roll
{
[
exch
2 index
{		 
1 index	
Mget
exch
}
forall		
pop
Maxget
exch
}
for
pop
]
Mreva
} bind def
/Mreva	{
[
exch
aload
length
-1 1
{1 roll}
for
]
} bind def
/Mget	{
1 index
length
-1 add
1 index
ge
{
get
}
{
pop pop
0
}
ifelse
} bind def
/Maxlen	{
[
exch
{
length
}
forall
Maxget
} bind def
/Maxget	{
counttomark
-1 add
1 1
3 -1 roll
{
pop
Mmax
}
for
exch
pop
} bind def
/Mwidthcal1 {
[
exch
{
Strform
stringwidth
pop
}
forall
]
} bind def
/Strform {
/tem (x) def
tem 0
3 -1 roll
put
tem
} bind def
/Mshowa1 {
2 copy
add
4 1 roll
sub
mul
sub
-2 div
} bind def
/MathScale {
Mwidth
Mheight
Mlp
translate
scale
/yscale exch def
/ybias exch def
/xscale exch def
/xbias exch def
/Momatrix
xscale yscale matrix scale
xbias ybias matrix translate
matrix concatmatrix def
/Mgmatrix
matrix currentmatrix
def
} bind def
/Mlp {
3 copy
Mlpfirst
{
Mnodistort
{
Mmin
dup
} if
4 index
2 index
2 index
Mlprun
11 index
11 -1 roll
10 -4 roll
Mlp1
8 index
9 -5 roll
Mlp1
4 -1 roll
and
{ exit } if
3 -1 roll
pop pop
} loop
exch
3 1 roll
7 -3 roll
pop pop pop
} bind def
/Mlpfirst {
3 -1 roll
dup length
2 copy
-2 add
get
aload
pop pop pop
4 -2 roll
-1 add
get
aload
pop pop pop
6 -1 roll
3 -1 roll
5 -1 roll
sub
div
4 1 roll
exch sub
div
} bind def
/Mlprun {
2 copy
4 index
0 get
dup
4 1 roll
Mlprun1
3 copy
8 -2 roll
9 -1 roll
{
3 copy
Mlprun1
3 copy
11 -3 roll
/gt Mlpminmax
8 3 roll
11 -3 roll
/lt Mlpminmax
8 3 roll
} forall
pop pop pop pop
3 1 roll
pop pop
aload pop
5 -1 roll
aload pop
exch
6 -1 roll
Mlprun2
8 2 roll
4 -1 roll
Mlprun2
6 2 roll
3 -1 roll
Mlprun2
4 2 roll
exch
Mlprun2
6 2 roll
} bind def
/Mlprun1 {
aload pop
exch
6 -1 roll
5 -1 roll
mul add
4 -2 roll
mul
3 -1 roll
add
} bind def
/Mlprun2 {
2 copy
add 2 div
3 1 roll
exch sub
} bind def
/Mlpminmax {
cvx
2 index
6 index
2 index
exec
{
7 -3 roll
4 -1 roll
} if
1 index
5 index
3 -1 roll
exec
{
4 1 roll
pop
5 -1 roll
aload
pop pop
4 -1 roll
aload pop
[
8 -2 roll
pop
5 -2 roll
pop
6 -2 roll
pop
5 -1 roll
]
4 1 roll
pop
}
{
pop pop pop
} ifelse
} bind def
/Mlp1 {
5 index
3 index	sub
5 index
2 index mul
1 index
le
1 index
0 le
or
dup
not
{
1 index
3 index	div
.99999 mul
8 -1 roll
pop
7 1 roll
}
if
8 -1 roll
2 div
7 -2 roll
pop sub
5 index
6 -3 roll
pop pop
mul sub
exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
outflag
1
eq
{
/outflag 0 def
/intop 0 def
/inrht 0 def
} if		
5 index
gsave
Mtmatrix setmatrix
Mvboxa pop
grestore
3 -1 roll
pop
dup
intop
gt
{
/intop
exch def
}
{ pop }
ifelse
dup
inrht
gt
{
/inrht
exch def
}
{ pop }
ifelse
pop
/inflag
1 def
} bind def
/Mouter {
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
inflag
1 eq
{
dup
0 lt
{
dup
intop
mul
neg
/yadtop
exch def
} if
dup
0 gt
{
dup
intop
mul
/yadbot
exch def
}
if
pop
dup
0 lt
{
dup
inrht
mul
neg
/xadrht
exch def
} if
dup
0 gt
{
dup
inrht
mul
/xadlft
exch def
} if
pop
/outflag 1 def
}
{ pop pop}
ifelse
/inflag 0 def
/inrht 0 def
/intop 0 def
} bind def	
/Mboxout {
outflag
1
eq
{
4 -1
roll
xadlft
leadjust
add
sub
4 1 roll
3 -1
roll
yadbot
leadjust
add
sub
3 1
roll
exch
xadrht
leadjust
add
add
exch
yadtop
leadjust
add
add
/outflag 0 def
/xadlft 0 def
/yadbot 0 def
/xadrht 0 def
/yadtop 0 def
} if
} bind def
/leadjust {
(m) stringwidth pop
.5 mul
} bind def
/Mrotcheck {
dup
90
eq
{
yadbot
/yadbot
xadrht
def	
/xadrht
yadtop
def
/yadtop
xadlft
def
/xadlft
exch
def
}
if
dup
cos
1 index
sin
Checkaux
dup
cos
1 index
sin neg
exch
Checkaux
3 1 roll
pop pop
} bind def
/Checkaux {
4 index
exch
4 index
mul
3 1 roll
mul add
4 1 roll
} bind def
/Mboxrot {
Mrot
90 eq
{
brotaux
4 2
roll
}
if
Mrot
180 eq
{
4 2
roll
brotaux
4 2
roll
brotaux
}	
if
Mrot
270 eq
{
4 2
roll
brotaux
}
if
} bind def
/brotaux {
neg
exch
neg
} bind def
/Mabsproc {
0
matrix defaultmatrix
dtransform idtransform
dup mul exch
dup mul
add sqrt
} bind def
/Mabswid {
Mabsproc
setlinewidth	
} bind def
/Mabsdash {
exch
[
exch
{
Mabsproc
}
forall
]
exch
setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop}
repeat
} bind def
} ifelse
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/setcmykcolor where
{ pop}
{ /setcmykcolor {
4 1
roll
[
4 1 
roll
]
{
1 index
sub
1
sub neg
dup
0
lt
{
pop
0
}
if
dup
1
gt
{
pop
1
}
if
exch
} forall
pop
setrgbcolor
} bind def
} ifelse
/Mcharproc
{
currentfile
(x)
readhexstring
pop
0 get
exch
div
} bind def
/Mshadeproc
{
dup
3 1
roll
{
dup
Mcharproc
3 1
roll
} repeat
1 eq
{
setgray
}
{
3 eq
{
setrgbcolor
}
{
setcmykcolor
} ifelse
} ifelse
} bind def
/Mrectproc
{
3 index
2 index
moveto
2 index
3 -1
roll
lineto
dup
3 1
roll
lineto
lineto
fill
} bind def
/Mcolorimage
{
7 1
roll
pop
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
9 index
Mshadeproc
Mrectproc
} for
pop
} for
pop pop pop pop
} bind def
/Mimage
{
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
Mcharproc
setgray
Mrectproc
} for
pop
} for
pop pop pop
} bind def

MathPictureStart
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.5 0.47619 0.309017 0.294302 [
[(-1)] .02381 0 0 2 0 Minner Mrotsboxa
[(-0.5)] .2619 0 0 2 0 Minner Mrotsboxa
[(0)] .5 0 0 2 0 Minner Mrotsboxa
[(0.5)] .7381 0 0 2 0 Minner Mrotsboxa
[(1)] .97619 0 0 2 0 Minner Mrotsboxa
[()] .5 0 0 2 0 0 -1 Mouter Mrotsboxa
[(-1)] -0.0125 .01472 1 0 0 Minner Mrotsboxa
[(-0.5)] -0.0125 .16187 1 0 0 Minner Mrotsboxa
[(0)] -0.0125 .30902 1 0 0 Minner Mrotsboxa
[(0.5)] -0.0125 .45617 1 0 0 Minner Mrotsboxa
[(1)] -0.0125 .60332 1 0 0 Minner Mrotsboxa
[(Epsilon = 0.01, 0.0025, 0.0001)] .5 .61803 0 -4 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 .61903 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 g
p
p
.002 w
.02381 0 m
.02381 .00625 L
s
P
[(-1)] .02381 0 0 2 0 Minner Mrotshowa
p
.002 w
.2619 0 m
.2619 .00625 L
s
P
[(-0.5)] .2619 0 0 2 0 Minner Mrotshowa
p
.002 w
.5 0 m
.5 .00625 L
s
P
[(0)] .5 0 0 2 0 Minner Mrotshowa
p
.002 w
.7381 0 m
.7381 .00625 L
s
P
[(0.5)] .7381 0 0 2 0 Minner Mrotshowa
p
.002 w
.97619 0 m
.97619 .00625 L
s
P
[(1)] .97619 0 0 2 0 Minner Mrotshowa
p
.001 w
.07143 0 m
.07143 .00375 L
s
P
p
.001 w
.11905 0 m
.11905 .00375 L
s
P
p
.001 w
.16667 0 m
.16667 .00375 L
s
P
p
.001 w
.21429 0 m
.21429 .00375 L
s
P
p
.001 w
.30952 0 m
.30952 .00375 L
s
P
p
.001 w
.35714 0 m
.35714 .00375 L
s
P
p
.001 w
.40476 0 m
.40476 .00375 L
s
P
p
.001 w
.45238 0 m
.45238 .00375 L
s
P
p
.001 w
.54762 0 m
.54762 .00375 L
s
P
p
.001 w
.59524 0 m
.59524 .00375 L
s
P
p
.001 w
.64286 0 m
.64286 .00375 L
s
P
p
.001 w
.69048 0 m
.69048 .00375 L
s
P
p
.001 w
.78571 0 m
.78571 .00375 L
s
P
p
.001 w
.83333 0 m
.83333 .00375 L
s
P
p
.001 w
.88095 0 m
.88095 .00375 L
s
P
p
.001 w
.92857 0 m
.92857 .00375 L
s
P
[()] .5 0 0 2 0 0 -1 Mouter Mrotshowa
p
.002 w
0 0 m
1 0 L
s
P
p
.002 w
0 .01472 m
.00625 .01472 L
s
P
[(-1)] -0.0125 .01472 1 0 0 Minner Mrotshowa
p
.002 w
0 .16187 m
.00625 .16187 L
s
P
[(-0.5)] -0.0125 .16187 1 0 0 Minner Mrotshowa
p
.002 w
0 .30902 m
.00625 .30902 L
s
P
[(0)] -0.0125 .30902 1 0 0 Minner Mrotshowa
p
.002 w
0 .45617 m
.00625 .45617 L
s
P
[(0.5)] -0.0125 .45617 1 0 0 Minner Mrotshowa
p
.002 w
0 .60332 m
.00625 .60332 L
s
P
[(1)] -0.0125 .60332 1 0 0 Minner Mrotshowa
p
.001 w
0 .04415 m
.00375 .04415 L
s
P
p
.001 w
0 .07358 m
.00375 .07358 L
s
P
p
.001 w
0 .10301 m
.00375 .10301 L
s
P
p
.001 w
0 .13244 m
.00375 .13244 L
s
P
p
.001 w
0 .1913 m
.00375 .1913 L
s
P
p
.001 w
0 .22073 m
.00375 .22073 L
s
P
p
.001 w
0 .25016 m
.00375 .25016 L
s
P
p
.001 w
0 .27959 m
.00375 .27959 L
s
P
p
.001 w
0 .33845 m
.00375 .33845 L
s
P
p
.001 w
0 .36788 m
.00375 .36788 L
s
P
p
.001 w
0 .39731 m
.00375 .39731 L
s
P
p
.001 w
0 .42674 m
.00375 .42674 L
s
P
p
.001 w
0 .4856 m
.00375 .4856 L
s
P
p
.001 w
0 .51503 m
.00375 .51503 L
s
P
p
.001 w
0 .54446 m
.00375 .54446 L
s
P
p
.001 w
0 .57389 m
.00375 .57389 L
s
P
p
.002 w
0 0 m
0 .61803 L
s
P
P
p
p
.002 w
.02381 .61178 m
.02381 .61803 L
s
P
p
.002 w
.2619 .61178 m
.2619 .61803 L
s
P
p
.002 w
.5 .61178 m
.5 .61803 L
s
P
p
.002 w
.7381 .61178 m
.7381 .61803 L
s
P
p
.002 w
.97619 .61178 m
.97619 .61803 L
s
P
p
.001 w
.07143 .61428 m
.07143 .61803 L
s
P
p
.001 w
.11905 .61428 m
.11905 .61803 L
s
P
p
.001 w
.16667 .61428 m
.16667 .61803 L
s
P
p
.001 w
.21429 .61428 m
.21429 .61803 L
s
P
p
.001 w
.30952 .61428 m
.30952 .61803 L
s
P
p
.001 w
.35714 .61428 m
.35714 .61803 L
s
P
p
.001 w
.40476 .61428 m
.40476 .61803 L
s
P
p
.001 w
.45238 .61428 m
.45238 .61803 L
s
P
p
.001 w
.54762 .61428 m
.54762 .61803 L
s
P
p
.001 w
.59524 .61428 m
.59524 .61803 L
s
P
p
.001 w
.64286 .61428 m
.64286 .61803 L
s
P
p
.001 w
.69048 .61428 m
.69048 .61803 L
s
P
p
.001 w
.78571 .61428 m
.78571 .61803 L
s
P
p
.001 w
.83333 .61428 m
.83333 .61803 L
s
P
p
.001 w
.88095 .61428 m
.88095 .61803 L
s
P
p
.001 w
.92857 .61428 m
.92857 .61803 L
s
P
[(Epsilon = 0.01, 0.0025, 0.0001)] .5 .61803 0 -4 Mshowa
p
.002 w
0 .61803 m
1 .61803 L
s
P
p
.002 w
.99375 .01472 m
1 .01472 L
s
P
p
.002 w
.99375 .16187 m
1 .16187 L
s
P
p
.002 w
.99375 .30902 m
1 .30902 L
s
P
p
.002 w
.99375 .45617 m
1 .45617 L
s
P
p
.002 w
.99375 .60332 m
1 .60332 L
s
P
p
.001 w
.99625 .04415 m
1 .04415 L
s
P
p
.001 w
.99625 .07358 m
1 .07358 L
s
P
p
.001 w
.99625 .10301 m
1 .10301 L
s
P
p
.001 w
.99625 .13244 m
1 .13244 L
s
P
p
.001 w
.99625 .1913 m
1 .1913 L
s
P
p
.001 w
.99625 .22073 m
1 .22073 L
s
P
p
.001 w
.99625 .25016 m
1 .25016 L
s
P
p
.001 w
.99625 .27959 m
1 .27959 L
s
P
p
.001 w
.99625 .33845 m
1 .33845 L
s
P
p
.001 w
.99625 .36788 m
1 .36788 L
s
P
p
.001 w
.99625 .39731 m
1 .39731 L
s
P
p
.001 w
.99625 .42674 m
1 .42674 L
s
P
p
.001 w
.99625 .4856 m
1 .4856 L
s
P
p
.001 w
.99625 .51503 m
1 .51503 L
s
P
p
.001 w
.99625 .54446 m
1 .54446 L
s
P
p
.001 w
.99625 .57389 m
1 .57389 L
s
P
p
.002 w
1 0 m
1 .61803 L
s
P
P
p
P
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
p
p
p
.001 w
.02381 .30903 m
.04365 .2562 L
.05357 .2357 L
.06349 .21878 L
.07341 .20518 L
.08333 .19467 L
.08829 .19051 L
.09325 .18704 L
.09821 .18424 L
.10317 .18208 L
.10565 .18123 L
.10813 .18054 L
.11062 .18 L
.11186 .17978 L
.1131 .1796 L
.11434 .17945 L
.11558 .17934 L
.11682 .17927 L
.11806 .17923 L
.1193 .17923 L
.12054 .17926 L
.12178 .17932 L
.12302 .17942 L
.1255 .17971 L
.12674 .17991 L
.12798 .18014 L
.13294 .18137 L
.1379 .18309 L
.14286 .18528 L
.15278 .191 L
.1627 .19838 L
.18254 .21752 L
.22222 .2696 L
.2619 .33334 L
.30159 .40136 L
.34127 .46704 L
.38095 .52461 L
.42063 .56931 L
.44048 .58568 L
.4504 .59222 L
.46032 .59761 L
.47024 .60183 L
.4752 .60349 L
.48016 .60485 L
.48512 .60592 L
.4876 .60633 L
.49008 .60668 L
.49256 .60694 L
.4938 .60705 L
.49504 .60713 L
Mistroke
.49628 .6072 L
.49752 .60725 L
.49876 .60728 L
.5 .60728 L
.50124 .60728 L
.50248 .60725 L
.50372 .6072 L
.50496 .60713 L
.5062 .60705 L
.50744 .60694 L
.50992 .60668 L
.5124 .60633 L
.51488 .60592 L
.51984 .60485 L
.5248 .60349 L
.52976 .60183 L
.53968 .59761 L
.55952 .58568 L
.57937 .56931 L
.61905 .52461 L
.65873 .46704 L
.69841 .40136 L
.7381 .33334 L
.77778 .2696 L
.79762 .24161 L
.81746 .21752 L
.82738 .20726 L
.8373 .19838 L
.84722 .191 L
.85218 .18792 L
.85714 .18528 L
.8621 .18309 L
.86706 .18137 L
.86954 .18069 L
.87202 .18014 L
.87326 .17991 L
.8745 .17971 L
.87574 .17955 L
.87698 .17942 L
.87822 .17932 L
.87946 .17926 L
.8807 .17923 L
.88194 .17923 L
.88318 .17927 L
.88442 .17934 L
.88566 .17945 L
.8869 .1796 L
.88938 .18 L
.89187 .18054 L
.89435 .18123 L
Mistroke
.89683 .18208 L
.90179 .18424 L
.90675 .18704 L
.91667 .19467 L
.92659 .20518 L
.93651 .21878 L
.95635 .2562 L
.97619 .30903 L
Mfstroke
P
P
p
p
.001 w
.02381 .30902 m
.03373 .2543 L
.04365 .21125 L
.05357 .1779 L
.06349 .15265 L
.06845 .14264 L
.07341 .13418 L
.08333 .12144 L
.08829 .11693 L
.09077 .11509 L
.09325 .11353 L
.09573 .11222 L
.09821 .11115 L
.10069 .11033 L
.10193 .11 L
.10317 .10973 L
.10441 .10951 L
.10565 .10935 L
.10689 .10924 L
.10813 .10918 L
.10938 .10918 L
.11062 .10922 L
.11186 .10931 L
.1131 .10945 L
.11434 .10963 L
.11558 .10986 L
.11806 .11046 L
.12054 .11124 L
.12302 .11218 L
.13294 .1175 L
.1379 .12103 L
.14286 .12507 L
.1627 .14578 L
.18254 .17236 L
.22222 .23741 L
.2619 .311 L
.30159 .38605 L
.34127 .45654 L
.38095 .51728 L
.42063 .56396 L
.44048 .58097 L
.4504 .58774 L
.46032 .59333 L
.47024 .5977 L
.4752 .59942 L
.48016 .60083 L
.48512 .60193 L
.4876 .60236 L
.49008 .60272 L
.49256 .60299 L
Mistroke
.4938 .6031 L
.49504 .60319 L
.49628 .60326 L
.49752 .60331 L
.49876 .60334 L
.5 .60335 L
.50124 .60334 L
.50248 .60331 L
.50372 .60326 L
.50496 .60319 L
.5062 .6031 L
.50744 .60299 L
.50992 .60272 L
.5124 .60236 L
.51488 .60193 L
.51984 .60083 L
.5248 .59942 L
.52976 .5977 L
.53968 .59333 L
.55952 .58097 L
.57937 .56396 L
.61905 .51728 L
.65873 .45654 L
.69841 .38605 L
.7381 .311 L
.77778 .23741 L
.81746 .17236 L
.8373 .14578 L
.84722 .13458 L
.85714 .12507 L
.8621 .12103 L
.86706 .1175 L
.87202 .11454 L
.87698 .11218 L
.87946 .11124 L
.88194 .11046 L
.88442 .10986 L
.88566 .10963 L
.8869 .10945 L
.88814 .10931 L
.88938 .10922 L
.89063 .10918 L
.89187 .10918 L
.89311 .10924 L
.89435 .10935 L
.89559 .10951 L
.89683 .10973 L
.89931 .11033 L
.90179 .11115 L
.90427 .11222 L
Mistroke
.90675 .11353 L
.91171 .11693 L
.91667 .12144 L
.92659 .13418 L
.93155 .14264 L
.93651 .15265 L
.94643 .1779 L
.95635 .21125 L
.96627 .2543 L
.97619 .30902 L
Mfstroke
P
P
p
p
.001 w
.02381 .30902 m
.02505 .24155 L
.02629 .18958 L
.02753 .14954 L
.02877 .11872 L
.03001 .095 L
.03125 .07676 L
.03249 .06274 L
.03373 .05199 L
.03497 .04376 L
.03621 .03747 L
.03745 .03268 L
.03869 .02906 L
.03993 .02634 L
.04117 .02432 L
.04241 .02285 L
.04365 .0218 L
.04489 .02107 L
.04613 .02061 L
.04737 .02035 L
.04861 .02026 L
.04985 .02029 L
.05109 .02043 L
.05357 .02094 L
.05481 .02129 L
.05605 .02169 L
.05853 .0226 L
.06349 .02481 L
.08333 .03712 L
.10317 .05414 L
.14286 .10091 L
.18254 .16187 L
.22222 .23285 L
.2619 .30902 L
.30159 .38519 L
.34127 .45617 L
.38095 .51712 L
.42063 .56389 L
.44048 .58092 L
.4504 .5877 L
.46032 .59329 L
.47024 .59766 L
.4752 .59939 L
.48016 .6008 L
.48512 .6019 L
.4876 .60233 L
.49008 .60269 L
.49256 .60296 L
.4938 .60307 L
.49504 .60316 L
Mistroke
.49628 .60323 L
.49752 .60328 L
.49876 .60331 L
.5 .60332 L
.50124 .60331 L
.50248 .60328 L
.50372 .60323 L
.50496 .60316 L
.5062 .60307 L
.50744 .60296 L
.50992 .60269 L
.5124 .60233 L
.51488 .6019 L
.51984 .6008 L
.5248 .59939 L
.52976 .59766 L
.53968 .59329 L
.55952 .58092 L
.57937 .56389 L
.61905 .51712 L
.65873 .45617 L
.69841 .38519 L
.7381 .30902 L
.77778 .23285 L
.81746 .16187 L
.85714 .10091 L
.87698 .07553 L
.89683 .05414 L
.91667 .03712 L
.92659 .03034 L
.93155 .02741 L
.93651 .02481 L
.94147 .0226 L
.94395 .02169 L
.94519 .02129 L
.94643 .02094 L
.94767 .02065 L
.94891 .02043 L
.95015 .02029 L
.95139 .02026 L
.95263 .02035 L
.95387 .02061 L
.95511 .02107 L
.95635 .0218 L
.95759 .02285 L
.95883 .02432 L
.96007 .02634 L
.96131 .02906 L
.96255 .03268 L
.96379 .03747 L
Mistroke
.96503 .04376 L
.96627 .05199 L
.96751 .06274 L
.96875 .07676 L
.96999 .095 L
.97123 .11872 L
.97247 .14954 L
.97371 .18958 L
.97495 .24155 L
.97619 .30902 L
Mfstroke
P
P
P
% End of Graphics
MathPictureEnd
end
showpage
%%EndDocument
 @endspecial 587 1381 a(Figure)i(14:)j(T)m(est)d(Problem)f(14,)g
Fl(y)q Fm(\()p Fl(x)p Fm(\))i(v)o(ersus)g Fl(x)p eop
%%Page: 15 15
15 14 bop 262 307 a Fn(T)l(est)15 b(Problem)e(15)h Fm(\(Linear\))g([6)o
(,)g(p.14])262 357 y Fl(\017y)300 342 y Fk(00)331 357
y Fj(\000)9 b Fl(xy)k Fm(=)f(0,)59 b Fl(y)q Fm(\()p Fj(\000)p
Fm(1\))13 b(=)f Fl(y)q Fm(\(1\))g(=)g(1.)262 407 y(Exact)i(solution)f
(is)h Fl(y)q Fm(\()p Fl(x)p Fm(\))e(=)g Fl(A)p Fm(A)775
413 y Fc(i)789 407 y Fm(\()p Fl(x\017)846 392 y Fk(\000)p
Fi(1)p Fc(=)p Fi(3)924 407 y Fm(\))d(+)h Fl(B)r Fm(B)1053
413 y Fc(i)1067 407 y Fm(\()p Fl(x\017)1124 392 y Fk(\000)p
Fi(1)p Fc(=)p Fi(3)1202 407 y Fm(\).)262 457 y(Here)21
b(A)397 463 y Fc(i)411 457 y Fm(\()p Fl(x)p Fm(\),)h(B)530
463 y Fc(i)544 457 y Fm(\()p Fl(x)p Fm(\))f(are)g(Airy)f(functions.)39
b(The)21 b(solution)e(has)i(an)f(oscillating)f(part)262
506 y(coupled)14 b(to)f(a)h(smo)q(oth)f(solution)g(whic)o(h)h(is)f(in)h
(turn)g(coupled)g(to)g(a)g(b)q(oundary)g(la)o(y)o(er.)439
1810 y @beginspecial 72 @llx 72 @lly 540 @urx 720 @ury
2834 @rwi @setspecial
%%BeginDocument: ../PLOTS/pr15.ps

/Mathdict 150 dict def
Mathdict begin
/Mlmarg		1.0 72 mul def
/Mrmarg		1.0 72 mul def
/Mbmarg		1.0 72 mul def
/Mtmarg		1.0 72 mul def
/Mwidth		8.5 72 mul def
/Mheight	11 72 mul def
/Mtransform	{  } bind def
/Mnodistort	true def
/Mfixwid	true	def
/Mfixdash	false def
/Mrot		0	def
/Mpstart {
MathPictureStart
} bind def
/Mpend {
MathPictureEnd
} bind def
/Mscale {
0 1 0 1
5 -1 roll
MathScale
} bind def
/ISOLatin1Encoding dup where
{ pop pop }
{
[
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft
/logicalnot /hyphen /registered /macron
/degree /plusminus /twosuperior /threesuperior
/acute /mu /paragraph /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright
/onequarter /onehalf /threequarters /questiondown
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis
] def
} ifelse
/MFontDict 50 dict def
/MStrCat
{
exch
dup length
2 index length add
string
dup 3 1 roll
copy
length
exch dup
4 2 roll exch
putinterval
} def
/MCreateEncoding
{
1 index
255 string cvs
(-) MStrCat
1 index MStrCat
cvn exch
(Encoding) MStrCat
cvn dup where
{
exch get
}
{
pop
StandardEncoding
} ifelse
3 1 roll
dup MFontDict exch known not
{
1 index findfont
dup length dict
begin
{1 index /FID ne
{def}
{pop pop}
ifelse} forall
/Encoding 3 index
def
currentdict
end
1 index exch definefont pop
MFontDict 1 index
null put
}
if
exch pop
exch pop
} def
/ISOLatin1 { (ISOLatin1) MCreateEncoding } def
/ISO8859 { (ISOLatin1) MCreateEncoding } def
/Mcopyfont {
dup
maxlength
dict
exch
{
1 index
/FID
eq
{
pop pop
}
{
2 index
3 1 roll
put
}
ifelse
}
forall
} def
/Plain	/Courier findfont Mcopyfont definefont pop
/Bold	/Courier-Bold findfont Mcopyfont definefont pop
/Italic /Courier-Oblique findfont Mcopyfont definefont pop
/MathPictureStart {
gsave
Mtransform
Mlmarg
Mbmarg
translate
Mwidth
Mlmarg Mrmarg add
sub
/Mwidth exch def
Mheight
Mbmarg Mtmarg add
sub
/Mheight exch def
/Mtmatrix
matrix currentmatrix
def
/Mgmatrix
matrix currentmatrix
def
} bind def
/MathPictureEnd {
grestore
} bind def
/MFill {
0 0 		moveto
Mwidth 0 	lineto
Mwidth Mheight 	lineto
0 Mheight 	lineto
fill
} bind def
/MPlotRegion {
3 index
Mwidth mul
2 index
Mheight mul
translate
exch sub
Mheight mul
/Mheight
exch def
exch sub
Mwidth mul
/Mwidth
exch def
} bind def
/MathSubStart {
Momatrix
Mgmatrix Mtmatrix
Mwidth Mheight
7 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
Mgmatrix setmatrix
9 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
2 copy translate
/Mtmatrix matrix currentmatrix def
3 -1 roll
exch sub
/Mheight exch def
sub
/Mwidth exch def
} bind def
/MathSubEnd {
/Mheight exch def
/Mwidth exch def
/Mtmatrix exch def
dup setmatrix
/Mgmatrix exch def
/Momatrix exch def
} bind def
/Mdot {
moveto
0 0 rlineto
stroke
} bind def
/Mtetra {
moveto
lineto
lineto
lineto
fill
} bind def
/Metetra {
moveto
lineto
lineto
lineto
closepath
gsave
fill
grestore
0 setgray
stroke
} bind def
/Mistroke {
flattenpath
0 0 0
{
4 2 roll
pop pop
}
{
4 -1 roll
2 index
sub dup mul
4 -1 roll
2 index
sub dup mul
add sqrt
4 -1 roll
add
3 1 roll
}
{
stop
}
{
stop
}
pathforall
pop pop
currentpoint
stroke
moveto
currentdash
3 -1 roll
add
setdash
} bind def
/Mfstroke {
stroke
currentdash
pop 0
setdash
} bind def
/Mrotsboxa {
gsave
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
grestore
Msboxa
3  -1 roll
/Mtmatrix
exch def
/Mrot
0 def
} bind def
/Msboxa {
newpath
5 -1 roll
Mvboxa
pop
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Msboxa1
5 -3 roll
Msboxa1
Mboxrot
[
7 -2 roll
2 copy
[
3 1 roll
10 -1 roll
9 -1 roll
]
6 1 roll
5 -2 roll
]
} bind def
/Msboxa1 {
sub
2 div
dup
2 index
1 add
mul
3 -1 roll
-1 add
3 -1 roll
mul
} bind def
/Mvboxa	{
Mfixwid
{
Mvboxa1
}
{
dup
Mwidthcal
0 exch
{
add
}
forall
exch
Mvboxa1
4 index
7 -1 roll
add
4 -1 roll
pop
3 1 roll
}
ifelse
} bind def
/Mvboxa1 {
gsave
newpath
[ true
3 -1 roll
{
Mbbox
5 -1 roll
{
0
5 1 roll
}
{
7 -1 roll
exch sub
(m) stringwidth pop
.3 mul
sub
7 1 roll
6 -1 roll
4 -1 roll
Mmin
3 -1 roll
5 index
add
5 -1 roll
4 -1 roll
Mmax
4 -1 roll
}
ifelse
false
}
forall
{ stop } if
counttomark
1 add
4 roll
]
grestore
} bind def
/Mbbox {
1 dict begin
0 0 moveto
/temp (T) def
{	gsave
currentpoint newpath moveto
temp 0 3 -1 roll put temp
false charpath flattenpath currentpoint
pathbbox
grestore moveto lineto moveto} forall
pathbbox
newpath
end
} bind def
/Mmin {
2 copy
gt
{ exch } if
pop
} bind def
/Mmax {
2 copy
lt
{ exch } if
pop
} bind def
/Mrotshowa {
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
Mgmatrix setmatrix
Mshowa
/Mtmatrix
exch def
/Mrot 0 def
} bind def
/Mshowa {
4 -2 roll
moveto
2 index
Mtmatrix setmatrix
Mvboxa
7 1 roll
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Mshowa1
4 1 roll
Mshowa1
rmoveto
currentpoint
Mfixwid
{
Mshowax
}
{
Mshoway
}
ifelse
pop pop pop pop
Mgmatrix setmatrix
} bind def
/Mshowax {	
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
Mfixdash
{
Mfixdashp		
}
if
show
} for
} bind def
/Mfixdashp {
dup
length
1
gt
1 index
true exch
{
45
eq
and
} forall
and
{
gsave
(--)		
stringwidth pop
(-)
stringwidth pop
sub
2 div
0 rmoveto
dup
length
1 sub
{
(-)
show
}
repeat
grestore
}
if
} bind def	
/Mshoway {
3 index
Mwidthcal
5 1 roll
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
[
6 index
aload
length
2 add
-1 roll
{
pop
Strform
stringwidth
pop
neg 
exch
add
0 rmoveto
}
exch
kshow
cleartomark
} for
pop	
} bind def
/Mwidthcal {
[
exch
{
Mwidthcal1
}
forall
]
[
exch
dup
Maxlen
-1 add
0 1
3 -1 roll
{
[
exch
2 index
{		 
1 index	
Mget
exch
}
forall		
pop
Maxget
exch
}
for
pop
]
Mreva
} bind def
/Mreva	{
[
exch
aload
length
-1 1
{1 roll}
for
]
} bind def
/Mget	{
1 index
length
-1 add
1 index
ge
{
get
}
{
pop pop
0
}
ifelse
} bind def
/Maxlen	{
[
exch
{
length
}
forall
Maxget
} bind def
/Maxget	{
counttomark
-1 add
1 1
3 -1 roll
{
pop
Mmax
}
for
exch
pop
} bind def
/Mwidthcal1 {
[
exch
{
Strform
stringwidth
pop
}
forall
]
} bind def
/Strform {
/tem (x) def
tem 0
3 -1 roll
put
tem
} bind def
/Mshowa1 {
2 copy
add
4 1 roll
sub
mul
sub
-2 div
} bind def
/MathScale {
Mwidth
Mheight
Mlp
translate
scale
/yscale exch def
/ybias exch def
/xscale exch def
/xbias exch def
/Momatrix
xscale yscale matrix scale
xbias ybias matrix translate
matrix concatmatrix def
/Mgmatrix
matrix currentmatrix
def
} bind def
/Mlp {
3 copy
Mlpfirst
{
Mnodistort
{
Mmin
dup
} if
4 index
2 index
2 index
Mlprun
11 index
11 -1 roll
10 -4 roll
Mlp1
8 index
9 -5 roll
Mlp1
4 -1 roll
and
{ exit } if
3 -1 roll
pop pop
} loop
exch
3 1 roll
7 -3 roll
pop pop pop
} bind def
/Mlpfirst {
3 -1 roll
dup length
2 copy
-2 add
get
aload
pop pop pop
4 -2 roll
-1 add
get
aload
pop pop pop
6 -1 roll
3 -1 roll
5 -1 roll
sub
div
4 1 roll
exch sub
div
} bind def
/Mlprun {
2 copy
4 index
0 get
dup
4 1 roll
Mlprun1
3 copy
8 -2 roll
9 -1 roll
{
3 copy
Mlprun1
3 copy
11 -3 roll
/gt Mlpminmax
8 3 roll
11 -3 roll
/lt Mlpminmax
8 3 roll
} forall
pop pop pop pop
3 1 roll
pop pop
aload pop
5 -1 roll
aload pop
exch
6 -1 roll
Mlprun2
8 2 roll
4 -1 roll
Mlprun2
6 2 roll
3 -1 roll
Mlprun2
4 2 roll
exch
Mlprun2
6 2 roll
} bind def
/Mlprun1 {
aload pop
exch
6 -1 roll
5 -1 roll
mul add
4 -2 roll
mul
3 -1 roll
add
} bind def
/Mlprun2 {
2 copy
add 2 div
3 1 roll
exch sub
} bind def
/Mlpminmax {
cvx
2 index
6 index
2 index
exec
{
7 -3 roll
4 -1 roll
} if
1 index
5 index
3 -1 roll
exec
{
4 1 roll
pop
5 -1 roll
aload
pop pop
4 -1 roll
aload pop
[
8 -2 roll
pop
5 -2 roll
pop
6 -2 roll
pop
5 -1 roll
]
4 1 roll
pop
}
{
pop pop pop
} ifelse
} bind def
/Mlp1 {
5 index
3 index	sub
5 index
2 index mul
1 index
le
1 index
0 le
or
dup
not
{
1 index
3 index	div
.99999 mul
8 -1 roll
pop
7 1 roll
}
if
8 -1 roll
2 div
7 -2 roll
pop sub
5 index
6 -3 roll
pop pop
mul sub
exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
outflag
1
eq
{
/outflag 0 def
/intop 0 def
/inrht 0 def
} if		
5 index
gsave
Mtmatrix setmatrix
Mvboxa pop
grestore
3 -1 roll
pop
dup
intop
gt
{
/intop
exch def
}
{ pop }
ifelse
dup
inrht
gt
{
/inrht
exch def
}
{ pop }
ifelse
pop
/inflag
1 def
} bind def
/Mouter {
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
inflag
1 eq
{
dup
0 lt
{
dup
intop
mul
neg
/yadtop
exch def
} if
dup
0 gt
{
dup
intop
mul
/yadbot
exch def
}
if
pop
dup
0 lt
{
dup
inrht
mul
neg
/xadrht
exch def
} if
dup
0 gt
{
dup
inrht
mul
/xadlft
exch def
} if
pop
/outflag 1 def
}
{ pop pop}
ifelse
/inflag 0 def
/inrht 0 def
/intop 0 def
} bind def	
/Mboxout {
outflag
1
eq
{
4 -1
roll
xadlft
leadjust
add
sub
4 1 roll
3 -1
roll
yadbot
leadjust
add
sub
3 1
roll
exch
xadrht
leadjust
add
add
exch
yadtop
leadjust
add
add
/outflag 0 def
/xadlft 0 def
/yadbot 0 def
/xadrht 0 def
/yadtop 0 def
} if
} bind def
/leadjust {
(m) stringwidth pop
.5 mul
} bind def
/Mrotcheck {
dup
90
eq
{
yadbot
/yadbot
xadrht
def	
/xadrht
yadtop
def
/yadtop
xadlft
def
/xadlft
exch
def
}
if
dup
cos
1 index
sin
Checkaux
dup
cos
1 index
sin neg
exch
Checkaux
3 1 roll
pop pop
} bind def
/Checkaux {
4 index
exch
4 index
mul
3 1 roll
mul add
4 1 roll
} bind def
/Mboxrot {
Mrot
90 eq
{
brotaux
4 2
roll
}
if
Mrot
180 eq
{
4 2
roll
brotaux
4 2
roll
brotaux
}	
if
Mrot
270 eq
{
4 2
roll
brotaux
}
if
} bind def
/brotaux {
neg
exch
neg
} bind def
/Mabsproc {
0
matrix defaultmatrix
dtransform idtransform
dup mul exch
dup mul
add sqrt
} bind def
/Mabswid {
Mabsproc
setlinewidth	
} bind def
/Mabsdash {
exch
[
exch
{
Mabsproc
}
forall
]
exch
setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop}
repeat
} bind def
} ifelse
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/setcmykcolor where
{ pop}
{ /setcmykcolor {
4 1
roll
[
4 1 
roll
]
{
1 index
sub
1
sub neg
dup
0
lt
{
pop
0
}
if
dup
1
gt
{
pop
1
}
if
exch
} forall
pop
setrgbcolor
} bind def
} ifelse
/Mcharproc
{
currentfile
(x)
readhexstring
pop
0 get
exch
div
} bind def
/Mshadeproc
{
dup
3 1
roll
{
dup
Mcharproc
3 1
roll
} repeat
1 eq
{
setgray
}
{
3 eq
{
setrgbcolor
}
{
setcmykcolor
} ifelse
} ifelse
} bind def
/Mrectproc
{
3 index
2 index
moveto
2 index
3 -1
roll
lineto
dup
3 1
roll
lineto
lineto
fill
} bind def
/Mcolorimage
{
7 1
roll
pop
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
9 index
Mshadeproc
Mrectproc
} for
pop
} for
pop pop pop pop
} bind def
/Mimage
{
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
Mcharproc
setgray
Mrectproc
} for
pop
} for
pop pop pop
} bind def

MathPictureStart
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.5 0.47619 0.309017 0.0618034 [
[(-1)] .02381 0 0 2 0 Minner Mrotsboxa
[(-0.5)] .2619 0 0 2 0 Minner Mrotsboxa
[(0)] .5 0 0 2 0 Minner Mrotsboxa
[(0.5)] .7381 0 0 2 0 Minner Mrotsboxa
[(1)] .97619 0 0 2 0 Minner Mrotsboxa
[()] .5 0 0 2 0 0 -1 Mouter Mrotsboxa
[(-4)] -0.0125 .0618 1 0 0 Minner Mrotsboxa
[(-2)] -0.0125 .18541 1 0 0 Minner Mrotsboxa
[(0)] -0.0125 .30902 1 0 0 Minner Mrotsboxa
[(2)] -0.0125 .43262 1 0 0 Minner Mrotsboxa
[(4)] -0.0125 .55623 1 0 0 Minner Mrotsboxa
[(Epsilon = 0.01, 0.005, 0.003)] .5 .61803 0 -4 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 .61903 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 g
p
p
.002 w
.02381 0 m
.02381 .00625 L
s
P
[(-1)] .02381 0 0 2 0 Minner Mrotshowa
p
.002 w
.2619 0 m
.2619 .00625 L
s
P
[(-0.5)] .2619 0 0 2 0 Minner Mrotshowa
p
.002 w
.5 0 m
.5 .00625 L
s
P
[(0)] .5 0 0 2 0 Minner Mrotshowa
p
.002 w
.7381 0 m
.7381 .00625 L
s
P
[(0.5)] .7381 0 0 2 0 Minner Mrotshowa
p
.002 w
.97619 0 m
.97619 .00625 L
s
P
[(1)] .97619 0 0 2 0 Minner Mrotshowa
p
.001 w
.07143 0 m
.07143 .00375 L
s
P
p
.001 w
.11905 0 m
.11905 .00375 L
s
P
p
.001 w
.16667 0 m
.16667 .00375 L
s
P
p
.001 w
.21429 0 m
.21429 .00375 L
s
P
p
.001 w
.30952 0 m
.30952 .00375 L
s
P
p
.001 w
.35714 0 m
.35714 .00375 L
s
P
p
.001 w
.40476 0 m
.40476 .00375 L
s
P
p
.001 w
.45238 0 m
.45238 .00375 L
s
P
p
.001 w
.54762 0 m
.54762 .00375 L
s
P
p
.001 w
.59524 0 m
.59524 .00375 L
s
P
p
.001 w
.64286 0 m
.64286 .00375 L
s
P
p
.001 w
.69048 0 m
.69048 .00375 L
s
P
p
.001 w
.78571 0 m
.78571 .00375 L
s
P
p
.001 w
.83333 0 m
.83333 .00375 L
s
P
p
.001 w
.88095 0 m
.88095 .00375 L
s
P
p
.001 w
.92857 0 m
.92857 .00375 L
s
P
[()] .5 0 0 2 0 0 -1 Mouter Mrotshowa
p
.002 w
0 0 m
1 0 L
s
P
p
.002 w
0 .0618 m
.00625 .0618 L
s
P
[(-4)] -0.0125 .0618 1 0 0 Minner Mrotshowa
p
.002 w
0 .18541 m
.00625 .18541 L
s
P
[(-2)] -0.0125 .18541 1 0 0 Minner Mrotshowa
p
.002 w
0 .30902 m
.00625 .30902 L
s
P
[(0)] -0.0125 .30902 1 0 0 Minner Mrotshowa
p
.002 w
0 .43262 m
.00625 .43262 L
s
P
[(2)] -0.0125 .43262 1 0 0 Minner Mrotshowa
p
.002 w
0 .55623 m
.00625 .55623 L
s
P
[(4)] -0.0125 .55623 1 0 0 Minner Mrotshowa
p
.001 w
0 .08652 m
.00375 .08652 L
s
P
p
.001 w
0 .11125 m
.00375 .11125 L
s
P
p
.001 w
0 .13597 m
.00375 .13597 L
s
P
p
.001 w
0 .16069 m
.00375 .16069 L
s
P
p
.001 w
0 .21013 m
.00375 .21013 L
s
P
p
.001 w
0 .23485 m
.00375 .23485 L
s
P
p
.001 w
0 .25957 m
.00375 .25957 L
s
P
p
.001 w
0 .2843 m
.00375 .2843 L
s
P
p
.001 w
0 .33374 m
.00375 .33374 L
s
P
p
.001 w
0 .35846 m
.00375 .35846 L
s
P
p
.001 w
0 .38318 m
.00375 .38318 L
s
P
p
.001 w
0 .4079 m
.00375 .4079 L
s
P
p
.001 w
0 .45735 m
.00375 .45735 L
s
P
p
.001 w
0 .48207 m
.00375 .48207 L
s
P
p
.001 w
0 .50679 m
.00375 .50679 L
s
P
p
.001 w
0 .53151 m
.00375 .53151 L
s
P
p
.001 w
0 .03708 m
.00375 .03708 L
s
P
p
.001 w
0 .01236 m
.00375 .01236 L
s
P
p
.001 w
0 .58095 m
.00375 .58095 L
s
P
p
.001 w
0 .60567 m
.00375 .60567 L
s
P
p
.002 w
0 0 m
0 .61803 L
s
P
P
p
p
.002 w
.02381 .61178 m
.02381 .61803 L
s
P
p
.002 w
.2619 .61178 m
.2619 .61803 L
s
P
p
.002 w
.5 .61178 m
.5 .61803 L
s
P
p
.002 w
.7381 .61178 m
.7381 .61803 L
s
P
p
.002 w
.97619 .61178 m
.97619 .61803 L
s
P
p
.001 w
.07143 .61428 m
.07143 .61803 L
s
P
p
.001 w
.11905 .61428 m
.11905 .61803 L
s
P
p
.001 w
.16667 .61428 m
.16667 .61803 L
s
P
p
.001 w
.21429 .61428 m
.21429 .61803 L
s
P
p
.001 w
.30952 .61428 m
.30952 .61803 L
s
P
p
.001 w
.35714 .61428 m
.35714 .61803 L
s
P
p
.001 w
.40476 .61428 m
.40476 .61803 L
s
P
p
.001 w
.45238 .61428 m
.45238 .61803 L
s
P
p
.001 w
.54762 .61428 m
.54762 .61803 L
s
P
p
.001 w
.59524 .61428 m
.59524 .61803 L
s
P
p
.001 w
.64286 .61428 m
.64286 .61803 L
s
P
p
.001 w
.69048 .61428 m
.69048 .61803 L
s
P
p
.001 w
.78571 .61428 m
.78571 .61803 L
s
P
p
.001 w
.83333 .61428 m
.83333 .61803 L
s
P
p
.001 w
.88095 .61428 m
.88095 .61803 L
s
P
p
.001 w
.92857 .61428 m
.92857 .61803 L
s
P
[(Epsilon = 0.01, 0.005, 0.003)] .5 .61803 0 -4 Mshowa
p
.002 w
0 .61803 m
1 .61803 L
s
P
p
.002 w
.99375 .0618 m
1 .0618 L
s
P
p
.002 w
.99375 .18541 m
1 .18541 L
s
P
p
.002 w
.99375 .30902 m
1 .30902 L
s
P
p
.002 w
.99375 .43262 m
1 .43262 L
s
P
p
.002 w
.99375 .55623 m
1 .55623 L
s
P
p
.001 w
.99625 .08652 m
1 .08652 L
s
P
p
.001 w
.99625 .11125 m
1 .11125 L
s
P
p
.001 w
.99625 .13597 m
1 .13597 L
s
P
p
.001 w
.99625 .16069 m
1 .16069 L
s
P
p
.001 w
.99625 .21013 m
1 .21013 L
s
P
p
.001 w
.99625 .23485 m
1 .23485 L
s
P
p
.001 w
.99625 .25957 m
1 .25957 L
s
P
p
.001 w
.99625 .2843 m
1 .2843 L
s
P
p
.001 w
.99625 .33374 m
1 .33374 L
s
P
p
.001 w
.99625 .35846 m
1 .35846 L
s
P
p
.001 w
.99625 .38318 m
1 .38318 L
s
P
p
.001 w
.99625 .4079 m
1 .4079 L
s
P
p
.001 w
.99625 .45735 m
1 .45735 L
s
P
p
.001 w
.99625 .48207 m
1 .48207 L
s
P
p
.001 w
.99625 .50679 m
1 .50679 L
s
P
p
.001 w
.99625 .53151 m
1 .53151 L
s
P
p
.001 w
.99625 .03708 m
1 .03708 L
s
P
p
.001 w
.99625 .01236 m
1 .01236 L
s
P
p
.001 w
.99625 .58095 m
1 .58095 L
s
P
p
.001 w
.99625 .60567 m
1 .60567 L
s
P
p
.002 w
1 0 m
1 .61803 L
s
P
P
p
P
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
p
p
p
.001 w
.02381 .37082 m
.06349 .33216 L
.08333 .30535 L
.10317 .27907 L
.1131 .26732 L
.12302 .25703 L
.13294 .24853 L
.1379 .24502 L
.14286 .24204 L
.14782 .2396 L
.1503 .23859 L
.15278 .23772 L
.15526 .23699 L
.15774 .23641 L
.15898 .23617 L
.16022 .23596 L
.16146 .23579 L
.1627 .23566 L
.16394 .23556 L
.16518 .23549 L
.16642 .23546 L
.16766 .23547 L
.1689 .23551 L
.17014 .23559 L
.17138 .2357 L
.17262 .23584 L
.1751 .23623 L
.17758 .23676 L
.18006 .23741 L
.18254 .2382 L
.1875 .24016 L
.19246 .24261 L
.20238 .24888 L
.22222 .26603 L
.2619 .31106 L
.30159 .35584 L
.32143 .37389 L
.33135 .38139 L
.34127 .38777 L
.35119 .39301 L
.36111 .39712 L
.36607 .39876 L
.37103 .40012 L
.37599 .40121 L
.38095 .40204 L
.38343 .40236 L
.38591 .40262 L
.38715 .40273 L
.38839 .40282 L
.38963 .4029 L
Mistroke
.39087 .40296 L
.39211 .403 L
.39335 .40304 L
.39459 .40306 L
.39583 .40306 L
.39707 .40305 L
.39831 .40303 L
.39955 .40299 L
.40079 .40294 L
.40327 .4028 L
.40575 .40261 L
.40823 .40237 L
.41071 .40208 L
.42063 .40045 L
.43056 .39817 L
.44048 .39532 L
.46032 .38831 L
.5 .37146 L
.53968 .35444 L
.57937 .33991 L
.59921 .33394 L
.61905 .32886 L
.63889 .32465 L
.65873 .32122 L
.67857 .31851 L
.69841 .3164 L
.70833 .31556 L
.71825 .31484 L
.7381 .31374 L
.74802 .31335 L
.75298 .31319 L
.75794 .31305 L
.7629 .31294 L
.76786 .31285 L
.77034 .31281 L
.77282 .31279 L
.7753 .31276 L
.77654 .31275 L
.77778 .31274 L
.77902 .31274 L
.78026 .31273 L
.7815 .31273 L
.78274 .31273 L
.78398 .31272 L
.78522 .31273 L
.78646 .31273 L
.7877 .31273 L
.79018 .31274 L
.79142 .31275 L
.79266 .31276 L
Mistroke
.79762 .31282 L
.8001 .31285 L
.80258 .3129 L
.80754 .31301 L
.81746 .31331 L
.82738 .31373 L
.8373 .3143 L
.84722 .31503 L
.85714 .31595 L
.87698 .31851 L
.8869 .32026 L
.89683 .3224 L
.90675 .32503 L
.91667 .32826 L
.92659 .33222 L
.93651 .33708 L
.94643 .34307 L
.95635 .35045 L
.97619 .37082 L
Mfstroke
P
P
p
p
.001 w
.02381 .37082 m
.04365 .32644 L
.06349 .27631 L
.07341 .25414 L
.08333 .23621 L
.08829 .22924 L
.09325 .22376 L
.09573 .22161 L
.09821 .21986 L
.09945 .21914 L
.10069 .21852 L
.10193 .21801 L
.10317 .21759 L
.10441 .21728 L
.10565 .21708 L
.10689 .21698 L
.10813 .21698 L
.10938 .21708 L
.11062 .21728 L
.11186 .21759 L
.1131 .218 L
.11558 .21912 L
.11806 .22063 L
.12054 .22252 L
.12302 .22479 L
.13294 .23734 L
.14286 .25466 L
.1627 .29847 L
.18254 .34493 L
.19246 .36572 L
.20238 .38335 L
.2123 .39696 L
.21726 .40208 L
.21974 .40419 L
.22222 .40599 L
.2247 .40749 L
.22718 .40868 L
.22842 .40916 L
.22966 .40956 L
.2309 .40989 L
.23214 .41013 L
.23338 .4103 L
.23462 .41039 L
.23586 .41041 L
.2371 .41035 L
.23834 .41021 L
.23958 .41 L
.24206 .40936 L
.2433 .40892 L
.24454 .40841 L
Mistroke
.24702 .40718 L
.25198 .40388 L
.25694 .39951 L
.2619 .39413 L
.28175 .36428 L
.30159 .32567 L
.32143 .28459 L
.34127 .24655 L
.35119 .23 L
.36111 .21559 L
.37103 .20353 L
.38095 .19395 L
.39087 .18685 L
.39583 .18422 L
.40079 .18218 L
.40575 .18072 L
.40823 .18019 L
.40947 .17998 L
.41071 .1798 L
.41195 .17966 L
.41319 .17954 L
.41443 .17946 L
.41567 .17941 L
.41691 .1794 L
.41815 .17941 L
.41939 .17945 L
.42063 .17952 L
.42312 .17975 L
.42436 .17991 L
.4256 .1801 L
.43056 .18111 L
.43552 .18253 L
.44048 .18432 L
.4504 .18888 L
.46032 .19453 L
.5 .22311 L
.53968 .25227 L
.55952 .26474 L
.57937 .27531 L
.59921 .28394 L
.61905 .29076 L
.63889 .29601 L
.65873 .29994 L
.67857 .30281 L
.69841 .30487 L
.71825 .30633 L
.7381 .30736 L
.75794 .3081 L
.77778 .30866 L
.79762 .30915 L
Mistroke
.81746 .30967 L
.82738 .30998 L
.8373 .31035 L
.84722 .3108 L
.85714 .31137 L
.86706 .31208 L
.87698 .31301 L
.8869 .31421 L
.89683 .31578 L
.90675 .31784 L
.91667 .32056 L
.92659 .32417 L
.93651 .32896 L
.94643 .33535 L
.95635 .3439 L
.96627 .35537 L
.97619 .37082 L
Mfstroke
P
P
p
p
.001 w
.02381 .37082 m
.04365 .24915 L
.05357 .1964 L
.05853 .17534 L
.06101 .16644 L
.06349 .15874 L
.06597 .15227 L
.06845 .1471 L
.06969 .14501 L
.07093 .14326 L
.07217 .14184 L
.07341 .14076 L
.07465 .14003 L
.07589 .13963 L
.07713 .13958 L
.07837 .13986 L
.07961 .14048 L
.08085 .14144 L
.08333 .14436 L
.08457 .14631 L
.08581 .14858 L
.08829 .15406 L
.09325 .16859 L
.09821 .18745 L
.10317 .21001 L
.12302 .32189 L
.13294 .37907 L
.14286 .42854 L
.14782 .44873 L
.15278 .46518 L
.15526 .47189 L
.15774 .47753 L
.16022 .48208 L
.1627 .48551 L
.16394 .4868 L
.16518 .48781 L
.16642 .48853 L
.16766 .48897 L
.1689 .48913 L
.17014 .489 L
.17138 .48859 L
.17262 .48791 L
.17386 .48694 L
.1751 .4857 L
.17758 .4824 L
.18006 .47804 L
.18254 .47265 L
.1875 .45897 L
.19246 .44173 L
.20238 .39849 L
Mistroke
.22222 .29256 L
.24206 .1916 L
.24702 .171 L
.25198 .15305 L
.25694 .13803 L
.2619 .12616 L
.26438 .12146 L
.26687 .11759 L
.26935 .11457 L
.27183 .11241 L
.27307 .11164 L
.27431 .11109 L
.27555 .11075 L
.27679 .11062 L
.27803 .11071 L
.27927 .111 L
.28051 .1115 L
.28175 .1122 L
.28423 .11422 L
.28671 .11704 L
.28919 .12063 L
.29167 .12498 L
.30159 .14935 L
.31151 .18332 L
.32143 .22447 L
.34127 .31795 L
.36111 .41011 L
.38095 .48578 L
.39087 .51451 L
.39583 .52634 L
.40079 .53645 L
.40575 .54485 L
.41071 .55156 L
.41319 .5543 L
.41567 .55663 L
.41815 .55857 L
.42063 .56011 L
.42312 .56129 L
.42436 .56173 L
.4256 .56209 L
.42684 .56235 L
.42808 .56253 L
.42932 .56262 L
.43056 .56263 L
.4318 .56255 L
.43304 .56239 L
.43428 .56215 L
.43552 .56184 L
.438 .56097 L
.44048 .5598 L
Mistroke
.44544 .55664 L
.4504 .55244 L
.46032 .54142 L
.48016 .51177 L
.5 .47711 L
.53968 .4106 L
.55952 .38369 L
.57937 .36212 L
.59921 .34563 L
.61905 .33354 L
.62897 .32888 L
.63889 .325 L
.64881 .3218 L
.65873 .31917 L
.67857 .31531 L
.68849 .31393 L
.69841 .31284 L
.70833 .31197 L
.71825 .31129 L
.72817 .31076 L
.7381 .31035 L
.74802 .31004 L
.75794 .3098 L
.76786 .30963 L
.77282 .30957 L
.77778 .30951 L
.78274 .30947 L
.7877 .30943 L
.79018 .30942 L
.79266 .30941 L
.79514 .3094 L
.79762 .30939 L
.79886 .30939 L
.8001 .30938 L
.80134 .30938 L
.80258 .30938 L
.80382 .30938 L
.80506 .30938 L
.8063 .30938 L
.80754 .30938 L
.80878 .30938 L
.81002 .30938 L
.8125 .30939 L
.81374 .30939 L
.81498 .3094 L
.81746 .3094 L
.82242 .30943 L
.82738 .30947 L
.83234 .30952 L
.8373 .30958 L
Mistroke
.84722 .30974 L
.85218 .30985 L
.85714 .30998 L
.8621 .31014 L
.86706 .31033 L
.87698 .31083 L
.88194 .31115 L
.8869 .31154 L
.89187 .312 L
.89683 .31255 L
.90179 .3132 L
.90675 .31399 L
.91171 .31492 L
.91667 .31605 L
.92659 .31901 L
.93155 .32095 L
.93651 .32328 L
.94147 .32608 L
.94643 .32946 L
.95139 .33354 L
.95635 .33846 L
.96131 .3444 L
.96627 .35158 L
.97619 .37082 L
Mfstroke
P
P
P
% End of Graphics
MathPictureEnd
end
showpage
%%EndDocument
 @endspecial 587 1429 a(Figure)g(15:)j(T)m(est)d(Problem)f(15,)g
Fl(y)q Fm(\()p Fl(x)p Fm(\))i(v)o(ersus)g Fl(x)p eop
%%Page: 16 16
16 15 bop 262 307 a Fn(T)l(est)15 b(Problem)e(16)h Fm(\(Linear\))g([2)o
(])262 357 y Fl(\017)279 342 y Fi(2)297 357 y Fl(y)318
342 y Fk(00)349 357 y Fm(+)c Fl(\031)416 342 y Fi(2)435
357 y Fl(y)q(=)p Fm(4)h(=)h(0,)60 b Fl(y)q Fm(\(0\))12
b(=)g(0)p Fl(;)17 b(y)q Fm(\(1\))c(=)f(sin\()p Fl(\031)q(=)p
Fm(2)p Fl(\017)p Fm(\))p Fl(;)17 b Fm(1)p Fl(=\017)d
Fm(o)q(dd.)262 407 y(Exact)g(solution)f(is)h Fl(y)q Fm(\()p
Fl(x)p Fm(\))e(=)g(sin\()p Fl(\031)q(x=)p Fm(2)p Fl(\017)p
Fm(\).)262 457 y(The)i(solution)f(oscillates)h(rapidly)f(for)g(small)f
Fl(\017)p Fm(.)439 1760 y @beginspecial 72 @llx 72 @lly
540 @urx 720 @ury 2834 @rwi @setspecial
%%BeginDocument: ../PLOTS/pr16.ps

/Mathdict 150 dict def
Mathdict begin
/Mlmarg		1.0 72 mul def
/Mrmarg		1.0 72 mul def
/Mbmarg		1.0 72 mul def
/Mtmarg		1.0 72 mul def
/Mwidth		8.5 72 mul def
/Mheight	11 72 mul def
/Mtransform	{  } bind def
/Mnodistort	true def
/Mfixwid	true	def
/Mfixdash	false def
/Mrot		0	def
/Mpstart {
MathPictureStart
} bind def
/Mpend {
MathPictureEnd
} bind def
/Mscale {
0 1 0 1
5 -1 roll
MathScale
} bind def
/ISOLatin1Encoding dup where
{ pop pop }
{
[
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft
/logicalnot /hyphen /registered /macron
/degree /plusminus /twosuperior /threesuperior
/acute /mu /paragraph /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright
/onequarter /onehalf /threequarters /questiondown
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis
] def
} ifelse
/MFontDict 50 dict def
/MStrCat
{
exch
dup length
2 index length add
string
dup 3 1 roll
copy
length
exch dup
4 2 roll exch
putinterval
} def
/MCreateEncoding
{
1 index
255 string cvs
(-) MStrCat
1 index MStrCat
cvn exch
(Encoding) MStrCat
cvn dup where
{
exch get
}
{
pop
StandardEncoding
} ifelse
3 1 roll
dup MFontDict exch known not
{
1 index findfont
dup length dict
begin
{1 index /FID ne
{def}
{pop pop}
ifelse} forall
/Encoding 3 index
def
currentdict
end
1 index exch definefont pop
MFontDict 1 index
null put
}
if
exch pop
exch pop
} def
/ISOLatin1 { (ISOLatin1) MCreateEncoding } def
/ISO8859 { (ISOLatin1) MCreateEncoding } def
/Mcopyfont {
dup
maxlength
dict
exch
{
1 index
/FID
eq
{
pop pop
}
{
2 index
3 1 roll
put
}
ifelse
}
forall
} def
/Plain	/Courier findfont Mcopyfont definefont pop
/Bold	/Courier-Bold findfont Mcopyfont definefont pop
/Italic /Courier-Oblique findfont Mcopyfont definefont pop
/MathPictureStart {
gsave
Mtransform
Mlmarg
Mbmarg
translate
Mwidth
Mlmarg Mrmarg add
sub
/Mwidth exch def
Mheight
Mbmarg Mtmarg add
sub
/Mheight exch def
/Mtmatrix
matrix currentmatrix
def
/Mgmatrix
matrix currentmatrix
def
} bind def
/MathPictureEnd {
grestore
} bind def
/MFill {
0 0 		moveto
Mwidth 0 	lineto
Mwidth Mheight 	lineto
0 Mheight 	lineto
fill
} bind def
/MPlotRegion {
3 index
Mwidth mul
2 index
Mheight mul
translate
exch sub
Mheight mul
/Mheight
exch def
exch sub
Mwidth mul
/Mwidth
exch def
} bind def
/MathSubStart {
Momatrix
Mgmatrix Mtmatrix
Mwidth Mheight
7 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
Mgmatrix setmatrix
9 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
2 copy translate
/Mtmatrix matrix currentmatrix def
3 -1 roll
exch sub
/Mheight exch def
sub
/Mwidth exch def
} bind def
/MathSubEnd {
/Mheight exch def
/Mwidth exch def
/Mtmatrix exch def
dup setmatrix
/Mgmatrix exch def
/Momatrix exch def
} bind def
/Mdot {
moveto
0 0 rlineto
stroke
} bind def
/Mtetra {
moveto
lineto
lineto
lineto
fill
} bind def
/Metetra {
moveto
lineto
lineto
lineto
closepath
gsave
fill
grestore
0 setgray
stroke
} bind def
/Mistroke {
flattenpath
0 0 0
{
4 2 roll
pop pop
}
{
4 -1 roll
2 index
sub dup mul
4 -1 roll
2 index
sub dup mul
add sqrt
4 -1 roll
add
3 1 roll
}
{
stop
}
{
stop
}
pathforall
pop pop
currentpoint
stroke
moveto
currentdash
3 -1 roll
add
setdash
} bind def
/Mfstroke {
stroke
currentdash
pop 0
setdash
} bind def
/Mrotsboxa {
gsave
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
grestore
Msboxa
3  -1 roll
/Mtmatrix
exch def
/Mrot
0 def
} bind def
/Msboxa {
newpath
5 -1 roll
Mvboxa
pop
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Msboxa1
5 -3 roll
Msboxa1
Mboxrot
[
7 -2 roll
2 copy
[
3 1 roll
10 -1 roll
9 -1 roll
]
6 1 roll
5 -2 roll
]
} bind def
/Msboxa1 {
sub
2 div
dup
2 index
1 add
mul
3 -1 roll
-1 add
3 -1 roll
mul
} bind def
/Mvboxa	{
Mfixwid
{
Mvboxa1
}
{
dup
Mwidthcal
0 exch
{
add
}
forall
exch
Mvboxa1
4 index
7 -1 roll
add
4 -1 roll
pop
3 1 roll
}
ifelse
} bind def
/Mvboxa1 {
gsave
newpath
[ true
3 -1 roll
{
Mbbox
5 -1 roll
{
0
5 1 roll
}
{
7 -1 roll
exch sub
(m) stringwidth pop
.3 mul
sub
7 1 roll
6 -1 roll
4 -1 roll
Mmin
3 -1 roll
5 index
add
5 -1 roll
4 -1 roll
Mmax
4 -1 roll
}
ifelse
false
}
forall
{ stop } if
counttomark
1 add
4 roll
]
grestore
} bind def
/Mbbox {
1 dict begin
0 0 moveto
/temp (T) def
{	gsave
currentpoint newpath moveto
temp 0 3 -1 roll put temp
false charpath flattenpath currentpoint
pathbbox
grestore moveto lineto moveto} forall
pathbbox
newpath
end
} bind def
/Mmin {
2 copy
gt
{ exch } if
pop
} bind def
/Mmax {
2 copy
lt
{ exch } if
pop
} bind def
/Mrotshowa {
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
Mgmatrix setmatrix
Mshowa
/Mtmatrix
exch def
/Mrot 0 def
} bind def
/Mshowa {
4 -2 roll
moveto
2 index
Mtmatrix setmatrix
Mvboxa
7 1 roll
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Mshowa1
4 1 roll
Mshowa1
rmoveto
currentpoint
Mfixwid
{
Mshowax
}
{
Mshoway
}
ifelse
pop pop pop pop
Mgmatrix setmatrix
} bind def
/Mshowax {	
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
Mfixdash
{
Mfixdashp		
}
if
show
} for
} bind def
/Mfixdashp {
dup
length
1
gt
1 index
true exch
{
45
eq
and
} forall
and
{
gsave
(--)		
stringwidth pop
(-)
stringwidth pop
sub
2 div
0 rmoveto
dup
length
1 sub
{
(-)
show
}
repeat
grestore
}
if
} bind def	
/Mshoway {
3 index
Mwidthcal
5 1 roll
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
[
6 index
aload
length
2 add
-1 roll
{
pop
Strform
stringwidth
pop
neg 
exch
add
0 rmoveto
}
exch
kshow
cleartomark
} for
pop	
} bind def
/Mwidthcal {
[
exch
{
Mwidthcal1
}
forall
]
[
exch
dup
Maxlen
-1 add
0 1
3 -1 roll
{
[
exch
2 index
{		 
1 index	
Mget
exch
}
forall		
pop
Maxget
exch
}
for
pop
]
Mreva
} bind def
/Mreva	{
[
exch
aload
length
-1 1
{1 roll}
for
]
} bind def
/Mget	{
1 index
length
-1 add
1 index
ge
{
get
}
{
pop pop
0
}
ifelse
} bind def
/Maxlen	{
[
exch
{
length
}
forall
Maxget
} bind def
/Maxget	{
counttomark
-1 add
1 1
3 -1 roll
{
pop
Mmax
}
for
exch
pop
} bind def
/Mwidthcal1 {
[
exch
{
Strform
stringwidth
pop
}
forall
]
} bind def
/Strform {
/tem (x) def
tem 0
3 -1 roll
put
tem
} bind def
/Mshowa1 {
2 copy
add
4 1 roll
sub
mul
sub
-2 div
} bind def
/MathScale {
Mwidth
Mheight
Mlp
translate
scale
/yscale exch def
/ybias exch def
/xscale exch def
/xbias exch def
/Momatrix
xscale yscale matrix scale
xbias ybias matrix translate
matrix concatmatrix def
/Mgmatrix
matrix currentmatrix
def
} bind def
/Mlp {
3 copy
Mlpfirst
{
Mnodistort
{
Mmin
dup
} if
4 index
2 index
2 index
Mlprun
11 index
11 -1 roll
10 -4 roll
Mlp1
8 index
9 -5 roll
Mlp1
4 -1 roll
and
{ exit } if
3 -1 roll
pop pop
} loop
exch
3 1 roll
7 -3 roll
pop pop pop
} bind def
/Mlpfirst {
3 -1 roll
dup length
2 copy
-2 add
get
aload
pop pop pop
4 -2 roll
-1 add
get
aload
pop pop pop
6 -1 roll
3 -1 roll
5 -1 roll
sub
div
4 1 roll
exch sub
div
} bind def
/Mlprun {
2 copy
4 index
0 get
dup
4 1 roll
Mlprun1
3 copy
8 -2 roll
9 -1 roll
{
3 copy
Mlprun1
3 copy
11 -3 roll
/gt Mlpminmax
8 3 roll
11 -3 roll
/lt Mlpminmax
8 3 roll
} forall
pop pop pop pop
3 1 roll
pop pop
aload pop
5 -1 roll
aload pop
exch
6 -1 roll
Mlprun2
8 2 roll
4 -1 roll
Mlprun2
6 2 roll
3 -1 roll
Mlprun2
4 2 roll
exch
Mlprun2
6 2 roll
} bind def
/Mlprun1 {
aload pop
exch
6 -1 roll
5 -1 roll
mul add
4 -2 roll
mul
3 -1 roll
add
} bind def
/Mlprun2 {
2 copy
add 2 div
3 1 roll
exch sub
} bind def
/Mlpminmax {
cvx
2 index
6 index
2 index
exec
{
7 -3 roll
4 -1 roll
} if
1 index
5 index
3 -1 roll
exec
{
4 1 roll
pop
5 -1 roll
aload
pop pop
4 -1 roll
aload pop
[
8 -2 roll
pop
5 -2 roll
pop
6 -2 roll
pop
5 -1 roll
]
4 1 roll
pop
}
{
pop pop pop
} ifelse
} bind def
/Mlp1 {
5 index
3 index	sub
5 index
2 index mul
1 index
le
1 index
0 le
or
dup
not
{
1 index
3 index	div
.99999 mul
8 -1 roll
pop
7 1 roll
}
if
8 -1 roll
2 div
7 -2 roll
pop sub
5 index
6 -3 roll
pop pop
mul sub
exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
outflag
1
eq
{
/outflag 0 def
/intop 0 def
/inrht 0 def
} if		
5 index
gsave
Mtmatrix setmatrix
Mvboxa pop
grestore
3 -1 roll
pop
dup
intop
gt
{
/intop
exch def
}
{ pop }
ifelse
dup
inrht
gt
{
/inrht
exch def
}
{ pop }
ifelse
pop
/inflag
1 def
} bind def
/Mouter {
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
inflag
1 eq
{
dup
0 lt
{
dup
intop
mul
neg
/yadtop
exch def
} if
dup
0 gt
{
dup
intop
mul
/yadbot
exch def
}
if
pop
dup
0 lt
{
dup
inrht
mul
neg
/xadrht
exch def
} if
dup
0 gt
{
dup
inrht
mul
/xadlft
exch def
} if
pop
/outflag 1 def
}
{ pop pop}
ifelse
/inflag 0 def
/inrht 0 def
/intop 0 def
} bind def	
/Mboxout {
outflag
1
eq
{
4 -1
roll
xadlft
leadjust
add
sub
4 1 roll
3 -1
roll
yadbot
leadjust
add
sub
3 1
roll
exch
xadrht
leadjust
add
add
exch
yadtop
leadjust
add
add
/outflag 0 def
/xadlft 0 def
/yadbot 0 def
/xadrht 0 def
/yadtop 0 def
} if
} bind def
/leadjust {
(m) stringwidth pop
.5 mul
} bind def
/Mrotcheck {
dup
90
eq
{
yadbot
/yadbot
xadrht
def	
/xadrht
yadtop
def
/yadtop
xadlft
def
/xadlft
exch
def
}
if
dup
cos
1 index
sin
Checkaux
dup
cos
1 index
sin neg
exch
Checkaux
3 1 roll
pop pop
} bind def
/Checkaux {
4 index
exch
4 index
mul
3 1 roll
mul add
4 1 roll
} bind def
/Mboxrot {
Mrot
90 eq
{
brotaux
4 2
roll
}
if
Mrot
180 eq
{
4 2
roll
brotaux
4 2
roll
brotaux
}	
if
Mrot
270 eq
{
4 2
roll
brotaux
}
if
} bind def
/brotaux {
neg
exch
neg
} bind def
/Mabsproc {
0
matrix defaultmatrix
dtransform idtransform
dup mul exch
dup mul
add sqrt
} bind def
/Mabswid {
Mabsproc
setlinewidth	
} bind def
/Mabsdash {
exch
[
exch
{
Mabsproc
}
forall
]
exch
setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop}
repeat
} bind def
} ifelse
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/setcmykcolor where
{ pop}
{ /setcmykcolor {
4 1
roll
[
4 1 
roll
]
{
1 index
sub
1
sub neg
dup
0
lt
{
pop
0
}
if
dup
1
gt
{
pop
1
}
if
exch
} forall
pop
setrgbcolor
} bind def
} ifelse
/Mcharproc
{
currentfile
(x)
readhexstring
pop
0 get
exch
div
} bind def
/Mshadeproc
{
dup
3 1
roll
{
dup
Mcharproc
3 1
roll
} repeat
1 eq
{
setgray
}
{
3 eq
{
setrgbcolor
}
{
setcmykcolor
} ifelse
} ifelse
} bind def
/Mrectproc
{
3 index
2 index
moveto
2 index
3 -1
roll
lineto
dup
3 1
roll
lineto
lineto
fill
} bind def
/Mcolorimage
{
7 1
roll
pop
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
9 index
Mshadeproc
Mrectproc
} for
pop
} for
pop pop pop pop
} bind def
/Mimage
{
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
Mcharproc
setgray
Mrectproc
} for
pop
} for
pop pop pop
} bind def

MathPictureStart
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.5 0.47619 0.309017 0.294302 [
[(-1)] .02381 0 0 2 0 Minner Mrotsboxa
[(-0.5)] .2619 0 0 2 0 Minner Mrotsboxa
[(0)] .5 0 0 2 0 Minner Mrotsboxa
[(0.5)] .7381 0 0 2 0 Minner Mrotsboxa
[(1)] .97619 0 0 2 0 Minner Mrotsboxa
[()] .5 0 0 2 0 0 -1 Mouter Mrotsboxa
[(-1)] -0.0125 .01472 1 0 0 Minner Mrotsboxa
[(-0.5)] -0.0125 .16187 1 0 0 Minner Mrotsboxa
[(0)] -0.0125 .30902 1 0 0 Minner Mrotsboxa
[(0.5)] -0.0125 .45617 1 0 0 Minner Mrotsboxa
[(1)] -0.0125 .60332 1 0 0 Minner Mrotsboxa
[(Epsilon = 0.11)] .5 .61803 0 -4 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 .61903 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 g
p
p
.002 w
.02381 0 m
.02381 .00625 L
s
P
[(-1)] .02381 0 0 2 0 Minner Mrotshowa
p
.002 w
.2619 0 m
.2619 .00625 L
s
P
[(-0.5)] .2619 0 0 2 0 Minner Mrotshowa
p
.002 w
.5 0 m
.5 .00625 L
s
P
[(0)] .5 0 0 2 0 Minner Mrotshowa
p
.002 w
.7381 0 m
.7381 .00625 L
s
P
[(0.5)] .7381 0 0 2 0 Minner Mrotshowa
p
.002 w
.97619 0 m
.97619 .00625 L
s
P
[(1)] .97619 0 0 2 0 Minner Mrotshowa
p
.001 w
.07143 0 m
.07143 .00375 L
s
P
p
.001 w
.11905 0 m
.11905 .00375 L
s
P
p
.001 w
.16667 0 m
.16667 .00375 L
s
P
p
.001 w
.21429 0 m
.21429 .00375 L
s
P
p
.001 w
.30952 0 m
.30952 .00375 L
s
P
p
.001 w
.35714 0 m
.35714 .00375 L
s
P
p
.001 w
.40476 0 m
.40476 .00375 L
s
P
p
.001 w
.45238 0 m
.45238 .00375 L
s
P
p
.001 w
.54762 0 m
.54762 .00375 L
s
P
p
.001 w
.59524 0 m
.59524 .00375 L
s
P
p
.001 w
.64286 0 m
.64286 .00375 L
s
P
p
.001 w
.69048 0 m
.69048 .00375 L
s
P
p
.001 w
.78571 0 m
.78571 .00375 L
s
P
p
.001 w
.83333 0 m
.83333 .00375 L
s
P
p
.001 w
.88095 0 m
.88095 .00375 L
s
P
p
.001 w
.92857 0 m
.92857 .00375 L
s
P
[()] .5 0 0 2 0 0 -1 Mouter Mrotshowa
p
.002 w
0 0 m
1 0 L
s
P
p
.002 w
0 .01472 m
.00625 .01472 L
s
P
[(-1)] -0.0125 .01472 1 0 0 Minner Mrotshowa
p
.002 w
0 .16187 m
.00625 .16187 L
s
P
[(-0.5)] -0.0125 .16187 1 0 0 Minner Mrotshowa
p
.002 w
0 .30902 m
.00625 .30902 L
s
P
[(0)] -0.0125 .30902 1 0 0 Minner Mrotshowa
p
.002 w
0 .45617 m
.00625 .45617 L
s
P
[(0.5)] -0.0125 .45617 1 0 0 Minner Mrotshowa
p
.002 w
0 .60332 m
.00625 .60332 L
s
P
[(1)] -0.0125 .60332 1 0 0 Minner Mrotshowa
p
.001 w
0 .04415 m
.00375 .04415 L
s
P
p
.001 w
0 .07358 m
.00375 .07358 L
s
P
p
.001 w
0 .10301 m
.00375 .10301 L
s
P
p
.001 w
0 .13244 m
.00375 .13244 L
s
P
p
.001 w
0 .1913 m
.00375 .1913 L
s
P
p
.001 w
0 .22073 m
.00375 .22073 L
s
P
p
.001 w
0 .25016 m
.00375 .25016 L
s
P
p
.001 w
0 .27959 m
.00375 .27959 L
s
P
p
.001 w
0 .33845 m
.00375 .33845 L
s
P
p
.001 w
0 .36788 m
.00375 .36788 L
s
P
p
.001 w
0 .39731 m
.00375 .39731 L
s
P
p
.001 w
0 .42674 m
.00375 .42674 L
s
P
p
.001 w
0 .4856 m
.00375 .4856 L
s
P
p
.001 w
0 .51503 m
.00375 .51503 L
s
P
p
.001 w
0 .54446 m
.00375 .54446 L
s
P
p
.001 w
0 .57389 m
.00375 .57389 L
s
P
p
.002 w
0 0 m
0 .61803 L
s
P
P
p
p
.002 w
.02381 .61178 m
.02381 .61803 L
s
P
p
.002 w
.2619 .61178 m
.2619 .61803 L
s
P
p
.002 w
.5 .61178 m
.5 .61803 L
s
P
p
.002 w
.7381 .61178 m
.7381 .61803 L
s
P
p
.002 w
.97619 .61178 m
.97619 .61803 L
s
P
p
.001 w
.07143 .61428 m
.07143 .61803 L
s
P
p
.001 w
.11905 .61428 m
.11905 .61803 L
s
P
p
.001 w
.16667 .61428 m
.16667 .61803 L
s
P
p
.001 w
.21429 .61428 m
.21429 .61803 L
s
P
p
.001 w
.30952 .61428 m
.30952 .61803 L
s
P
p
.001 w
.35714 .61428 m
.35714 .61803 L
s
P
p
.001 w
.40476 .61428 m
.40476 .61803 L
s
P
p
.001 w
.45238 .61428 m
.45238 .61803 L
s
P
p
.001 w
.54762 .61428 m
.54762 .61803 L
s
P
p
.001 w
.59524 .61428 m
.59524 .61803 L
s
P
p
.001 w
.64286 .61428 m
.64286 .61803 L
s
P
p
.001 w
.69048 .61428 m
.69048 .61803 L
s
P
p
.001 w
.78571 .61428 m
.78571 .61803 L
s
P
p
.001 w
.83333 .61428 m
.83333 .61803 L
s
P
p
.001 w
.88095 .61428 m
.88095 .61803 L
s
P
p
.001 w
.92857 .61428 m
.92857 .61803 L
s
P
[(Epsilon = 0.11)] .5 .61803 0 -4 Mshowa
p
.002 w
0 .61803 m
1 .61803 L
s
P
p
.002 w
.99375 .01472 m
1 .01472 L
s
P
p
.002 w
.99375 .16187 m
1 .16187 L
s
P
p
.002 w
.99375 .30902 m
1 .30902 L
s
P
p
.002 w
.99375 .45617 m
1 .45617 L
s
P
p
.002 w
.99375 .60332 m
1 .60332 L
s
P
p
.001 w
.99625 .04415 m
1 .04415 L
s
P
p
.001 w
.99625 .07358 m
1 .07358 L
s
P
p
.001 w
.99625 .10301 m
1 .10301 L
s
P
p
.001 w
.99625 .13244 m
1 .13244 L
s
P
p
.001 w
.99625 .1913 m
1 .1913 L
s
P
p
.001 w
.99625 .22073 m
1 .22073 L
s
P
p
.001 w
.99625 .25016 m
1 .25016 L
s
P
p
.001 w
.99625 .27959 m
1 .27959 L
s
P
p
.001 w
.99625 .33845 m
1 .33845 L
s
P
p
.001 w
.99625 .36788 m
1 .36788 L
s
P
p
.001 w
.99625 .39731 m
1 .39731 L
s
P
p
.001 w
.99625 .42674 m
1 .42674 L
s
P
p
.001 w
.99625 .4856 m
1 .4856 L
s
P
p
.001 w
.99625 .51503 m
1 .51503 L
s
P
p
.001 w
.99625 .54446 m
1 .54446 L
s
P
p
.001 w
.99625 .57389 m
1 .57389 L
s
P
p
.002 w
1 0 m
1 .61803 L
s
P
P
p
P
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
p
p
.001 w
.02381 .01771 m
.02505 .01635 L
.02629 .0154 L
.02753 .01486 L
.02877 .01472 L
.03001 .01499 L
.03125 .01566 L
.03249 .01674 L
.03373 .01823 L
.03621 .0224 L
.03869 .02816 L
.04117 .03547 L
.04365 .0443 L
.05357 .09362 L
.06349 .16187 L
.08333 .33001 L
.09325 .41514 L
.10317 .49094 L
.10813 .52322 L
.1131 .55076 L
.11806 .57297 L
.12054 .58191 L
.12302 .58934 L
.1255 .59523 L
.12674 .59758 L
.12798 .59953 L
.12922 .60108 L
.13046 .60222 L
.1317 .60296 L
.13294 .6033 L
.13418 .60322 L
.13542 .60274 L
.13666 .60186 L
.1379 .60057 L
.14038 .59678 L
.14286 .5914 L
.14534 .58446 L
.14782 .57599 L
.15278 .55469 L
.1627 .4964 L
.18254 .33699 L
.20238 .16797 L
.2123 .09845 L
.21726 .07031 L
.22222 .04743 L
.22718 .03033 L
.22966 .02407 L
.2309 .02153 L
.23214 .01939 L
.23338 .01765 L
Mistroke
.23462 .01631 L
.23586 .01537 L
.2371 .01485 L
.23834 .01472 L
.23958 .01501 L
.24082 .0157 L
.24206 .0168 L
.2433 .0183 L
.24454 .0202 L
.24702 .0252 L
.2495 .03177 L
.25198 .03987 L
.25694 .06049 L
.2619 .0866 L
.28175 .23285 L
.30159 .40527 L
.31151 .48257 L
.32143 .54462 L
.32639 .56815 L
.32887 .5778 L
.33135 .58597 L
.33383 .5926 L
.33631 .59766 L
.33755 .5996 L
.33879 .60113 L
.34003 .60226 L
.34127 .60299 L
.34251 .6033 L
.34375 .60321 L
.34499 .60272 L
.34623 .60181 L
.34747 .60051 L
.34871 .5988 L
.35119 .59418 L
.35367 .58798 L
.35615 .58024 L
.36111 .56032 L
.37103 .50438 L
.38095 .43127 L
.40079 .26021 L
.41071 .17728 L
.42063 .10593 L
.4256 .0766 L
.43056 .05241 L
.43304 .04241 L
.43552 .03389 L
.438 .02688 L
.44048 .02144 L
.44172 .01931 L
.44296 .01759 L
Mistroke
.4442 .01626 L
.44544 .01535 L
.44668 .01483 L
.44792 .01473 L
.44916 .01503 L
.4504 .01574 L
.45164 .01685 L
.45288 .01837 L
.45536 .0226 L
.45784 .02842 L
.46032 .0358 L
.46528 .05502 L
.47024 .07986 L
.48016 .14406 L
.5 .30902 L
.50992 .39529 L
.51984 .47398 L
.5248 .50827 L
.52976 .53817 L
.53472 .56301 L
.5372 .57335 L
.53968 .58224 L
.54216 .58961 L
.54464 .59543 L
.54588 .59775 L
.54712 .59967 L
.54836 .60119 L
.5496 .6023 L
.55084 .60301 L
.55208 .60331 L
.55332 .6032 L
.55456 .60269 L
.5558 .60177 L
.55704 .60045 L
.55828 .59872 L
.55952 .59659 L
.56448 .58415 L
.56696 .57562 L
.56944 .56562 L
.57937 .51211 L
.58929 .44075 L
.59921 .35782 L
.61905 .18676 L
.62897 .11366 L
.63393 .08319 L
.63889 .05772 L
.64385 .03779 L
.64633 .03005 L
.64881 .02386 L
.65129 .01924 L
Mistroke
.65253 .01753 L
.65377 .01622 L
.65501 .01532 L
.65625 .01482 L
.65749 .01473 L
.65873 .01505 L
.65997 .01577 L
.66121 .0169 L
.66369 .02037 L
.66493 .0227 L
.66617 .02543 L
.66865 .03207 L
.67361 .04988 L
.67857 .07342 L
.68849 .13546 L
.69841 .21276 L
.71825 .38519 L
.72817 .46517 L
.7381 .53144 L
.74306 .55754 L
.74802 .57816 L
.7505 .58626 L
.75298 .59283 L
.75422 .59553 L
.75546 .59783 L
.7567 .59974 L
.75794 .60124 L
.75918 .60233 L
.76042 .60303 L
.76166 .60331 L
.7629 .60319 L
.76414 .60266 L
.76538 .60172 L
.76786 .59864 L
.7691 .5965 L
.77034 .59396 L
.77282 .5877 L
.77778 .5706 L
.78274 .54773 L
.7877 .51958 L
.79762 .45006 L
.81746 .28104 L
.82738 .19639 L
.8373 .12164 L
.84722 .06335 L
.85218 .04204 L
.85466 .03358 L
.85714 .02664 L
.85962 .02126 L
.86086 .01916 L
Mistroke
.8621 .01747 L
.86334 .01618 L
.86458 .01529 L
.86582 .01481 L
.86706 .01474 L
.8683 .01507 L
.86954 .01581 L
.87078 .01696 L
.87202 .0185 L
.8745 .02281 L
.87698 .02869 L
.87946 .03612 L
.88194 .04507 L
.8869 .06727 L
.89683 .12709 L
.91667 .28802 L
.92659 .37499 L
.93651 .45617 L
.94643 .52441 L
.95139 .55176 L
.95635 .57374 L
.95883 .58256 L
.96131 .58987 L
.96379 .59563 L
.96503 .59792 L
.96627 .5998 L
.96751 .60129 L
.96875 .60237 L
.96999 .60305 L
.97123 .60331 L
.97247 .60318 L
.97371 .60263 L
.97495 .60168 L
.97619 .60032 L
Mfstroke
P
P
% End of Graphics
MathPictureEnd
end
showpage
%%EndDocument
 @endspecial 587 1379 a(Figure)i(16:)j(T)m(est)d(Problem)f(16,)g
Fl(y)q Fm(\()p Fl(x)p Fm(\))i(v)o(ersus)g Fl(x)p eop
%%Page: 17 17
17 16 bop 262 307 a Fn(T)l(est)15 b(Problem)e(17)h Fm(\(Linear\))g([7)o
(])262 357 y Fl(y)283 342 y Fk(00)316 357 y Fm(=)e Fj(\000)p
Fm(3)p Fl(\017y)q(=)p Fm(\()p Fl(\017)e Fm(+)f Fl(x)580
342 y Fi(2)598 357 y Fm(\))614 342 y Fi(2)633 357 y Fm(,)60
b Fl(y)q Fm(\(0)p Fl(:)p Fm(1\))11 b(=)h Fj(\000)p Fl(y)q
Fm(\()p Fj(\000)p Fm(0)p Fl(:)p Fm(1\))h(=)e(0)p Fl(:)p
Fm(1)p Fl(=)1169 324 y Fj(p)p 1203 324 142 2 v 1203 357
a Fl(\017)e Fm(+)g(0)p Fl(:)p Fm(01)o Fl(:)262 407 y
Fm(Exact)14 b(solution)f(is)h Fl(y)q Fm(\()p Fl(x)p Fm(\))e(=)g
Fl(x=)758 372 y Fj(p)p 792 372 110 2 v 792 407 a Fl(\017)d
Fm(+)h Fl(x)884 395 y Fi(2)902 407 y Fm(.)262 457 y(The)k(solution)f
(has)h(an)g(in)o(terior)f(la)o(y)o(er)h(of)f(width)h
Fl(O)q Fm(\()1097 427 y Fj(p)p 1131 427 17 2 v 1131 457
a Fl(\017)p Fm(\))g(at)g Fl(x)d Fm(=)h(0.)439 1762 y
@beginspecial 72 @llx 72 @lly 540 @urx 720 @ury 2834
@rwi @setspecial
%%BeginDocument: ../PLOTS/pr17.ps

/Mathdict 150 dict def
Mathdict begin
/Mlmarg		1.0 72 mul def
/Mrmarg		1.0 72 mul def
/Mbmarg		1.0 72 mul def
/Mtmarg		1.0 72 mul def
/Mwidth		8.5 72 mul def
/Mheight	11 72 mul def
/Mtransform	{  } bind def
/Mnodistort	true def
/Mfixwid	true	def
/Mfixdash	false def
/Mrot		0	def
/Mpstart {
MathPictureStart
} bind def
/Mpend {
MathPictureEnd
} bind def
/Mscale {
0 1 0 1
5 -1 roll
MathScale
} bind def
/ISOLatin1Encoding dup where
{ pop pop }
{
[
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft
/logicalnot /hyphen /registered /macron
/degree /plusminus /twosuperior /threesuperior
/acute /mu /paragraph /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright
/onequarter /onehalf /threequarters /questiondown
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis
] def
} ifelse
/MFontDict 50 dict def
/MStrCat
{
exch
dup length
2 index length add
string
dup 3 1 roll
copy
length
exch dup
4 2 roll exch
putinterval
} def
/MCreateEncoding
{
1 index
255 string cvs
(-) MStrCat
1 index MStrCat
cvn exch
(Encoding) MStrCat
cvn dup where
{
exch get
}
{
pop
StandardEncoding
} ifelse
3 1 roll
dup MFontDict exch known not
{
1 index findfont
dup length dict
begin
{1 index /FID ne
{def}
{pop pop}
ifelse} forall
/Encoding 3 index
def
currentdict
end
1 index exch definefont pop
MFontDict 1 index
null put
}
if
exch pop
exch pop
} def
/ISOLatin1 { (ISOLatin1) MCreateEncoding } def
/ISO8859 { (ISOLatin1) MCreateEncoding } def
/Mcopyfont {
dup
maxlength
dict
exch
{
1 index
/FID
eq
{
pop pop
}
{
2 index
3 1 roll
put
}
ifelse
}
forall
} def
/Plain	/Courier findfont Mcopyfont definefont pop
/Bold	/Courier-Bold findfont Mcopyfont definefont pop
/Italic /Courier-Oblique findfont Mcopyfont definefont pop
/MathPictureStart {
gsave
Mtransform
Mlmarg
Mbmarg
translate
Mwidth
Mlmarg Mrmarg add
sub
/Mwidth exch def
Mheight
Mbmarg Mtmarg add
sub
/Mheight exch def
/Mtmatrix
matrix currentmatrix
def
/Mgmatrix
matrix currentmatrix
def
} bind def
/MathPictureEnd {
grestore
} bind def
/MFill {
0 0 		moveto
Mwidth 0 	lineto
Mwidth Mheight 	lineto
0 Mheight 	lineto
fill
} bind def
/MPlotRegion {
3 index
Mwidth mul
2 index
Mheight mul
translate
exch sub
Mheight mul
/Mheight
exch def
exch sub
Mwidth mul
/Mwidth
exch def
} bind def
/MathSubStart {
Momatrix
Mgmatrix Mtmatrix
Mwidth Mheight
7 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
Mgmatrix setmatrix
9 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
2 copy translate
/Mtmatrix matrix currentmatrix def
3 -1 roll
exch sub
/Mheight exch def
sub
/Mwidth exch def
} bind def
/MathSubEnd {
/Mheight exch def
/Mwidth exch def
/Mtmatrix exch def
dup setmatrix
/Mgmatrix exch def
/Momatrix exch def
} bind def
/Mdot {
moveto
0 0 rlineto
stroke
} bind def
/Mtetra {
moveto
lineto
lineto
lineto
fill
} bind def
/Metetra {
moveto
lineto
lineto
lineto
closepath
gsave
fill
grestore
0 setgray
stroke
} bind def
/Mistroke {
flattenpath
0 0 0
{
4 2 roll
pop pop
}
{
4 -1 roll
2 index
sub dup mul
4 -1 roll
2 index
sub dup mul
add sqrt
4 -1 roll
add
3 1 roll
}
{
stop
}
{
stop
}
pathforall
pop pop
currentpoint
stroke
moveto
currentdash
3 -1 roll
add
setdash
} bind def
/Mfstroke {
stroke
currentdash
pop 0
setdash
} bind def
/Mrotsboxa {
gsave
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
grestore
Msboxa
3  -1 roll
/Mtmatrix
exch def
/Mrot
0 def
} bind def
/Msboxa {
newpath
5 -1 roll
Mvboxa
pop
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Msboxa1
5 -3 roll
Msboxa1
Mboxrot
[
7 -2 roll
2 copy
[
3 1 roll
10 -1 roll
9 -1 roll
]
6 1 roll
5 -2 roll
]
} bind def
/Msboxa1 {
sub
2 div
dup
2 index
1 add
mul
3 -1 roll
-1 add
3 -1 roll
mul
} bind def
/Mvboxa	{
Mfixwid
{
Mvboxa1
}
{
dup
Mwidthcal
0 exch
{
add
}
forall
exch
Mvboxa1
4 index
7 -1 roll
add
4 -1 roll
pop
3 1 roll
}
ifelse
} bind def
/Mvboxa1 {
gsave
newpath
[ true
3 -1 roll
{
Mbbox
5 -1 roll
{
0
5 1 roll
}
{
7 -1 roll
exch sub
(m) stringwidth pop
.3 mul
sub
7 1 roll
6 -1 roll
4 -1 roll
Mmin
3 -1 roll
5 index
add
5 -1 roll
4 -1 roll
Mmax
4 -1 roll
}
ifelse
false
}
forall
{ stop } if
counttomark
1 add
4 roll
]
grestore
} bind def
/Mbbox {
1 dict begin
0 0 moveto
/temp (T) def
{	gsave
currentpoint newpath moveto
temp 0 3 -1 roll put temp
false charpath flattenpath currentpoint
pathbbox
grestore moveto lineto moveto} forall
pathbbox
newpath
end
} bind def
/Mmin {
2 copy
gt
{ exch } if
pop
} bind def
/Mmax {
2 copy
lt
{ exch } if
pop
} bind def
/Mrotshowa {
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
Mgmatrix setmatrix
Mshowa
/Mtmatrix
exch def
/Mrot 0 def
} bind def
/Mshowa {
4 -2 roll
moveto
2 index
Mtmatrix setmatrix
Mvboxa
7 1 roll
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Mshowa1
4 1 roll
Mshowa1
rmoveto
currentpoint
Mfixwid
{
Mshowax
}
{
Mshoway
}
ifelse
pop pop pop pop
Mgmatrix setmatrix
} bind def
/Mshowax {	
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
Mfixdash
{
Mfixdashp		
}
if
show
} for
} bind def
/Mfixdashp {
dup
length
1
gt
1 index
true exch
{
45
eq
and
} forall
and
{
gsave
(--)		
stringwidth pop
(-)
stringwidth pop
sub
2 div
0 rmoveto
dup
length
1 sub
{
(-)
show
}
repeat
grestore
}
if
} bind def	
/Mshoway {
3 index
Mwidthcal
5 1 roll
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
[
6 index
aload
length
2 add
-1 roll
{
pop
Strform
stringwidth
pop
neg 
exch
add
0 rmoveto
}
exch
kshow
cleartomark
} for
pop	
} bind def
/Mwidthcal {
[
exch
{
Mwidthcal1
}
forall
]
[
exch
dup
Maxlen
-1 add
0 1
3 -1 roll
{
[
exch
2 index
{		 
1 index	
Mget
exch
}
forall		
pop
Maxget
exch
}
for
pop
]
Mreva
} bind def
/Mreva	{
[
exch
aload
length
-1 1
{1 roll}
for
]
} bind def
/Mget	{
1 index
length
-1 add
1 index
ge
{
get
}
{
pop pop
0
}
ifelse
} bind def
/Maxlen	{
[
exch
{
length
}
forall
Maxget
} bind def
/Maxget	{
counttomark
-1 add
1 1
3 -1 roll
{
pop
Mmax
}
for
exch
pop
} bind def
/Mwidthcal1 {
[
exch
{
Strform
stringwidth
pop
}
forall
]
} bind def
/Strform {
/tem (x) def
tem 0
3 -1 roll
put
tem
} bind def
/Mshowa1 {
2 copy
add
4 1 roll
sub
mul
sub
-2 div
} bind def
/MathScale {
Mwidth
Mheight
Mlp
translate
scale
/yscale exch def
/ybias exch def
/xscale exch def
/xbias exch def
/Momatrix
xscale yscale matrix scale
xbias ybias matrix translate
matrix concatmatrix def
/Mgmatrix
matrix currentmatrix
def
} bind def
/Mlp {
3 copy
Mlpfirst
{
Mnodistort
{
Mmin
dup
} if
4 index
2 index
2 index
Mlprun
11 index
11 -1 roll
10 -4 roll
Mlp1
8 index
9 -5 roll
Mlp1
4 -1 roll
and
{ exit } if
3 -1 roll
pop pop
} loop
exch
3 1 roll
7 -3 roll
pop pop pop
} bind def
/Mlpfirst {
3 -1 roll
dup length
2 copy
-2 add
get
aload
pop pop pop
4 -2 roll
-1 add
get
aload
pop pop pop
6 -1 roll
3 -1 roll
5 -1 roll
sub
div
4 1 roll
exch sub
div
} bind def
/Mlprun {
2 copy
4 index
0 get
dup
4 1 roll
Mlprun1
3 copy
8 -2 roll
9 -1 roll
{
3 copy
Mlprun1
3 copy
11 -3 roll
/gt Mlpminmax
8 3 roll
11 -3 roll
/lt Mlpminmax
8 3 roll
} forall
pop pop pop pop
3 1 roll
pop pop
aload pop
5 -1 roll
aload pop
exch
6 -1 roll
Mlprun2
8 2 roll
4 -1 roll
Mlprun2
6 2 roll
3 -1 roll
Mlprun2
4 2 roll
exch
Mlprun2
6 2 roll
} bind def
/Mlprun1 {
aload pop
exch
6 -1 roll
5 -1 roll
mul add
4 -2 roll
mul
3 -1 roll
add
} bind def
/Mlprun2 {
2 copy
add 2 div
3 1 roll
exch sub
} bind def
/Mlpminmax {
cvx
2 index
6 index
2 index
exec
{
7 -3 roll
4 -1 roll
} if
1 index
5 index
3 -1 roll
exec
{
4 1 roll
pop
5 -1 roll
aload
pop pop
4 -1 roll
aload pop
[
8 -2 roll
pop
5 -2 roll
pop
6 -2 roll
pop
5 -1 roll
]
4 1 roll
pop
}
{
pop pop pop
} ifelse
} bind def
/Mlp1 {
5 index
3 index	sub
5 index
2 index mul
1 index
le
1 index
0 le
or
dup
not
{
1 index
3 index	div
.99999 mul
8 -1 roll
pop
7 1 roll
}
if
8 -1 roll
2 div
7 -2 roll
pop sub
5 index
6 -3 roll
pop pop
mul sub
exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
outflag
1
eq
{
/outflag 0 def
/intop 0 def
/inrht 0 def
} if		
5 index
gsave
Mtmatrix setmatrix
Mvboxa pop
grestore
3 -1 roll
pop
dup
intop
gt
{
/intop
exch def
}
{ pop }
ifelse
dup
inrht
gt
{
/inrht
exch def
}
{ pop }
ifelse
pop
/inflag
1 def
} bind def
/Mouter {
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
inflag
1 eq
{
dup
0 lt
{
dup
intop
mul
neg
/yadtop
exch def
} if
dup
0 gt
{
dup
intop
mul
/yadbot
exch def
}
if
pop
dup
0 lt
{
dup
inrht
mul
neg
/xadrht
exch def
} if
dup
0 gt
{
dup
inrht
mul
/xadlft
exch def
} if
pop
/outflag 1 def
}
{ pop pop}
ifelse
/inflag 0 def
/inrht 0 def
/intop 0 def
} bind def	
/Mboxout {
outflag
1
eq
{
4 -1
roll
xadlft
leadjust
add
sub
4 1 roll
3 -1
roll
yadbot
leadjust
add
sub
3 1
roll
exch
xadrht
leadjust
add
add
exch
yadtop
leadjust
add
add
/outflag 0 def
/xadlft 0 def
/yadbot 0 def
/xadrht 0 def
/yadtop 0 def
} if
} bind def
/leadjust {
(m) stringwidth pop
.5 mul
} bind def
/Mrotcheck {
dup
90
eq
{
yadbot
/yadbot
xadrht
def	
/xadrht
yadtop
def
/yadtop
xadlft
def
/xadlft
exch
def
}
if
dup
cos
1 index
sin
Checkaux
dup
cos
1 index
sin neg
exch
Checkaux
3 1 roll
pop pop
} bind def
/Checkaux {
4 index
exch
4 index
mul
3 1 roll
mul add
4 1 roll
} bind def
/Mboxrot {
Mrot
90 eq
{
brotaux
4 2
roll
}
if
Mrot
180 eq
{
4 2
roll
brotaux
4 2
roll
brotaux
}	
if
Mrot
270 eq
{
4 2
roll
brotaux
}
if
} bind def
/brotaux {
neg
exch
neg
} bind def
/Mabsproc {
0
matrix defaultmatrix
dtransform idtransform
dup mul exch
dup mul
add sqrt
} bind def
/Mabswid {
Mabsproc
setlinewidth	
} bind def
/Mabsdash {
exch
[
exch
{
Mabsproc
}
forall
]
exch
setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop}
repeat
} bind def
} ifelse
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/setcmykcolor where
{ pop}
{ /setcmykcolor {
4 1
roll
[
4 1 
roll
]
{
1 index
sub
1
sub neg
dup
0
lt
{
pop
0
}
if
dup
1
gt
{
pop
1
}
if
exch
} forall
pop
setrgbcolor
} bind def
} ifelse
/Mcharproc
{
currentfile
(x)
readhexstring
pop
0 get
exch
div
} bind def
/Mshadeproc
{
dup
3 1
roll
{
dup
Mcharproc
3 1
roll
} repeat
1 eq
{
setgray
}
{
3 eq
{
setrgbcolor
}
{
setcmykcolor
} ifelse
} ifelse
} bind def
/Mrectproc
{
3 index
2 index
moveto
2 index
3 -1
roll
lineto
dup
3 1
roll
lineto
lineto
fill
} bind def
/Mcolorimage
{
7 1
roll
pop
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
9 index
Mshadeproc
Mrectproc
} for
pop
} for
pop pop pop pop
} bind def
/Mimage
{
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
Mcharproc
setgray
Mrectproc
} for
pop
} for
pop pop pop
} bind def

MathPictureStart
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.5 4.7619 0.309017 0.257514 [
[(-0.1)] .02381 0 0 2 0 Minner Mrotsboxa
[(-0.05)] .2619 0 0 2 0 Minner Mrotsboxa
[(0)] .5 0 0 2 0 Minner Mrotsboxa
[(0.05)] .7381 0 0 2 0 Minner Mrotsboxa
[(0.1)] .97619 0 0 2 0 Minner Mrotsboxa
[()] .5 0 0 2 0 0 -1 Mouter Mrotsboxa
[(-1)] -0.0125 .0515 1 0 0 Minner Mrotsboxa
[(-0.5)] -0.0125 .18026 1 0 0 Minner Mrotsboxa
[(0)] -0.0125 .30902 1 0 0 Minner Mrotsboxa
[(0.5)] -0.0125 .43777 1 0 0 Minner Mrotsboxa
[(1)] -0.0125 .56653 1 0 0 Minner Mrotsboxa
[(Epsilon = 0.01, 0.001, 0.0001)] .5 .61803 0 -4 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 .61903 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 g
p
p
.002 w
.02381 0 m
.02381 .00625 L
s
P
[(-0.1)] .02381 0 0 2 0 Minner Mrotshowa
p
.002 w
.2619 0 m
.2619 .00625 L
s
P
[(-0.05)] .2619 0 0 2 0 Minner Mrotshowa
p
.002 w
.5 0 m
.5 .00625 L
s
P
[(0)] .5 0 0 2 0 Minner Mrotshowa
p
.002 w
.7381 0 m
.7381 .00625 L
s
P
[(0.05)] .7381 0 0 2 0 Minner Mrotshowa
p
.002 w
.97619 0 m
.97619 .00625 L
s
P
[(0.1)] .97619 0 0 2 0 Minner Mrotshowa
p
.001 w
.07143 0 m
.07143 .00375 L
s
P
p
.001 w
.11905 0 m
.11905 .00375 L
s
P
p
.001 w
.16667 0 m
.16667 .00375 L
s
P
p
.001 w
.21429 0 m
.21429 .00375 L
s
P
p
.001 w
.30952 0 m
.30952 .00375 L
s
P
p
.001 w
.35714 0 m
.35714 .00375 L
s
P
p
.001 w
.40476 0 m
.40476 .00375 L
s
P
p
.001 w
.45238 0 m
.45238 .00375 L
s
P
p
.001 w
.54762 0 m
.54762 .00375 L
s
P
p
.001 w
.59524 0 m
.59524 .00375 L
s
P
p
.001 w
.64286 0 m
.64286 .00375 L
s
P
p
.001 w
.69048 0 m
.69048 .00375 L
s
P
p
.001 w
.78571 0 m
.78571 .00375 L
s
P
p
.001 w
.83333 0 m
.83333 .00375 L
s
P
p
.001 w
.88095 0 m
.88095 .00375 L
s
P
p
.001 w
.92857 0 m
.92857 .00375 L
s
P
[()] .5 0 0 2 0 0 -1 Mouter Mrotshowa
p
.002 w
0 0 m
1 0 L
s
P
p
.002 w
0 .0515 m
.00625 .0515 L
s
P
[(-1)] -0.0125 .0515 1 0 0 Minner Mrotshowa
p
.002 w
0 .18026 m
.00625 .18026 L
s
P
[(-0.5)] -0.0125 .18026 1 0 0 Minner Mrotshowa
p
.002 w
0 .30902 m
.00625 .30902 L
s
P
[(0)] -0.0125 .30902 1 0 0 Minner Mrotshowa
p
.002 w
0 .43777 m
.00625 .43777 L
s
P
[(0.5)] -0.0125 .43777 1 0 0 Minner Mrotshowa
p
.002 w
0 .56653 m
.00625 .56653 L
s
P
[(1)] -0.0125 .56653 1 0 0 Minner Mrotshowa
p
.001 w
0 .07725 m
.00375 .07725 L
s
P
p
.001 w
0 .10301 m
.00375 .10301 L
s
P
p
.001 w
0 .12876 m
.00375 .12876 L
s
P
p
.001 w
0 .15451 m
.00375 .15451 L
s
P
p
.001 w
0 .20601 m
.00375 .20601 L
s
P
p
.001 w
0 .23176 m
.00375 .23176 L
s
P
p
.001 w
0 .25751 m
.00375 .25751 L
s
P
p
.001 w
0 .28327 m
.00375 .28327 L
s
P
p
.001 w
0 .33477 m
.00375 .33477 L
s
P
p
.001 w
0 .36052 m
.00375 .36052 L
s
P
p
.001 w
0 .38627 m
.00375 .38627 L
s
P
p
.001 w
0 .41202 m
.00375 .41202 L
s
P
p
.001 w
0 .46353 m
.00375 .46353 L
s
P
p
.001 w
0 .48928 m
.00375 .48928 L
s
P
p
.001 w
0 .51503 m
.00375 .51503 L
s
P
p
.001 w
0 .54078 m
.00375 .54078 L
s
P
p
.001 w
0 .02575 m
.00375 .02575 L
s
P
p
.001 w
0 .59228 m
.00375 .59228 L
s
P
p
.002 w
0 0 m
0 .61803 L
s
P
P
p
p
.002 w
.02381 .61178 m
.02381 .61803 L
s
P
p
.002 w
.2619 .61178 m
.2619 .61803 L
s
P
p
.002 w
.5 .61178 m
.5 .61803 L
s
P
p
.002 w
.7381 .61178 m
.7381 .61803 L
s
P
p
.002 w
.97619 .61178 m
.97619 .61803 L
s
P
p
.001 w
.07143 .61428 m
.07143 .61803 L
s
P
p
.001 w
.11905 .61428 m
.11905 .61803 L
s
P
p
.001 w
.16667 .61428 m
.16667 .61803 L
s
P
p
.001 w
.21429 .61428 m
.21429 .61803 L
s
P
p
.001 w
.30952 .61428 m
.30952 .61803 L
s
P
p
.001 w
.35714 .61428 m
.35714 .61803 L
s
P
p
.001 w
.40476 .61428 m
.40476 .61803 L
s
P
p
.001 w
.45238 .61428 m
.45238 .61803 L
s
P
p
.001 w
.54762 .61428 m
.54762 .61803 L
s
P
p
.001 w
.59524 .61428 m
.59524 .61803 L
s
P
p
.001 w
.64286 .61428 m
.64286 .61803 L
s
P
p
.001 w
.69048 .61428 m
.69048 .61803 L
s
P
p
.001 w
.78571 .61428 m
.78571 .61803 L
s
P
p
.001 w
.83333 .61428 m
.83333 .61803 L
s
P
p
.001 w
.88095 .61428 m
.88095 .61803 L
s
P
p
.001 w
.92857 .61428 m
.92857 .61803 L
s
P
[(Epsilon = 0.01, 0.001, 0.0001)] .5 .61803 0 -4 Mshowa
p
.002 w
0 .61803 m
1 .61803 L
s
P
p
.002 w
.99375 .0515 m
1 .0515 L
s
P
p
.002 w
.99375 .18026 m
1 .18026 L
s
P
p
.002 w
.99375 .30902 m
1 .30902 L
s
P
p
.002 w
.99375 .43777 m
1 .43777 L
s
P
p
.002 w
.99375 .56653 m
1 .56653 L
s
P
p
.001 w
.99625 .07725 m
1 .07725 L
s
P
p
.001 w
.99625 .10301 m
1 .10301 L
s
P
p
.001 w
.99625 .12876 m
1 .12876 L
s
P
p
.001 w
.99625 .15451 m
1 .15451 L
s
P
p
.001 w
.99625 .20601 m
1 .20601 L
s
P
p
.001 w
.99625 .23176 m
1 .23176 L
s
P
p
.001 w
.99625 .25751 m
1 .25751 L
s
P
p
.001 w
.99625 .28327 m
1 .28327 L
s
P
p
.001 w
.99625 .33477 m
1 .33477 L
s
P
p
.001 w
.99625 .36052 m
1 .36052 L
s
P
p
.001 w
.99625 .38627 m
1 .38627 L
s
P
p
.001 w
.99625 .41202 m
1 .41202 L
s
P
p
.001 w
.99625 .46353 m
1 .46353 L
s
P
p
.001 w
.99625 .48928 m
1 .48928 L
s
P
p
.001 w
.99625 .51503 m
1 .51503 L
s
P
p
.001 w
.99625 .54078 m
1 .54078 L
s
P
p
.001 w
.99625 .02575 m
1 .02575 L
s
P
p
.001 w
.99625 .59228 m
1 .59228 L
s
P
p
.002 w
1 0 m
1 .61803 L
s
P
P
p
P
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
p
p
p
.001 w
.02381 .12693 m
.06349 .13501 L
.10317 .14416 L
.14286 .15451 L
.18254 .16617 L
.22222 .17926 L
.2619 .19385 L
.30159 .20997 L
.34127 .22758 L
.38095 .24656 L
.42063 .26668 L
.46032 .28763 L
.5 .30902 L
.53968 .3304 L
.57937 .35135 L
.61905 .37147 L
.65873 .39045 L
.69841 .40806 L
.7381 .42418 L
.77778 .43877 L
.81746 .45186 L
.85714 .46353 L
.89683 .47387 L
.93651 .48303 L
.97619 .49111 L
s
P
P
p
p
.001 w
.02381 .06349 m
.06349 .06558 L
.10317 .06825 L
.14286 .07173 L
.18254 .07635 L
.22222 .08263 L
.24206 .08663 L
.2619 .09138 L
.28175 .09706 L
.30159 .10389 L
.32143 .11215 L
.34127 .1222 L
.36111 .13443 L
.38095 .14931 L
.42063 .18895 L
.46032 .2434 L
.5 .30902 L
.53968 .37464 L
.57937 .42908 L
.59921 .45069 L
.61905 .46872 L
.63889 .48361 L
.65873 .49584 L
.67857 .50588 L
.69841 .51414 L
.71825 .52098 L
.7381 .52666 L
.77778 .53541 L
.81746 .54168 L
.85714 .5463 L
.89683 .54978 L
.93651 .55245 L
.97619 .55455 L
s
P
P
p
p
.001 w
.02381 .05278 m
.06349 .05302 L
.10317 .05334 L
.14286 .05376 L
.1627 .05403 L
.18254 .05435 L
.20238 .05474 L
.22222 .05521 L
.24206 .05578 L
.2619 .0565 L
.28175 .05742 L
.30159 .05861 L
.32143 .0602 L
.34127 .06236 L
.35119 .06375 L
.36111 .06542 L
.37103 .06744 L
.38095 .06992 L
.39087 .073 L
.40079 .07686 L
.41071 .0818 L
.42063 .0882 L
.43056 .09664 L
.44048 .10793 L
.4504 .12325 L
.46032 .14416 L
.47024 .17253 L
.48016 .20997 L
.5 .30902 L
.50992 .36154 L
.51984 .40806 L
.52976 .4455 L
.53968 .47387 L
.5496 .49478 L
.55952 .5101 L
.56944 .5214 L
.57937 .52983 L
.58929 .53624 L
.59921 .54117 L
.60913 .54504 L
.61905 .54811 L
.62897 .55059 L
.63889 .55261 L
.65873 .55567 L
.67857 .55784 L
.69841 .55942 L
.71825 .56061 L
.7381 .56153 L
.77778 .56283 L
.79762 .5633 L
Mistroke
.81746 .56368 L
.85714 .56427 L
.89683 .5647 L
.93651 .56501 L
.97619 .56525 L
Mfstroke
P
P
P
% End of Graphics
MathPictureEnd
end
showpage
%%EndDocument
 @endspecial 587 1381 a(Figure)i(17:)j(T)m(est)d(Problem)f(17,)g
Fl(y)q Fm(\()p Fl(x)p Fm(\))i(v)o(ersus)g Fl(x)p eop
%%Page: 18 18
18 17 bop 262 307 a Fn(T)l(est)15 b(Problem)e(18)h Fm(\(Linear\))g([6)o
(,)g(p.14])262 357 y Fl(\017y)300 342 y Fk(00)333 357
y Fm(=)e Fj(\000)p Fl(y)430 342 y Fk(0)443 357 y Fm(,)59
b Fl(y)q Fm(\(0\))12 b(=)g(1)p Fl(;)18 b(y)q Fm(\(1\))12
b(=)g(exp)q(\()p Fj(\000)p Fm(1)p Fl(=\017)p Fm(\).)262
407 y(Exact)i(solution)f(is)h Fl(y)q Fm(\()p Fl(x)p Fm(\))e(=)g(exp\()p
Fj(\000)p Fl(x=\017)p Fm(\).)262 457 y(The)i(solution)f(has)h(a)g(b)q
(oundary)f(la)o(y)o(er)h(of)f(width)h Fl(O)q Fm(\()p
Fl(\017)p Fm(\))g(at)f Fl(x)f Fm(=)f(0.)439 1762 y @beginspecial
72 @llx 72 @lly 540 @urx 720 @ury 2834 @rwi @setspecial
%%BeginDocument: ../PLOTS/pr18.ps

/Mathdict 150 dict def
Mathdict begin
/Mlmarg		1.0 72 mul def
/Mrmarg		1.0 72 mul def
/Mbmarg		1.0 72 mul def
/Mtmarg		1.0 72 mul def
/Mwidth		8.5 72 mul def
/Mheight	11 72 mul def
/Mtransform	{  } bind def
/Mnodistort	true def
/Mfixwid	true	def
/Mfixdash	false def
/Mrot		0	def
/Mpstart {
MathPictureStart
} bind def
/Mpend {
MathPictureEnd
} bind def
/Mscale {
0 1 0 1
5 -1 roll
MathScale
} bind def
/ISOLatin1Encoding dup where
{ pop pop }
{
[
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft
/logicalnot /hyphen /registered /macron
/degree /plusminus /twosuperior /threesuperior
/acute /mu /paragraph /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright
/onequarter /onehalf /threequarters /questiondown
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis
] def
} ifelse
/MFontDict 50 dict def
/MStrCat
{
exch
dup length
2 index length add
string
dup 3 1 roll
copy
length
exch dup
4 2 roll exch
putinterval
} def
/MCreateEncoding
{
1 index
255 string cvs
(-) MStrCat
1 index MStrCat
cvn exch
(Encoding) MStrCat
cvn dup where
{
exch get
}
{
pop
StandardEncoding
} ifelse
3 1 roll
dup MFontDict exch known not
{
1 index findfont
dup length dict
begin
{1 index /FID ne
{def}
{pop pop}
ifelse} forall
/Encoding 3 index
def
currentdict
end
1 index exch definefont pop
MFontDict 1 index
null put
}
if
exch pop
exch pop
} def
/ISOLatin1 { (ISOLatin1) MCreateEncoding } def
/ISO8859 { (ISOLatin1) MCreateEncoding } def
/Mcopyfont {
dup
maxlength
dict
exch
{
1 index
/FID
eq
{
pop pop
}
{
2 index
3 1 roll
put
}
ifelse
}
forall
} def
/Plain	/Courier findfont Mcopyfont definefont pop
/Bold	/Courier-Bold findfont Mcopyfont definefont pop
/Italic /Courier-Oblique findfont Mcopyfont definefont pop
/MathPictureStart {
gsave
Mtransform
Mlmarg
Mbmarg
translate
Mwidth
Mlmarg Mrmarg add
sub
/Mwidth exch def
Mheight
Mbmarg Mtmarg add
sub
/Mheight exch def
/Mtmatrix
matrix currentmatrix
def
/Mgmatrix
matrix currentmatrix
def
} bind def
/MathPictureEnd {
grestore
} bind def
/MFill {
0 0 		moveto
Mwidth 0 	lineto
Mwidth Mheight 	lineto
0 Mheight 	lineto
fill
} bind def
/MPlotRegion {
3 index
Mwidth mul
2 index
Mheight mul
translate
exch sub
Mheight mul
/Mheight
exch def
exch sub
Mwidth mul
/Mwidth
exch def
} bind def
/MathSubStart {
Momatrix
Mgmatrix Mtmatrix
Mwidth Mheight
7 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
Mgmatrix setmatrix
9 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
2 copy translate
/Mtmatrix matrix currentmatrix def
3 -1 roll
exch sub
/Mheight exch def
sub
/Mwidth exch def
} bind def
/MathSubEnd {
/Mheight exch def
/Mwidth exch def
/Mtmatrix exch def
dup setmatrix
/Mgmatrix exch def
/Momatrix exch def
} bind def
/Mdot {
moveto
0 0 rlineto
stroke
} bind def
/Mtetra {
moveto
lineto
lineto
lineto
fill
} bind def
/Metetra {
moveto
lineto
lineto
lineto
closepath
gsave
fill
grestore
0 setgray
stroke
} bind def
/Mistroke {
flattenpath
0 0 0
{
4 2 roll
pop pop
}
{
4 -1 roll
2 index
sub dup mul
4 -1 roll
2 index
sub dup mul
add sqrt
4 -1 roll
add
3 1 roll
}
{
stop
}
{
stop
}
pathforall
pop pop
currentpoint
stroke
moveto
currentdash
3 -1 roll
add
setdash
} bind def
/Mfstroke {
stroke
currentdash
pop 0
setdash
} bind def
/Mrotsboxa {
gsave
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
grestore
Msboxa
3  -1 roll
/Mtmatrix
exch def
/Mrot
0 def
} bind def
/Msboxa {
newpath
5 -1 roll
Mvboxa
pop
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Msboxa1
5 -3 roll
Msboxa1
Mboxrot
[
7 -2 roll
2 copy
[
3 1 roll
10 -1 roll
9 -1 roll
]
6 1 roll
5 -2 roll
]
} bind def
/Msboxa1 {
sub
2 div
dup
2 index
1 add
mul
3 -1 roll
-1 add
3 -1 roll
mul
} bind def
/Mvboxa	{
Mfixwid
{
Mvboxa1
}
{
dup
Mwidthcal
0 exch
{
add
}
forall
exch
Mvboxa1
4 index
7 -1 roll
add
4 -1 roll
pop
3 1 roll
}
ifelse
} bind def
/Mvboxa1 {
gsave
newpath
[ true
3 -1 roll
{
Mbbox
5 -1 roll
{
0
5 1 roll
}
{
7 -1 roll
exch sub
(m) stringwidth pop
.3 mul
sub
7 1 roll
6 -1 roll
4 -1 roll
Mmin
3 -1 roll
5 index
add
5 -1 roll
4 -1 roll
Mmax
4 -1 roll
}
ifelse
false
}
forall
{ stop } if
counttomark
1 add
4 roll
]
grestore
} bind def
/Mbbox {
1 dict begin
0 0 moveto
/temp (T) def
{	gsave
currentpoint newpath moveto
temp 0 3 -1 roll put temp
false charpath flattenpath currentpoint
pathbbox
grestore moveto lineto moveto} forall
pathbbox
newpath
end
} bind def
/Mmin {
2 copy
gt
{ exch } if
pop
} bind def
/Mmax {
2 copy
lt
{ exch } if
pop
} bind def
/Mrotshowa {
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
Mgmatrix setmatrix
Mshowa
/Mtmatrix
exch def
/Mrot 0 def
} bind def
/Mshowa {
4 -2 roll
moveto
2 index
Mtmatrix setmatrix
Mvboxa
7 1 roll
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Mshowa1
4 1 roll
Mshowa1
rmoveto
currentpoint
Mfixwid
{
Mshowax
}
{
Mshoway
}
ifelse
pop pop pop pop
Mgmatrix setmatrix
} bind def
/Mshowax {	
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
Mfixdash
{
Mfixdashp		
}
if
show
} for
} bind def
/Mfixdashp {
dup
length
1
gt
1 index
true exch
{
45
eq
and
} forall
and
{
gsave
(--)		
stringwidth pop
(-)
stringwidth pop
sub
2 div
0 rmoveto
dup
length
1 sub
{
(-)
show
}
repeat
grestore
}
if
} bind def	
/Mshoway {
3 index
Mwidthcal
5 1 roll
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
[
6 index
aload
length
2 add
-1 roll
{
pop
Strform
stringwidth
pop
neg 
exch
add
0 rmoveto
}
exch
kshow
cleartomark
} for
pop	
} bind def
/Mwidthcal {
[
exch
{
Mwidthcal1
}
forall
]
[
exch
dup
Maxlen
-1 add
0 1
3 -1 roll
{
[
exch
2 index
{		 
1 index	
Mget
exch
}
forall		
pop
Maxget
exch
}
for
pop
]
Mreva
} bind def
/Mreva	{
[
exch
aload
length
-1 1
{1 roll}
for
]
} bind def
/Mget	{
1 index
length
-1 add
1 index
ge
{
get
}
{
pop pop
0
}
ifelse
} bind def
/Maxlen	{
[
exch
{
length
}
forall
Maxget
} bind def
/Maxget	{
counttomark
-1 add
1 1
3 -1 roll
{
pop
Mmax
}
for
exch
pop
} bind def
/Mwidthcal1 {
[
exch
{
Strform
stringwidth
pop
}
forall
]
} bind def
/Strform {
/tem (x) def
tem 0
3 -1 roll
put
tem
} bind def
/Mshowa1 {
2 copy
add
4 1 roll
sub
mul
sub
-2 div
} bind def
/MathScale {
Mwidth
Mheight
Mlp
translate
scale
/yscale exch def
/ybias exch def
/xscale exch def
/xbias exch def
/Momatrix
xscale yscale matrix scale
xbias ybias matrix translate
matrix concatmatrix def
/Mgmatrix
matrix currentmatrix
def
} bind def
/Mlp {
3 copy
Mlpfirst
{
Mnodistort
{
Mmin
dup
} if
4 index
2 index
2 index
Mlprun
11 index
11 -1 roll
10 -4 roll
Mlp1
8 index
9 -5 roll
Mlp1
4 -1 roll
and
{ exit } if
3 -1 roll
pop pop
} loop
exch
3 1 roll
7 -3 roll
pop pop pop
} bind def
/Mlpfirst {
3 -1 roll
dup length
2 copy
-2 add
get
aload
pop pop pop
4 -2 roll
-1 add
get
aload
pop pop pop
6 -1 roll
3 -1 roll
5 -1 roll
sub
div
4 1 roll
exch sub
div
} bind def
/Mlprun {
2 copy
4 index
0 get
dup
4 1 roll
Mlprun1
3 copy
8 -2 roll
9 -1 roll
{
3 copy
Mlprun1
3 copy
11 -3 roll
/gt Mlpminmax
8 3 roll
11 -3 roll
/lt Mlpminmax
8 3 roll
} forall
pop pop pop pop
3 1 roll
pop pop
aload pop
5 -1 roll
aload pop
exch
6 -1 roll
Mlprun2
8 2 roll
4 -1 roll
Mlprun2
6 2 roll
3 -1 roll
Mlprun2
4 2 roll
exch
Mlprun2
6 2 roll
} bind def
/Mlprun1 {
aload pop
exch
6 -1 roll
5 -1 roll
mul add
4 -2 roll
mul
3 -1 roll
add
} bind def
/Mlprun2 {
2 copy
add 2 div
3 1 roll
exch sub
} bind def
/Mlpminmax {
cvx
2 index
6 index
2 index
exec
{
7 -3 roll
4 -1 roll
} if
1 index
5 index
3 -1 roll
exec
{
4 1 roll
pop
5 -1 roll
aload
pop pop
4 -1 roll
aload pop
[
8 -2 roll
pop
5 -2 roll
pop
6 -2 roll
pop
5 -1 roll
]
4 1 roll
pop
}
{
pop pop pop
} ifelse
} bind def
/Mlp1 {
5 index
3 index	sub
5 index
2 index mul
1 index
le
1 index
0 le
or
dup
not
{
1 index
3 index	div
.99999 mul
8 -1 roll
pop
7 1 roll
}
if
8 -1 roll
2 div
7 -2 roll
pop sub
5 index
6 -3 roll
pop pop
mul sub
exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
outflag
1
eq
{
/outflag 0 def
/intop 0 def
/inrht 0 def
} if		
5 index
gsave
Mtmatrix setmatrix
Mvboxa pop
grestore
3 -1 roll
pop
dup
intop
gt
{
/intop
exch def
}
{ pop }
ifelse
dup
inrht
gt
{
/inrht
exch def
}
{ pop }
ifelse
pop
/inflag
1 def
} bind def
/Mouter {
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
inflag
1 eq
{
dup
0 lt
{
dup
intop
mul
neg
/yadtop
exch def
} if
dup
0 gt
{
dup
intop
mul
/yadbot
exch def
}
if
pop
dup
0 lt
{
dup
inrht
mul
neg
/xadrht
exch def
} if
dup
0 gt
{
dup
inrht
mul
/xadlft
exch def
} if
pop
/outflag 1 def
}
{ pop pop}
ifelse
/inflag 0 def
/inrht 0 def
/intop 0 def
} bind def	
/Mboxout {
outflag
1
eq
{
4 -1
roll
xadlft
leadjust
add
sub
4 1 roll
3 -1
roll
yadbot
leadjust
add
sub
3 1
roll
exch
xadrht
leadjust
add
add
exch
yadtop
leadjust
add
add
/outflag 0 def
/xadlft 0 def
/yadbot 0 def
/xadrht 0 def
/yadtop 0 def
} if
} bind def
/leadjust {
(m) stringwidth pop
.5 mul
} bind def
/Mrotcheck {
dup
90
eq
{
yadbot
/yadbot
xadrht
def	
/xadrht
yadtop
def
/yadtop
xadlft
def
/xadlft
exch
def
}
if
dup
cos
1 index
sin
Checkaux
dup
cos
1 index
sin neg
exch
Checkaux
3 1 roll
pop pop
} bind def
/Checkaux {
4 index
exch
4 index
mul
3 1 roll
mul add
4 1 roll
} bind def
/Mboxrot {
Mrot
90 eq
{
brotaux
4 2
roll
}
if
Mrot
180 eq
{
4 2
roll
brotaux
4 2
roll
brotaux
}	
if
Mrot
270 eq
{
4 2
roll
brotaux
}
if
} bind def
/brotaux {
neg
exch
neg
} bind def
/Mabsproc {
0
matrix defaultmatrix
dtransform idtransform
dup mul exch
dup mul
add sqrt
} bind def
/Mabswid {
Mabsproc
setlinewidth	
} bind def
/Mabsdash {
exch
[
exch
{
Mabsproc
}
forall
]
exch
setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop}
repeat
} bind def
} ifelse
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/setcmykcolor where
{ pop}
{ /setcmykcolor {
4 1
roll
[
4 1 
roll
]
{
1 index
sub
1
sub neg
dup
0
lt
{
pop
0
}
if
dup
1
gt
{
pop
1
}
if
exch
} forall
pop
setrgbcolor
} bind def
} ifelse
/Mcharproc
{
currentfile
(x)
readhexstring
pop
0 get
exch
div
} bind def
/Mshadeproc
{
dup
3 1
roll
{
dup
Mcharproc
3 1
roll
} repeat
1 eq
{
setgray
}
{
3 eq
{
setrgbcolor
}
{
setcmykcolor
} ifelse
} ifelse
} bind def
/Mrectproc
{
3 index
2 index
moveto
2 index
3 -1
roll
lineto
dup
3 1
roll
lineto
lineto
fill
} bind def
/Mcolorimage
{
7 1
roll
pop
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
9 index
Mshadeproc
Mrectproc
} for
pop
} for
pop pop pop pop
} bind def
/Mimage
{
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
Mcharproc
setgray
Mrectproc
} for
pop
} for
pop pop pop
} bind def

MathPictureStart
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0454545 0.909091 0.0280925 0.561849 [
[(0)] .04545 0 0 2 0 Minner Mrotsboxa
[(0.2)] .22727 0 0 2 0 Minner Mrotsboxa
[(0.4)] .40909 0 0 2 0 Minner Mrotsboxa
[(0.6)] .59091 0 0 2 0 Minner Mrotsboxa
[(0.8)] .77273 0 0 2 0 Minner Mrotsboxa
[(1)] .95455 0 0 2 0 Minner Mrotsboxa
[()] .5 0 0 2 0 0 -1 Mouter Mrotsboxa
[(0)] -0.0125 .02809 1 0 0 Minner Mrotsboxa
[(0.2)] -0.0125 .14046 1 0 0 Minner Mrotsboxa
[(0.4)] -0.0125 .25283 1 0 0 Minner Mrotsboxa
[(0.6)] -0.0125 .3652 1 0 0 Minner Mrotsboxa
[(0.8)] -0.0125 .47757 1 0 0 Minner Mrotsboxa
[(1)] -0.0125 .58994 1 0 0 Minner Mrotsboxa
[(Epsilon = 0.2, 0.1, 0.01)] .5 .61803 0 -4 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 .61903 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 g
p
p
.002 w
.04545 0 m
.04545 .00625 L
s
P
[(0)] .04545 0 0 2 0 Minner Mrotshowa
p
.002 w
.22727 0 m
.22727 .00625 L
s
P
[(0.2)] .22727 0 0 2 0 Minner Mrotshowa
p
.002 w
.40909 0 m
.40909 .00625 L
s
P
[(0.4)] .40909 0 0 2 0 Minner Mrotshowa
p
.002 w
.59091 0 m
.59091 .00625 L
s
P
[(0.6)] .59091 0 0 2 0 Minner Mrotshowa
p
.002 w
.77273 0 m
.77273 .00625 L
s
P
[(0.8)] .77273 0 0 2 0 Minner Mrotshowa
p
.002 w
.95455 0 m
.95455 .00625 L
s
P
[(1)] .95455 0 0 2 0 Minner Mrotshowa
p
.001 w
.08182 0 m
.08182 .00375 L
s
P
p
.001 w
.11818 0 m
.11818 .00375 L
s
P
p
.001 w
.15455 0 m
.15455 .00375 L
s
P
p
.001 w
.19091 0 m
.19091 .00375 L
s
P
p
.001 w
.26364 0 m
.26364 .00375 L
s
P
p
.001 w
.3 0 m
.3 .00375 L
s
P
p
.001 w
.33636 0 m
.33636 .00375 L
s
P
p
.001 w
.37273 0 m
.37273 .00375 L
s
P
p
.001 w
.44545 0 m
.44545 .00375 L
s
P
p
.001 w
.48182 0 m
.48182 .00375 L
s
P
p
.001 w
.51818 0 m
.51818 .00375 L
s
P
p
.001 w
.55455 0 m
.55455 .00375 L
s
P
p
.001 w
.62727 0 m
.62727 .00375 L
s
P
p
.001 w
.66364 0 m
.66364 .00375 L
s
P
p
.001 w
.7 0 m
.7 .00375 L
s
P
p
.001 w
.73636 0 m
.73636 .00375 L
s
P
p
.001 w
.80909 0 m
.80909 .00375 L
s
P
p
.001 w
.84545 0 m
.84545 .00375 L
s
P
p
.001 w
.88182 0 m
.88182 .00375 L
s
P
p
.001 w
.91818 0 m
.91818 .00375 L
s
P
p
.001 w
.00909 0 m
.00909 .00375 L
s
P
p
.001 w
.99091 0 m
.99091 .00375 L
s
P
[()] .5 0 0 2 0 0 -1 Mouter Mrotshowa
p
.002 w
0 0 m
1 0 L
s
P
p
.002 w
0 .02809 m
.00625 .02809 L
s
P
[(0)] -0.0125 .02809 1 0 0 Minner Mrotshowa
p
.002 w
0 .14046 m
.00625 .14046 L
s
P
[(0.2)] -0.0125 .14046 1 0 0 Minner Mrotshowa
p
.002 w
0 .25283 m
.00625 .25283 L
s
P
[(0.4)] -0.0125 .25283 1 0 0 Minner Mrotshowa
p
.002 w
0 .3652 m
.00625 .3652 L
s
P
[(0.6)] -0.0125 .3652 1 0 0 Minner Mrotshowa
p
.002 w
0 .47757 m
.00625 .47757 L
s
P
[(0.8)] -0.0125 .47757 1 0 0 Minner Mrotshowa
p
.002 w
0 .58994 m
.00625 .58994 L
s
P
[(1)] -0.0125 .58994 1 0 0 Minner Mrotshowa
p
.001 w
0 .05057 m
.00375 .05057 L
s
P
p
.001 w
0 .07304 m
.00375 .07304 L
s
P
p
.001 w
0 .09551 m
.00375 .09551 L
s
P
p
.001 w
0 .11799 m
.00375 .11799 L
s
P
p
.001 w
0 .16294 m
.00375 .16294 L
s
P
p
.001 w
0 .18541 m
.00375 .18541 L
s
P
p
.001 w
0 .20788 m
.00375 .20788 L
s
P
p
.001 w
0 .23036 m
.00375 .23036 L
s
P
p
.001 w
0 .27531 m
.00375 .27531 L
s
P
p
.001 w
0 .29778 m
.00375 .29778 L
s
P
p
.001 w
0 .32025 m
.00375 .32025 L
s
P
p
.001 w
0 .34273 m
.00375 .34273 L
s
P
p
.001 w
0 .38768 m
.00375 .38768 L
s
P
p
.001 w
0 .41015 m
.00375 .41015 L
s
P
p
.001 w
0 .43262 m
.00375 .43262 L
s
P
p
.001 w
0 .4551 m
.00375 .4551 L
s
P
p
.001 w
0 .50005 m
.00375 .50005 L
s
P
p
.001 w
0 .52252 m
.00375 .52252 L
s
P
p
.001 w
0 .54499 m
.00375 .54499 L
s
P
p
.001 w
0 .56747 m
.00375 .56747 L
s
P
p
.001 w
0 .00562 m
.00375 .00562 L
s
P
p
.001 w
0 .61242 m
.00375 .61242 L
s
P
p
.002 w
0 0 m
0 .61803 L
s
P
P
p
p
.002 w
.04545 .61178 m
.04545 .61803 L
s
P
p
.002 w
.22727 .61178 m
.22727 .61803 L
s
P
p
.002 w
.40909 .61178 m
.40909 .61803 L
s
P
p
.002 w
.59091 .61178 m
.59091 .61803 L
s
P
p
.002 w
.77273 .61178 m
.77273 .61803 L
s
P
p
.002 w
.95455 .61178 m
.95455 .61803 L
s
P
p
.001 w
.08182 .61428 m
.08182 .61803 L
s
P
p
.001 w
.11818 .61428 m
.11818 .61803 L
s
P
p
.001 w
.15455 .61428 m
.15455 .61803 L
s
P
p
.001 w
.19091 .61428 m
.19091 .61803 L
s
P
p
.001 w
.26364 .61428 m
.26364 .61803 L
s
P
p
.001 w
.3 .61428 m
.3 .61803 L
s
P
p
.001 w
.33636 .61428 m
.33636 .61803 L
s
P
p
.001 w
.37273 .61428 m
.37273 .61803 L
s
P
p
.001 w
.44545 .61428 m
.44545 .61803 L
s
P
p
.001 w
.48182 .61428 m
.48182 .61803 L
s
P
p
.001 w
.51818 .61428 m
.51818 .61803 L
s
P
p
.001 w
.55455 .61428 m
.55455 .61803 L
s
P
p
.001 w
.62727 .61428 m
.62727 .61803 L
s
P
p
.001 w
.66364 .61428 m
.66364 .61803 L
s
P
p
.001 w
.7 .61428 m
.7 .61803 L
s
P
p
.001 w
.73636 .61428 m
.73636 .61803 L
s
P
p
.001 w
.80909 .61428 m
.80909 .61803 L
s
P
p
.001 w
.84545 .61428 m
.84545 .61803 L
s
P
p
.001 w
.88182 .61428 m
.88182 .61803 L
s
P
p
.001 w
.91818 .61428 m
.91818 .61803 L
s
P
p
.001 w
.00909 .61428 m
.00909 .61803 L
s
P
p
.001 w
.99091 .61428 m
.99091 .61803 L
s
P
[(Epsilon = 0.2, 0.1, 0.01)] .5 .61803 0 -4 Mshowa
p
.002 w
0 .61803 m
1 .61803 L
s
P
p
.002 w
.99375 .02809 m
1 .02809 L
s
P
p
.002 w
.99375 .14046 m
1 .14046 L
s
P
p
.002 w
.99375 .25283 m
1 .25283 L
s
P
p
.002 w
.99375 .3652 m
1 .3652 L
s
P
p
.002 w
.99375 .47757 m
1 .47757 L
s
P
p
.002 w
.99375 .58994 m
1 .58994 L
s
P
p
.001 w
.99625 .05057 m
1 .05057 L
s
P
p
.001 w
.99625 .07304 m
1 .07304 L
s
P
p
.001 w
.99625 .09551 m
1 .09551 L
s
P
p
.001 w
.99625 .11799 m
1 .11799 L
s
P
p
.001 w
.99625 .16294 m
1 .16294 L
s
P
p
.001 w
.99625 .18541 m
1 .18541 L
s
P
p
.001 w
.99625 .20788 m
1 .20788 L
s
P
p
.001 w
.99625 .23036 m
1 .23036 L
s
P
p
.001 w
.99625 .27531 m
1 .27531 L
s
P
p
.001 w
.99625 .29778 m
1 .29778 L
s
P
p
.001 w
.99625 .32025 m
1 .32025 L
s
P
p
.001 w
.99625 .34273 m
1 .34273 L
s
P
p
.001 w
.99625 .38768 m
1 .38768 L
s
P
p
.001 w
.99625 .41015 m
1 .41015 L
s
P
p
.001 w
.99625 .43262 m
1 .43262 L
s
P
p
.001 w
.99625 .4551 m
1 .4551 L
s
P
p
.001 w
.99625 .50005 m
1 .50005 L
s
P
p
.001 w
.99625 .52252 m
1 .52252 L
s
P
p
.001 w
.99625 .54499 m
1 .54499 L
s
P
p
.001 w
.99625 .56747 m
1 .56747 L
s
P
p
.001 w
.99625 .00562 m
1 .00562 L
s
P
p
.001 w
.99625 .61242 m
1 .61242 L
s
P
p
.002 w
1 0 m
1 .61803 L
s
P
P
p
P
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
p
p
p
.001 w
.04545 .58994 m
.08333 .48428 L
.12121 .39849 L
.15909 .32883 L
.19697 .27227 L
.23485 .22635 L
.27273 .18906 L
.31061 .15879 L
.34848 .13421 L
.38636 .11425 L
.42424 .09805 L
.46212 .08489 L
.5 .07421 L
.53788 .06554 L
.57576 .0585 L
.61364 .05278 L
.65152 .04814 L
.68939 .04437 L
.72727 .04131 L
.76515 .03882 L
.80303 .0368 L
.84091 .03517 L
.87879 .03383 L
.91667 .03276 L
.95455 .03188 L
s
P
P
p
p
.001 w
.04545 .58994 m
.06439 .48428 L
.08333 .39849 L
.12121 .27227 L
.14015 .22635 L
.15909 .18906 L
.17803 .15879 L
.19697 .13421 L
.21591 .11425 L
.23485 .09805 L
.25379 .08489 L
.27273 .07421 L
.31061 .0585 L
.32955 .05278 L
.34848 .04814 L
.36742 .04437 L
.38636 .04131 L
.4053 .03882 L
.42424 .0368 L
.44318 .03517 L
.46212 .03383 L
.48106 .03276 L
.5 .03188 L
.51894 .03117 L
.53788 .03059 L
.55682 .03012 L
.57576 .02974 L
.5947 .02943 L
.61364 .02918 L
.63258 .02897 L
.65152 .02881 L
.67045 .02867 L
.68939 .02856 L
.70833 .02848 L
.72727 .0284 L
.74621 .02834 L
.76515 .0283 L
.78409 .02826 L
.80303 .02823 L
.82197 .0282 L
.84091 .02818 L
.85985 .02816 L
.87879 .02815 L
.91667 .02813 L
.93561 .02812 L
.95455 .02812 L
s
P
P
p
p
.001 w
.04545 .58994 m
.04782 .46113 L
.05019 .36185 L
.05256 .28533 L
.05492 .22635 L
.05729 .1809 L
.05966 .14586 L
.06203 .11886 L
.06439 .09805 L
.06676 .08201 L
.06913 .06965 L
.0715 .06012 L
.07386 .05278 L
.07623 .04712 L
.0786 .04276 L
.08097 .03939 L
.08333 .0368 L
.0857 .03481 L
.08807 .03327 L
.09044 .03208 L
.0928 .03117 L
.09517 .03046 L
.09754 .02992 L
.09991 .0295 L
.10227 .02918 L
.10464 .02893 L
.10701 .02874 L
.10938 .02859 L
.11174 .02848 L
.11411 .02839 L
.11648 .02832 L
.11884 .02827 L
.12121 .02823 L
.12358 .0282 L
.12595 .02817 L
.12831 .02815 L
.13068 .02814 L
.13305 .02813 L
.13542 .02812 L
.13778 .02811 L
.14015 .02811 L
.14252 .02811 L
.14489 .0281 L
.14725 .0281 L
.14962 .0281 L
.15199 .0281 L
.15436 .0281 L
.15672 .0281 L
.15909 .02809 L
.16146 .02809 L
Mistroke
.16383 .02809 L
.16619 .02809 L
.16856 .02809 L
.17093 .02809 L
.1733 .02809 L
.17566 .02809 L
.17803 .02809 L
.1804 .02809 L
.18277 .02809 L
.18513 .02809 L
.1875 .02809 L
.18987 .02809 L
.19223 .02809 L
.1946 .02809 L
.19697 .02809 L
.19934 .02809 L
.2017 .02809 L
.20407 .02809 L
.20644 .02809 L
.20881 .02809 L
.21117 .02809 L
.21354 .02809 L
.21591 .02809 L
.21828 .02809 L
.22064 .02809 L
.22301 .02809 L
.22538 .02809 L
.22775 .02809 L
.23011 .02809 L
.23248 .02809 L
.23485 .02809 L
.23722 .02809 L
.23958 .02809 L
.24195 .02809 L
.24432 .02809 L
.24669 .02809 L
.24905 .02809 L
.25142 .02809 L
.25379 .02809 L
.25616 .02809 L
.25852 .02809 L
.26089 .02809 L
.26326 .02809 L
.26563 .02809 L
.26799 .02809 L
.27036 .02809 L
.27273 .02809 L
.27509 .02809 L
.27746 .02809 L
.27983 .02809 L
Mistroke
.2822 .02809 L
.28456 .02809 L
.28693 .02809 L
.2893 .02809 L
.29167 .02809 L
.29403 .02809 L
.2964 .02809 L
.29877 .02809 L
.30114 .02809 L
.3035 .02809 L
.30587 .02809 L
.30824 .02809 L
.31061 .02809 L
.31297 .02809 L
.31534 .02809 L
.31771 .02809 L
.32008 .02809 L
.32244 .02809 L
.32481 .02809 L
.32718 .02809 L
.32955 .02809 L
.33191 .02809 L
.33428 .02809 L
.33665 .02809 L
.33902 .02809 L
.34138 .02809 L
.34375 .02809 L
.34612 .02809 L
.34848 .02809 L
.35085 .02809 L
.35322 .02809 L
.35559 .02809 L
.35795 .02809 L
.36032 .02809 L
.36269 .02809 L
.36506 .02809 L
.36742 .02809 L
.36979 .02809 L
.37216 .02809 L
.37453 .02809 L
.37689 .02809 L
.37926 .02809 L
.38163 .02809 L
.384 .02809 L
.38636 .02809 L
.38873 .02809 L
.3911 .02809 L
.39347 .02809 L
.39583 .02809 L
.3982 .02809 L
Mistroke
.40057 .02809 L
.40294 .02809 L
.4053 .02809 L
.40767 .02809 L
.41004 .02809 L
.41241 .02809 L
.41477 .02809 L
.41714 .02809 L
.41951 .02809 L
.42188 .02809 L
.42424 .02809 L
.42661 .02809 L
.42898 .02809 L
.43134 .02809 L
.43371 .02809 L
.43608 .02809 L
.43845 .02809 L
.44081 .02809 L
.44318 .02809 L
.44555 .02809 L
.44792 .02809 L
.45028 .02809 L
.45265 .02809 L
.45502 .02809 L
.45739 .02809 L
.45975 .02809 L
.46212 .02809 L
.46449 .02809 L
.46686 .02809 L
.46922 .02809 L
.47159 .02809 L
.47396 .02809 L
.47633 .02809 L
.47869 .02809 L
.48106 .02809 L
.48343 .02809 L
.4858 .02809 L
.48816 .02809 L
.49053 .02809 L
.4929 .02809 L
.49527 .02809 L
.49763 .02809 L
.5 .02809 L
.50237 .02809 L
.50473 .02809 L
.5071 .02809 L
.50947 .02809 L
.51184 .02809 L
.5142 .02809 L
.51657 .02809 L
Mistroke
.51894 .02809 L
.52131 .02809 L
.52367 .02809 L
.52604 .02809 L
.52841 .02809 L
.53078 .02809 L
.53314 .02809 L
.53551 .02809 L
.53788 .02809 L
.54025 .02809 L
.54261 .02809 L
.54498 .02809 L
.54735 .02809 L
.54972 .02809 L
.55208 .02809 L
.55445 .02809 L
.55682 .02809 L
.55919 .02809 L
.56155 .02809 L
.56392 .02809 L
.56629 .02809 L
.56866 .02809 L
.57102 .02809 L
.57339 .02809 L
.57576 .02809 L
.57812 .02809 L
.58049 .02809 L
.58286 .02809 L
.58523 .02809 L
.58759 .02809 L
.58996 .02809 L
.59233 .02809 L
.5947 .02809 L
.59706 .02809 L
.59943 .02809 L
.6018 .02809 L
.60417 .02809 L
.60653 .02809 L
.6089 .02809 L
.61127 .02809 L
.61364 .02809 L
.616 .02809 L
.61837 .02809 L
.62074 .02809 L
.62311 .02809 L
.62547 .02809 L
.62784 .02809 L
.63021 .02809 L
.63258 .02809 L
.63494 .02809 L
Mistroke
.63731 .02809 L
.63968 .02809 L
.64205 .02809 L
.64441 .02809 L
.64678 .02809 L
.64915 .02809 L
.65152 .02809 L
.65388 .02809 L
.65625 .02809 L
.65862 .02809 L
.66098 .02809 L
.66335 .02809 L
.66572 .02809 L
.66809 .02809 L
.67045 .02809 L
.67282 .02809 L
.67519 .02809 L
.67756 .02809 L
.67992 .02809 L
.68229 .02809 L
.68466 .02809 L
.68703 .02809 L
.68939 .02809 L
.69176 .02809 L
.69413 .02809 L
.6965 .02809 L
.69886 .02809 L
.70123 .02809 L
.7036 .02809 L
.70597 .02809 L
.70833 .02809 L
.7107 .02809 L
.71307 .02809 L
.71544 .02809 L
.7178 .02809 L
.72017 .02809 L
.72254 .02809 L
.72491 .02809 L
.72727 .02809 L
.72964 .02809 L
.73201 .02809 L
.73437 .02809 L
.73674 .02809 L
.73911 .02809 L
.74148 .02809 L
.74384 .02809 L
.74621 .02809 L
.74858 .02809 L
.75095 .02809 L
.75331 .02809 L
Mistroke
.75568 .02809 L
.75805 .02809 L
.76042 .02809 L
.76278 .02809 L
.76515 .02809 L
.76752 .02809 L
.76989 .02809 L
.77225 .02809 L
.77462 .02809 L
.77699 .02809 L
.77936 .02809 L
.78172 .02809 L
.78409 .02809 L
.78646 .02809 L
.78883 .02809 L
.79119 .02809 L
.79356 .02809 L
.79593 .02809 L
.7983 .02809 L
.80066 .02809 L
.80303 .02809 L
.8054 .02809 L
.80777 .02809 L
.81013 .02809 L
.8125 .02809 L
.81487 .02809 L
.81723 .02809 L
.8196 .02809 L
.82197 .02809 L
.82434 .02809 L
.8267 .02809 L
.82907 .02809 L
.83144 .02809 L
.83381 .02809 L
.83617 .02809 L
.83854 .02809 L
.84091 .02809 L
.84328 .02809 L
.84564 .02809 L
.84801 .02809 L
.85038 .02809 L
.85275 .02809 L
.85511 .02809 L
.85748 .02809 L
.85985 .02809 L
.86222 .02809 L
.86458 .02809 L
.86695 .02809 L
.86932 .02809 L
.87169 .02809 L
Mistroke
.87405 .02809 L
.87642 .02809 L
.87879 .02809 L
.88116 .02809 L
.88352 .02809 L
.88589 .02809 L
.88826 .02809 L
.89062 .02809 L
.89299 .02809 L
.89536 .02809 L
.89773 .02809 L
.90009 .02809 L
.90246 .02809 L
.90483 .02809 L
.9072 .02809 L
.90956 .02809 L
.91193 .02809 L
.9143 .02809 L
.91667 .02809 L
.91903 .02809 L
.9214 .02809 L
.92377 .02809 L
.92614 .02809 L
.9285 .02809 L
.93087 .02809 L
.93324 .02809 L
.93561 .02809 L
.93797 .02809 L
.94034 .02809 L
.94271 .02809 L
.94508 .02809 L
.94744 .02809 L
.94981 .02809 L
.95218 .02809 L
.95455 .02809 L
Mfstroke
P
P
P
% End of Graphics
MathPictureEnd
end
showpage
%%EndDocument
 @endspecial 587 1381 a(Figure)j(18:)j(T)m(est)d(Problem)f(18,)g
Fl(y)q Fm(\()p Fl(x)p Fm(\))i(v)o(ersus)g Fl(x)p eop
%%Page: 19 19
19 18 bop 262 307 a Fn(T)l(est)15 b(Problem)e(19)h Fm(\(Nonlinear\))g
([6)o(,)f(p.154])262 368 y Fl(\017y)300 351 y Fk(00)331
368 y Fm(+)c(exp)q(\()p Fl(y)q Fm(\))p Fl(y)510 351 y
Fk(0)532 368 y Fj(\000)579 340 y Fl(\031)p 579 358 26
2 v 581 396 a Fm(2)616 368 y(sin\()p Fl(\031)q(x=)p Fm(2\))e(exp\(2)p
Fl(y)q Fm(\))12 b(=)g(0,)59 b Fl(y)q Fm(\(0\))13 b(=)f
Fl(y)q Fm(\(1\))g(=)g(0.)262 431 y(The)19 b(asymptotic)e(solution)h
(for)h Fl(\017)g Fj(!)g Fm(0)g(of)f(this)h(problem)e(is)i(giv)o(en)f(b)
o(y)h(O'Malley)f([9)o(,)262 481 y(p.123].)e(The)e(solution)f(is)g
Fl(y)q Fm(\()p Fl(x)p Fm(\))g(=)f Fj(\000)7 b Fm(ln)o(\(\(1)i(+)g(cos)q
(\()p Fl(\031)q(x=)p Fm(2\)\)\(1)f Fj(\000)1279 465 y
Fi(1)p 1279 472 17 2 v 1279 496 a(2)1308 481 y Fm(exp\()p
Fj(\000)p Fl(x=)p Fm(2)p Fl(\017)p Fm(\)\)\))h(+)g Fl(O)q
Fm(\()p Fl(\017)p Fm(\).)262 531 y(The)14 b(solution)f(has)h(a)g(b)q
(oundary)f(la)o(y)o(er)h(at)g Fl(x)d Fm(=)h(0.)439 1835
y @beginspecial 72 @llx 72 @lly 540 @urx 720 @ury 2834
@rwi @setspecial
%%BeginDocument: ../PLOTS/pr19.ps

/Mathdict 150 dict def
Mathdict begin
/Mlmarg		1.0 72 mul def
/Mrmarg		1.0 72 mul def
/Mbmarg		1.0 72 mul def
/Mtmarg		1.0 72 mul def
/Mwidth		8.5 72 mul def
/Mheight	11 72 mul def
/Mtransform	{  } bind def
/Mnodistort	true def
/Mfixwid	true	def
/Mfixdash	false def
/Mrot		0	def
/Mpstart {
MathPictureStart
} bind def
/Mpend {
MathPictureEnd
} bind def
/Mscale {
0 1 0 1
5 -1 roll
MathScale
} bind def
/ISOLatin1Encoding dup where
{ pop pop }
{
[
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft
/logicalnot /hyphen /registered /macron
/degree /plusminus /twosuperior /threesuperior
/acute /mu /paragraph /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright
/onequarter /onehalf /threequarters /questiondown
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis
] def
} ifelse
/MFontDict 50 dict def
/MStrCat
{
exch
dup length
2 index length add
string
dup 3 1 roll
copy
length
exch dup
4 2 roll exch
putinterval
} def
/MCreateEncoding
{
1 index
255 string cvs
(-) MStrCat
1 index MStrCat
cvn exch
(Encoding) MStrCat
cvn dup where
{
exch get
}
{
pop
StandardEncoding
} ifelse
3 1 roll
dup MFontDict exch known not
{
1 index findfont
dup length dict
begin
{1 index /FID ne
{def}
{pop pop}
ifelse} forall
/Encoding 3 index
def
currentdict
end
1 index exch definefont pop
MFontDict 1 index
null put
}
if
exch pop
exch pop
} def
/ISOLatin1 { (ISOLatin1) MCreateEncoding } def
/ISO8859 { (ISOLatin1) MCreateEncoding } def
/Mcopyfont {
dup
maxlength
dict
exch
{
1 index
/FID
eq
{
pop pop
}
{
2 index
3 1 roll
put
}
ifelse
}
forall
} def
/Plain	/Courier findfont Mcopyfont definefont pop
/Bold	/Courier-Bold findfont Mcopyfont definefont pop
/Italic /Courier-Oblique findfont Mcopyfont definefont pop
/MathPictureStart {
gsave
Mtransform
Mlmarg
Mbmarg
translate
Mwidth
Mlmarg Mrmarg add
sub
/Mwidth exch def
Mheight
Mbmarg Mtmarg add
sub
/Mheight exch def
/Mtmatrix
matrix currentmatrix
def
/Mgmatrix
matrix currentmatrix
def
} bind def
/MathPictureEnd {
grestore
} bind def
/MFill {
0 0 		moveto
Mwidth 0 	lineto
Mwidth Mheight 	lineto
0 Mheight 	lineto
fill
} bind def
/MPlotRegion {
3 index
Mwidth mul
2 index
Mheight mul
translate
exch sub
Mheight mul
/Mheight
exch def
exch sub
Mwidth mul
/Mwidth
exch def
} bind def
/MathSubStart {
Momatrix
Mgmatrix Mtmatrix
Mwidth Mheight
7 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
Mgmatrix setmatrix
9 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
2 copy translate
/Mtmatrix matrix currentmatrix def
3 -1 roll
exch sub
/Mheight exch def
sub
/Mwidth exch def
} bind def
/MathSubEnd {
/Mheight exch def
/Mwidth exch def
/Mtmatrix exch def
dup setmatrix
/Mgmatrix exch def
/Momatrix exch def
} bind def
/Mdot {
moveto
0 0 rlineto
stroke
} bind def
/Mtetra {
moveto
lineto
lineto
lineto
fill
} bind def
/Metetra {
moveto
lineto
lineto
lineto
closepath
gsave
fill
grestore
0 setgray
stroke
} bind def
/Mistroke {
flattenpath
0 0 0
{
4 2 roll
pop pop
}
{
4 -1 roll
2 index
sub dup mul
4 -1 roll
2 index
sub dup mul
add sqrt
4 -1 roll
add
3 1 roll
}
{
stop
}
{
stop
}
pathforall
pop pop
currentpoint
stroke
moveto
currentdash
3 -1 roll
add
setdash
} bind def
/Mfstroke {
stroke
currentdash
pop 0
setdash
} bind def
/Mrotsboxa {
gsave
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
grestore
Msboxa
3  -1 roll
/Mtmatrix
exch def
/Mrot
0 def
} bind def
/Msboxa {
newpath
5 -1 roll
Mvboxa
pop
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Msboxa1
5 -3 roll
Msboxa1
Mboxrot
[
7 -2 roll
2 copy
[
3 1 roll
10 -1 roll
9 -1 roll
]
6 1 roll
5 -2 roll
]
} bind def
/Msboxa1 {
sub
2 div
dup
2 index
1 add
mul
3 -1 roll
-1 add
3 -1 roll
mul
} bind def
/Mvboxa	{
Mfixwid
{
Mvboxa1
}
{
dup
Mwidthcal
0 exch
{
add
}
forall
exch
Mvboxa1
4 index
7 -1 roll
add
4 -1 roll
pop
3 1 roll
}
ifelse
} bind def
/Mvboxa1 {
gsave
newpath
[ true
3 -1 roll
{
Mbbox
5 -1 roll
{
0
5 1 roll
}
{
7 -1 roll
exch sub
(m) stringwidth pop
.3 mul
sub
7 1 roll
6 -1 roll
4 -1 roll
Mmin
3 -1 roll
5 index
add
5 -1 roll
4 -1 roll
Mmax
4 -1 roll
}
ifelse
false
}
forall
{ stop } if
counttomark
1 add
4 roll
]
grestore
} bind def
/Mbbox {
1 dict begin
0 0 moveto
/temp (T) def
{	gsave
currentpoint newpath moveto
temp 0 3 -1 roll put temp
false charpath flattenpath currentpoint
pathbbox
grestore moveto lineto moveto} forall
pathbbox
newpath
end
} bind def
/Mmin {
2 copy
gt
{ exch } if
pop
} bind def
/Mmax {
2 copy
lt
{ exch } if
pop
} bind def
/Mrotshowa {
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
Mgmatrix setmatrix
Mshowa
/Mtmatrix
exch def
/Mrot 0 def
} bind def
/Mshowa {
4 -2 roll
moveto
2 index
Mtmatrix setmatrix
Mvboxa
7 1 roll
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Mshowa1
4 1 roll
Mshowa1
rmoveto
currentpoint
Mfixwid
{
Mshowax
}
{
Mshoway
}
ifelse
pop pop pop pop
Mgmatrix setmatrix
} bind def
/Mshowax {	
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
Mfixdash
{
Mfixdashp		
}
if
show
} for
} bind def
/Mfixdashp {
dup
length
1
gt
1 index
true exch
{
45
eq
and
} forall
and
{
gsave
(--)		
stringwidth pop
(-)
stringwidth pop
sub
2 div
0 rmoveto
dup
length
1 sub
{
(-)
show
}
repeat
grestore
}
if
} bind def	
/Mshoway {
3 index
Mwidthcal
5 1 roll
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
[
6 index
aload
length
2 add
-1 roll
{
pop
Strform
stringwidth
pop
neg 
exch
add
0 rmoveto
}
exch
kshow
cleartomark
} for
pop	
} bind def
/Mwidthcal {
[
exch
{
Mwidthcal1
}
forall
]
[
exch
dup
Maxlen
-1 add
0 1
3 -1 roll
{
[
exch
2 index
{		 
1 index	
Mget
exch
}
forall		
pop
Maxget
exch
}
for
pop
]
Mreva
} bind def
/Mreva	{
[
exch
aload
length
-1 1
{1 roll}
for
]
} bind def
/Mget	{
1 index
length
-1 add
1 index
ge
{
get
}
{
pop pop
0
}
ifelse
} bind def
/Maxlen	{
[
exch
{
length
}
forall
Maxget
} bind def
/Maxget	{
counttomark
-1 add
1 1
3 -1 roll
{
pop
Mmax
}
for
exch
pop
} bind def
/Mwidthcal1 {
[
exch
{
Strform
stringwidth
pop
}
forall
]
} bind def
/Strform {
/tem (x) def
tem 0
3 -1 roll
put
tem
} bind def
/Mshowa1 {
2 copy
add
4 1 roll
sub
mul
sub
-2 div
} bind def
/MathScale {
Mwidth
Mheight
Mlp
translate
scale
/yscale exch def
/ybias exch def
/xscale exch def
/xbias exch def
/Momatrix
xscale yscale matrix scale
xbias ybias matrix translate
matrix concatmatrix def
/Mgmatrix
matrix currentmatrix
def
} bind def
/Mlp {
3 copy
Mlpfirst
{
Mnodistort
{
Mmin
dup
} if
4 index
2 index
2 index
Mlprun
11 index
11 -1 roll
10 -4 roll
Mlp1
8 index
9 -5 roll
Mlp1
4 -1 roll
and
{ exit } if
3 -1 roll
pop pop
} loop
exch
3 1 roll
7 -3 roll
pop pop pop
} bind def
/Mlpfirst {
3 -1 roll
dup length
2 copy
-2 add
get
aload
pop pop pop
4 -2 roll
-1 add
get
aload
pop pop pop
6 -1 roll
3 -1 roll
5 -1 roll
sub
div
4 1 roll
exch sub
div
} bind def
/Mlprun {
2 copy
4 index
0 get
dup
4 1 roll
Mlprun1
3 copy
8 -2 roll
9 -1 roll
{
3 copy
Mlprun1
3 copy
11 -3 roll
/gt Mlpminmax
8 3 roll
11 -3 roll
/lt Mlpminmax
8 3 roll
} forall
pop pop pop pop
3 1 roll
pop pop
aload pop
5 -1 roll
aload pop
exch
6 -1 roll
Mlprun2
8 2 roll
4 -1 roll
Mlprun2
6 2 roll
3 -1 roll
Mlprun2
4 2 roll
exch
Mlprun2
6 2 roll
} bind def
/Mlprun1 {
aload pop
exch
6 -1 roll
5 -1 roll
mul add
4 -2 roll
mul
3 -1 roll
add
} bind def
/Mlprun2 {
2 copy
add 2 div
3 1 roll
exch sub
} bind def
/Mlpminmax {
cvx
2 index
6 index
2 index
exec
{
7 -3 roll
4 -1 roll
} if
1 index
5 index
3 -1 roll
exec
{
4 1 roll
pop
5 -1 roll
aload
pop pop
4 -1 roll
aload pop
[
8 -2 roll
pop
5 -2 roll
pop
6 -2 roll
pop
5 -1 roll
]
4 1 roll
pop
}
{
pop pop pop
} ifelse
} bind def
/Mlp1 {
5 index
3 index	sub
5 index
2 index mul
1 index
le
1 index
0 le
or
dup
not
{
1 index
3 index	div
.99999 mul
8 -1 roll
pop
7 1 roll
}
if
8 -1 roll
2 div
7 -2 roll
pop sub
5 index
6 -3 roll
pop pop
mul sub
exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
outflag
1
eq
{
/outflag 0 def
/intop 0 def
/inrht 0 def
} if		
5 index
gsave
Mtmatrix setmatrix
Mvboxa pop
grestore
3 -1 roll
pop
dup
intop
gt
{
/intop
exch def
}
{ pop }
ifelse
dup
inrht
gt
{
/inrht
exch def
}
{ pop }
ifelse
pop
/inflag
1 def
} bind def
/Mouter {
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
inflag
1 eq
{
dup
0 lt
{
dup
intop
mul
neg
/yadtop
exch def
} if
dup
0 gt
{
dup
intop
mul
/yadbot
exch def
}
if
pop
dup
0 lt
{
dup
inrht
mul
neg
/xadrht
exch def
} if
dup
0 gt
{
dup
inrht
mul
/xadlft
exch def
} if
pop
/outflag 1 def
}
{ pop pop}
ifelse
/inflag 0 def
/inrht 0 def
/intop 0 def
} bind def	
/Mboxout {
outflag
1
eq
{
4 -1
roll
xadlft
leadjust
add
sub
4 1 roll
3 -1
roll
yadbot
leadjust
add
sub
3 1
roll
exch
xadrht
leadjust
add
add
exch
yadtop
leadjust
add
add
/outflag 0 def
/xadlft 0 def
/yadbot 0 def
/xadrht 0 def
/yadtop 0 def
} if
} bind def
/leadjust {
(m) stringwidth pop
.5 mul
} bind def
/Mrotcheck {
dup
90
eq
{
yadbot
/yadbot
xadrht
def	
/xadrht
yadtop
def
/yadtop
xadlft
def
/xadlft
exch
def
}
if
dup
cos
1 index
sin
Checkaux
dup
cos
1 index
sin neg
exch
Checkaux
3 1 roll
pop pop
} bind def
/Checkaux {
4 index
exch
4 index
mul
3 1 roll
mul add
4 1 roll
} bind def
/Mboxrot {
Mrot
90 eq
{
brotaux
4 2
roll
}
if
Mrot
180 eq
{
4 2
roll
brotaux
4 2
roll
brotaux
}	
if
Mrot
270 eq
{
4 2
roll
brotaux
}
if
} bind def
/brotaux {
neg
exch
neg
} bind def
/Mabsproc {
0
matrix defaultmatrix
dtransform idtransform
dup mul exch
dup mul
add sqrt
} bind def
/Mabswid {
Mabsproc
setlinewidth	
} bind def
/Mabsdash {
exch
[
exch
{
Mabsproc
}
forall
]
exch
setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop}
repeat
} bind def
} ifelse
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/setcmykcolor where
{ pop}
{ /setcmykcolor {
4 1
roll
[
4 1 
roll
]
{
1 index
sub
1
sub neg
dup
0
lt
{
pop
0
}
if
dup
1
gt
{
pop
1
}
if
exch
} forall
pop
setrgbcolor
} bind def
} ifelse
/Mcharproc
{
currentfile
(x)
readhexstring
pop
0 get
exch
div
} bind def
/Mshadeproc
{
dup
3 1
roll
{
dup
Mcharproc
3 1
roll
} repeat
1 eq
{
setgray
}
{
3 eq
{
setrgbcolor
}
{
setcmykcolor
} ifelse
} ifelse
} bind def
/Mrectproc
{
3 index
2 index
moveto
2 index
3 -1
roll
lineto
dup
3 1
roll
lineto
lineto
fill
} bind def
/Mcolorimage
{
7 1
roll
pop
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
9 index
Mshadeproc
Mrectproc
} for
pop
} for
pop pop pop pop
} bind def
/Mimage
{
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
Mcharproc
setgray
Mrectproc
} for
pop
} for
pop pop pop
} bind def

MathPictureStart
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0454545 0.909091 0.581679 0.727099 [
[(0)] .04545 0 0 2 0 Minner Mrotsboxa
[(0.2)] .22727 0 0 2 0 Minner Mrotsboxa
[(0.4)] .40909 0 0 2 0 Minner Mrotsboxa
[(0.6)] .59091 0 0 2 0 Minner Mrotsboxa
[(0.8)] .77273 0 0 2 0 Minner Mrotsboxa
[(1)] .95455 0 0 2 0 Minner Mrotsboxa
[()] .5 0 0 2 0 0 -1 Mouter Mrotsboxa
[(-0.8)] -0.0125 0 1 0 0 Minner Mrotsboxa
[(-0.6)] -0.0125 .14542 1 0 0 Minner Mrotsboxa
[(-0.4)] -0.0125 .29084 1 0 0 Minner Mrotsboxa
[(-0.2)] -0.0125 .43626 1 0 0 Minner Mrotsboxa
[(0)] -0.0125 .58168 1 0 0 Minner Mrotsboxa
[(Epsilon = 0.05, 0.03, 0.005)] .5 .61803 0 -4 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 .61903 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 g
p
p
.002 w
.04545 0 m
.04545 .00625 L
s
P
[(0)] .04545 0 0 2 0 Minner Mrotshowa
p
.002 w
.22727 0 m
.22727 .00625 L
s
P
[(0.2)] .22727 0 0 2 0 Minner Mrotshowa
p
.002 w
.40909 0 m
.40909 .00625 L
s
P
[(0.4)] .40909 0 0 2 0 Minner Mrotshowa
p
.002 w
.59091 0 m
.59091 .00625 L
s
P
[(0.6)] .59091 0 0 2 0 Minner Mrotshowa
p
.002 w
.77273 0 m
.77273 .00625 L
s
P
[(0.8)] .77273 0 0 2 0 Minner Mrotshowa
p
.002 w
.95455 0 m
.95455 .00625 L
s
P
[(1)] .95455 0 0 2 0 Minner Mrotshowa
p
.001 w
.08182 0 m
.08182 .00375 L
s
P
p
.001 w
.11818 0 m
.11818 .00375 L
s
P
p
.001 w
.15455 0 m
.15455 .00375 L
s
P
p
.001 w
.19091 0 m
.19091 .00375 L
s
P
p
.001 w
.26364 0 m
.26364 .00375 L
s
P
p
.001 w
.3 0 m
.3 .00375 L
s
P
p
.001 w
.33636 0 m
.33636 .00375 L
s
P
p
.001 w
.37273 0 m
.37273 .00375 L
s
P
p
.001 w
.44545 0 m
.44545 .00375 L
s
P
p
.001 w
.48182 0 m
.48182 .00375 L
s
P
p
.001 w
.51818 0 m
.51818 .00375 L
s
P
p
.001 w
.55455 0 m
.55455 .00375 L
s
P
p
.001 w
.62727 0 m
.62727 .00375 L
s
P
p
.001 w
.66364 0 m
.66364 .00375 L
s
P
p
.001 w
.7 0 m
.7 .00375 L
s
P
p
.001 w
.73636 0 m
.73636 .00375 L
s
P
p
.001 w
.80909 0 m
.80909 .00375 L
s
P
p
.001 w
.84545 0 m
.84545 .00375 L
s
P
p
.001 w
.88182 0 m
.88182 .00375 L
s
P
p
.001 w
.91818 0 m
.91818 .00375 L
s
P
p
.001 w
.00909 0 m
.00909 .00375 L
s
P
p
.001 w
.99091 0 m
.99091 .00375 L
s
P
[()] .5 0 0 2 0 0 -1 Mouter Mrotshowa
p
.002 w
0 0 m
1 0 L
s
P
p
.002 w
0 0 m
.00625 0 L
s
P
[(-0.8)] -0.0125 0 1 0 0 Minner Mrotshowa
p
.002 w
0 .14542 m
.00625 .14542 L
s
P
[(-0.6)] -0.0125 .14542 1 0 0 Minner Mrotshowa
p
.002 w
0 .29084 m
.00625 .29084 L
s
P
[(-0.4)] -0.0125 .29084 1 0 0 Minner Mrotshowa
p
.002 w
0 .43626 m
.00625 .43626 L
s
P
[(-0.2)] -0.0125 .43626 1 0 0 Minner Mrotshowa
p
.002 w
0 .58168 m
.00625 .58168 L
s
P
[(0)] -0.0125 .58168 1 0 0 Minner Mrotshowa
p
.001 w
0 .02908 m
.00375 .02908 L
s
P
p
.001 w
0 .05817 m
.00375 .05817 L
s
P
p
.001 w
0 .08725 m
.00375 .08725 L
s
P
p
.001 w
0 .11634 m
.00375 .11634 L
s
P
p
.001 w
0 .1745 m
.00375 .1745 L
s
P
p
.001 w
0 .20359 m
.00375 .20359 L
s
P
p
.001 w
0 .23267 m
.00375 .23267 L
s
P
p
.001 w
0 .26176 m
.00375 .26176 L
s
P
p
.001 w
0 .31992 m
.00375 .31992 L
s
P
p
.001 w
0 .34901 m
.00375 .34901 L
s
P
p
.001 w
0 .37809 m
.00375 .37809 L
s
P
p
.001 w
0 .40718 m
.00375 .40718 L
s
P
p
.001 w
0 .46534 m
.00375 .46534 L
s
P
p
.001 w
0 .49443 m
.00375 .49443 L
s
P
p
.001 w
0 .52351 m
.00375 .52351 L
s
P
p
.001 w
0 .5526 m
.00375 .5526 L
s
P
p
.001 w
0 .61076 m
.00375 .61076 L
s
P
p
.002 w
0 0 m
0 .61803 L
s
P
P
p
p
.002 w
.04545 .61178 m
.04545 .61803 L
s
P
p
.002 w
.22727 .61178 m
.22727 .61803 L
s
P
p
.002 w
.40909 .61178 m
.40909 .61803 L
s
P
p
.002 w
.59091 .61178 m
.59091 .61803 L
s
P
p
.002 w
.77273 .61178 m
.77273 .61803 L
s
P
p
.002 w
.95455 .61178 m
.95455 .61803 L
s
P
p
.001 w
.08182 .61428 m
.08182 .61803 L
s
P
p
.001 w
.11818 .61428 m
.11818 .61803 L
s
P
p
.001 w
.15455 .61428 m
.15455 .61803 L
s
P
p
.001 w
.19091 .61428 m
.19091 .61803 L
s
P
p
.001 w
.26364 .61428 m
.26364 .61803 L
s
P
p
.001 w
.3 .61428 m
.3 .61803 L
s
P
p
.001 w
.33636 .61428 m
.33636 .61803 L
s
P
p
.001 w
.37273 .61428 m
.37273 .61803 L
s
P
p
.001 w
.44545 .61428 m
.44545 .61803 L
s
P
p
.001 w
.48182 .61428 m
.48182 .61803 L
s
P
p
.001 w
.51818 .61428 m
.51818 .61803 L
s
P
p
.001 w
.55455 .61428 m
.55455 .61803 L
s
P
p
.001 w
.62727 .61428 m
.62727 .61803 L
s
P
p
.001 w
.66364 .61428 m
.66364 .61803 L
s
P
p
.001 w
.7 .61428 m
.7 .61803 L
s
P
p
.001 w
.73636 .61428 m
.73636 .61803 L
s
P
p
.001 w
.80909 .61428 m
.80909 .61803 L
s
P
p
.001 w
.84545 .61428 m
.84545 .61803 L
s
P
p
.001 w
.88182 .61428 m
.88182 .61803 L
s
P
p
.001 w
.91818 .61428 m
.91818 .61803 L
s
P
p
.001 w
.00909 .61428 m
.00909 .61803 L
s
P
p
.001 w
.99091 .61428 m
.99091 .61803 L
s
P
[(Epsilon = 0.05, 0.03, 0.005)] .5 .61803 0 -4 Mshowa
p
.002 w
0 .61803 m
1 .61803 L
s
P
p
.002 w
.99375 0 m
1 0 L
s
P
p
.002 w
.99375 .14542 m
1 .14542 L
s
P
p
.002 w
.99375 .29084 m
1 .29084 L
s
P
p
.002 w
.99375 .43626 m
1 .43626 L
s
P
p
.002 w
.99375 .58168 m
1 .58168 L
s
P
p
.001 w
.99625 .02908 m
1 .02908 L
s
P
p
.001 w
.99625 .05817 m
1 .05817 L
s
P
p
.001 w
.99625 .08725 m
1 .08725 L
s
P
p
.001 w
.99625 .11634 m
1 .11634 L
s
P
p
.001 w
.99625 .1745 m
1 .1745 L
s
P
p
.001 w
.99625 .20359 m
1 .20359 L
s
P
p
.001 w
.99625 .23267 m
1 .23267 L
s
P
p
.001 w
.99625 .26176 m
1 .26176 L
s
P
p
.001 w
.99625 .31992 m
1 .31992 L
s
P
p
.001 w
.99625 .34901 m
1 .34901 L
s
P
p
.001 w
.99625 .37809 m
1 .37809 L
s
P
p
.001 w
.99625 .40718 m
1 .40718 L
s
P
p
.001 w
.99625 .46534 m
1 .46534 L
s
P
p
.001 w
.99625 .49443 m
1 .49443 L
s
P
p
.001 w
.99625 .52351 m
1 .52351 L
s
P
p
.001 w
.99625 .5526 m
1 .5526 L
s
P
p
.001 w
.99625 .61076 m
1 .61076 L
s
P
p
.002 w
1 0 m
1 .61803 L
s
P
P
p
P
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
p
p
p
.001 w
.04545 .58168 m
.05492 .51314 L
.06439 .45658 L
.08333 .36925 L
.10227 .30592 L
.12121 .25895 L
.14015 .2237 L
.15909 .19713 L
.17803 .17716 L
.19697 .16231 L
.20644 .15647 L
.21591 .15152 L
.22538 .14739 L
.23485 .14398 L
.24432 .14124 L
.25379 .13909 L
.25852 .13822 L
.26326 .13749 L
.26799 .13687 L
.27273 .13638 L
.27746 .136 L
.2822 .13572 L
.28456 .13563 L
.28575 .13559 L
.28693 .13555 L
.28812 .13553 L
.2893 .13551 L
.29048 .13549 L
.29167 .13548 L
.29285 .13548 L
.29403 .13549 L
.29522 .1355 L
.2964 .13551 L
.29759 .13553 L
.29877 .13556 L
.30114 .13563 L
.3035 .13572 L
.30587 .13584 L
.31061 .13613 L
.32008 .13696 L
.32955 .13809 L
.34848 .14119 L
.36742 .1453 L
.38636 .1503 L
.42424 .16265 L
.46212 .17774 L
.5 .19528 L
.53788 .21508 L
.57576 .23703 L
.61364 .26112 L
Mistroke
.65152 .28733 L
.68939 .3157 L
.72727 .34628 L
.76515 .37915 L
.80303 .41441 L
.84091 .45215 L
.87879 .49251 L
.91667 .53564 L
.95455 .5817 L
Mfstroke
P
P
p
p
.001 w
.04545 .58168 m
.05492 .4742 L
.06439 .39484 L
.07386 .33437 L
.08333 .28733 L
.0928 .2502 L
.10227 .22058 L
.11174 .1968 L
.12121 .17763 L
.14015 .14962 L
.14962 .13954 L
.15909 .13145 L
.16856 .12502 L
.17803 .11997 L
.1875 .11607 L
.19697 .11315 L
.20644 .11106 L
.21117 .11028 L
.21591 .10967 L
.22064 .10921 L
.22301 .10903 L
.22538 .10889 L
.22775 .10877 L
.22893 .10873 L
.23011 .10869 L
.2313 .10866 L
.23248 .10864 L
.23366 .10863 L
.23485 .10862 L
.23603 .10862 L
.23722 .10863 L
.2384 .10864 L
.23958 .10866 L
.24077 .10869 L
.24195 .10873 L
.24432 .10881 L
.24669 .10892 L
.24905 .10906 L
.25379 .1094 L
.26326 .11033 L
.27273 .11156 L
.29167 .11484 L
.31061 .11901 L
.34848 .12951 L
.38636 .1424 L
.42424 .15734 L
.46212 .17419 L
.5 .19291 L
.53788 .2135 L
.57576 .23599 L
Mistroke
.61364 .26043 L
.65152 .28687 L
.68939 .3154 L
.72727 .34608 L
.76515 .37902 L
.80303 .41432 L
.84091 .45209 L
.87879 .49248 L
.91667 .53562 L
.95455 .58168 L
Mfstroke
P
P
p
p
.001 w
.04545 .58168 m
.04664 .49792 L
.04782 .43159 L
.05019 .33395 L
.05137 .29738 L
.05256 .26674 L
.05492 .21888 L
.05729 .18404 L
.05966 .1583 L
.06203 .13908 L
.06439 .12462 L
.06676 .11369 L
.06913 .1054 L
.0715 .09909 L
.07386 .09428 L
.07623 .09062 L
.0786 .08784 L
.08097 .08573 L
.08333 .08413 L
.0857 .08293 L
.08807 .08203 L
.09044 .08138 L
.0928 .0809 L
.09399 .08072 L
.09517 .08057 L
.09635 .08045 L
.09754 .08035 L
.09872 .08027 L
.09991 .08021 L
.10109 .08017 L
.10227 .08015 L
.10346 .08014 L
.10464 .08014 L
.10582 .08015 L
.10701 .08017 L
.10819 .0802 L
.10938 .08023 L
.11174 .08033 L
.11411 .08044 L
.11648 .08058 L
.12121 .0809 L
.14015 .08258 L
.15909 .08471 L
.19697 .09019 L
.23485 .09725 L
.27273 .10591 L
.31061 .11619 L
.34848 .12811 L
.38636 .1417 L
.42424 .15699 L
Mistroke
.46212 .17402 L
.5 .19283 L
.53788 .21346 L
.57576 .23597 L
.61364 .26042 L
.65152 .28687 L
.68939 .31539 L
.72727 .34608 L
.76515 .37902 L
.80303 .41432 L
.84091 .45209 L
.87879 .49248 L
.91667 .53561 L
.95455 .58168 L
Mfstroke
P
P
P
% End of Graphics
MathPictureEnd
end
showpage
%%EndDocument
 @endspecial 587 1453 a(Figure)i(19:)j(T)m(est)d(Problem)f(19,)g
Fl(y)q Fm(\()p Fl(x)p Fm(\))i(v)o(ersus)g Fl(x)p eop
%%Page: 20 20
20 19 bop 262 307 a Fn(T)l(est)15 b(Problem)e(20)h Fm(\(Nonlinear\))g
([10)o(],)f([12)o(])g(and)h([6)o(,)f(p.158])262 357 y
Fl(\017y)300 342 y Fk(00)330 357 y Fm(+)c(\()p Fl(y)408
342 y Fk(0)420 357 y Fm(\))436 342 y Fi(2)467 357 y Fm(=)j(1,)58
b Fl(y)q Fm(\(0\))13 b(=)f(1)c(+)h Fl(\017)e Fm(ln)f(cosh)q(\()p
Fj(\000)p Fm(0)p Fl(:)p Fm(745)p Fl(=\017)p Fm(\))p Fl(;)16
b(y)q Fm(\(1\))d(=)f(1)c(+)h Fl(\017)e Fm(ln)f(cosh)q(\(0)p
Fl(:)p Fm(255)p Fl(=\017)p Fm(\).)262 407 y(The)14 b(exact)g(solution)f
(is)h Fl(y)q Fm(\()p Fl(x)p Fm(\))f(=)e(1)e(+)h Fl(\017)d
Fm(ln)f(cosh)q(\(\()p Fl(x)j Fj(\000)h Fm(0)p Fl(:)p
Fm(745\))p Fl(=\017)p Fm(\).)262 457 y(The)k(solution)f(has)h(a)g
(corner)h(la)o(y)o(er)e(at)h Fl(x)d Fm(=)h(0)p Fl(:)p
Fm(745.)439 1760 y @beginspecial 72 @llx 72 @lly 540
@urx 720 @ury 2834 @rwi @setspecial
%%BeginDocument: ../PLOTS/pr20.ps

/Mathdict 150 dict def
Mathdict begin
/Mlmarg		1.0 72 mul def
/Mrmarg		1.0 72 mul def
/Mbmarg		1.0 72 mul def
/Mtmarg		1.0 72 mul def
/Mwidth		8.5 72 mul def
/Mheight	11 72 mul def
/Mtransform	{  } bind def
/Mnodistort	true def
/Mfixwid	true	def
/Mfixdash	false def
/Mrot		0	def
/Mpstart {
MathPictureStart
} bind def
/Mpend {
MathPictureEnd
} bind def
/Mscale {
0 1 0 1
5 -1 roll
MathScale
} bind def
/ISOLatin1Encoding dup where
{ pop pop }
{
[
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft
/logicalnot /hyphen /registered /macron
/degree /plusminus /twosuperior /threesuperior
/acute /mu /paragraph /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright
/onequarter /onehalf /threequarters /questiondown
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis
] def
} ifelse
/MFontDict 50 dict def
/MStrCat
{
exch
dup length
2 index length add
string
dup 3 1 roll
copy
length
exch dup
4 2 roll exch
putinterval
} def
/MCreateEncoding
{
1 index
255 string cvs
(-) MStrCat
1 index MStrCat
cvn exch
(Encoding) MStrCat
cvn dup where
{
exch get
}
{
pop
StandardEncoding
} ifelse
3 1 roll
dup MFontDict exch known not
{
1 index findfont
dup length dict
begin
{1 index /FID ne
{def}
{pop pop}
ifelse} forall
/Encoding 3 index
def
currentdict
end
1 index exch definefont pop
MFontDict 1 index
null put
}
if
exch pop
exch pop
} def
/ISOLatin1 { (ISOLatin1) MCreateEncoding } def
/ISO8859 { (ISOLatin1) MCreateEncoding } def
/Mcopyfont {
dup
maxlength
dict
exch
{
1 index
/FID
eq
{
pop pop
}
{
2 index
3 1 roll
put
}
ifelse
}
forall
} def
/Plain	/Courier findfont Mcopyfont definefont pop
/Bold	/Courier-Bold findfont Mcopyfont definefont pop
/Italic /Courier-Oblique findfont Mcopyfont definefont pop
/MathPictureStart {
gsave
Mtransform
Mlmarg
Mbmarg
translate
Mwidth
Mlmarg Mrmarg add
sub
/Mwidth exch def
Mheight
Mbmarg Mtmarg add
sub
/Mheight exch def
/Mtmatrix
matrix currentmatrix
def
/Mgmatrix
matrix currentmatrix
def
} bind def
/MathPictureEnd {
grestore
} bind def
/MFill {
0 0 		moveto
Mwidth 0 	lineto
Mwidth Mheight 	lineto
0 Mheight 	lineto
fill
} bind def
/MPlotRegion {
3 index
Mwidth mul
2 index
Mheight mul
translate
exch sub
Mheight mul
/Mheight
exch def
exch sub
Mwidth mul
/Mwidth
exch def
} bind def
/MathSubStart {
Momatrix
Mgmatrix Mtmatrix
Mwidth Mheight
7 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
Mgmatrix setmatrix
9 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
2 copy translate
/Mtmatrix matrix currentmatrix def
3 -1 roll
exch sub
/Mheight exch def
sub
/Mwidth exch def
} bind def
/MathSubEnd {
/Mheight exch def
/Mwidth exch def
/Mtmatrix exch def
dup setmatrix
/Mgmatrix exch def
/Momatrix exch def
} bind def
/Mdot {
moveto
0 0 rlineto
stroke
} bind def
/Mtetra {
moveto
lineto
lineto
lineto
fill
} bind def
/Metetra {
moveto
lineto
lineto
lineto
closepath
gsave
fill
grestore
0 setgray
stroke
} bind def
/Mistroke {
flattenpath
0 0 0
{
4 2 roll
pop pop
}
{
4 -1 roll
2 index
sub dup mul
4 -1 roll
2 index
sub dup mul
add sqrt
4 -1 roll
add
3 1 roll
}
{
stop
}
{
stop
}
pathforall
pop pop
currentpoint
stroke
moveto
currentdash
3 -1 roll
add
setdash
} bind def
/Mfstroke {
stroke
currentdash
pop 0
setdash
} bind def
/Mrotsboxa {
gsave
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
grestore
Msboxa
3  -1 roll
/Mtmatrix
exch def
/Mrot
0 def
} bind def
/Msboxa {
newpath
5 -1 roll
Mvboxa
pop
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Msboxa1
5 -3 roll
Msboxa1
Mboxrot
[
7 -2 roll
2 copy
[
3 1 roll
10 -1 roll
9 -1 roll
]
6 1 roll
5 -2 roll
]
} bind def
/Msboxa1 {
sub
2 div
dup
2 index
1 add
mul
3 -1 roll
-1 add
3 -1 roll
mul
} bind def
/Mvboxa	{
Mfixwid
{
Mvboxa1
}
{
dup
Mwidthcal
0 exch
{
add
}
forall
exch
Mvboxa1
4 index
7 -1 roll
add
4 -1 roll
pop
3 1 roll
}
ifelse
} bind def
/Mvboxa1 {
gsave
newpath
[ true
3 -1 roll
{
Mbbox
5 -1 roll
{
0
5 1 roll
}
{
7 -1 roll
exch sub
(m) stringwidth pop
.3 mul
sub
7 1 roll
6 -1 roll
4 -1 roll
Mmin
3 -1 roll
5 index
add
5 -1 roll
4 -1 roll
Mmax
4 -1 roll
}
ifelse
false
}
forall
{ stop } if
counttomark
1 add
4 roll
]
grestore
} bind def
/Mbbox {
1 dict begin
0 0 moveto
/temp (T) def
{	gsave
currentpoint newpath moveto
temp 0 3 -1 roll put temp
false charpath flattenpath currentpoint
pathbbox
grestore moveto lineto moveto} forall
pathbbox
newpath
end
} bind def
/Mmin {
2 copy
gt
{ exch } if
pop
} bind def
/Mmax {
2 copy
lt
{ exch } if
pop
} bind def
/Mrotshowa {
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
Mgmatrix setmatrix
Mshowa
/Mtmatrix
exch def
/Mrot 0 def
} bind def
/Mshowa {
4 -2 roll
moveto
2 index
Mtmatrix setmatrix
Mvboxa
7 1 roll
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Mshowa1
4 1 roll
Mshowa1
rmoveto
currentpoint
Mfixwid
{
Mshowax
}
{
Mshoway
}
ifelse
pop pop pop pop
Mgmatrix setmatrix
} bind def
/Mshowax {	
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
Mfixdash
{
Mfixdashp		
}
if
show
} for
} bind def
/Mfixdashp {
dup
length
1
gt
1 index
true exch
{
45
eq
and
} forall
and
{
gsave
(--)		
stringwidth pop
(-)
stringwidth pop
sub
2 div
0 rmoveto
dup
length
1 sub
{
(-)
show
}
repeat
grestore
}
if
} bind def	
/Mshoway {
3 index
Mwidthcal
5 1 roll
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
[
6 index
aload
length
2 add
-1 roll
{
pop
Strform
stringwidth
pop
neg 
exch
add
0 rmoveto
}
exch
kshow
cleartomark
} for
pop	
} bind def
/Mwidthcal {
[
exch
{
Mwidthcal1
}
forall
]
[
exch
dup
Maxlen
-1 add
0 1
3 -1 roll
{
[
exch
2 index
{		 
1 index	
Mget
exch
}
forall		
pop
Maxget
exch
}
for
pop
]
Mreva
} bind def
/Mreva	{
[
exch
aload
length
-1 1
{1 roll}
for
]
} bind def
/Mget	{
1 index
length
-1 add
1 index
ge
{
get
}
{
pop pop
0
}
ifelse
} bind def
/Maxlen	{
[
exch
{
length
}
forall
Maxget
} bind def
/Maxget	{
counttomark
-1 add
1 1
3 -1 roll
{
pop
Mmax
}
for
exch
pop
} bind def
/Mwidthcal1 {
[
exch
{
Strform
stringwidth
pop
}
forall
]
} bind def
/Strform {
/tem (x) def
tem 0
3 -1 roll
put
tem
} bind def
/Mshowa1 {
2 copy
add
4 1 roll
sub
mul
sub
-2 div
} bind def
/MathScale {
Mwidth
Mheight
Mlp
translate
scale
/yscale exch def
/ybias exch def
/xscale exch def
/xbias exch def
/Momatrix
xscale yscale matrix scale
xbias ybias matrix translate
matrix concatmatrix def
/Mgmatrix
matrix currentmatrix
def
} bind def
/Mlp {
3 copy
Mlpfirst
{
Mnodistort
{
Mmin
dup
} if
4 index
2 index
2 index
Mlprun
11 index
11 -1 roll
10 -4 roll
Mlp1
8 index
9 -5 roll
Mlp1
4 -1 roll
and
{ exit } if
3 -1 roll
pop pop
} loop
exch
3 1 roll
7 -3 roll
pop pop pop
} bind def
/Mlpfirst {
3 -1 roll
dup length
2 copy
-2 add
get
aload
pop pop pop
4 -2 roll
-1 add
get
aload
pop pop pop
6 -1 roll
3 -1 roll
5 -1 roll
sub
div
4 1 roll
exch sub
div
} bind def
/Mlprun {
2 copy
4 index
0 get
dup
4 1 roll
Mlprun1
3 copy
8 -2 roll
9 -1 roll
{
3 copy
Mlprun1
3 copy
11 -3 roll
/gt Mlpminmax
8 3 roll
11 -3 roll
/lt Mlpminmax
8 3 roll
} forall
pop pop pop pop
3 1 roll
pop pop
aload pop
5 -1 roll
aload pop
exch
6 -1 roll
Mlprun2
8 2 roll
4 -1 roll
Mlprun2
6 2 roll
3 -1 roll
Mlprun2
4 2 roll
exch
Mlprun2
6 2 roll
} bind def
/Mlprun1 {
aload pop
exch
6 -1 roll
5 -1 roll
mul add
4 -2 roll
mul
3 -1 roll
add
} bind def
/Mlprun2 {
2 copy
add 2 div
3 1 roll
exch sub
} bind def
/Mlpminmax {
cvx
2 index
6 index
2 index
exec
{
7 -3 roll
4 -1 roll
} if
1 index
5 index
3 -1 roll
exec
{
4 1 roll
pop
5 -1 roll
aload
pop pop
4 -1 roll
aload pop
[
8 -2 roll
pop
5 -2 roll
pop
6 -2 roll
pop
5 -1 roll
]
4 1 roll
pop
}
{
pop pop pop
} ifelse
} bind def
/Mlp1 {
5 index
3 index	sub
5 index
2 index mul
1 index
le
1 index
0 le
or
dup
not
{
1 index
3 index	div
.99999 mul
8 -1 roll
pop
7 1 roll
}
if
8 -1 roll
2 div
7 -2 roll
pop sub
5 index
6 -3 roll
pop pop
mul sub
exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
outflag
1
eq
{
/outflag 0 def
/intop 0 def
/inrht 0 def
} if		
5 index
gsave
Mtmatrix setmatrix
Mvboxa pop
grestore
3 -1 roll
pop
dup
intop
gt
{
/intop
exch def
}
{ pop }
ifelse
dup
inrht
gt
{
/inrht
exch def
}
{ pop }
ifelse
pop
/inflag
1 def
} bind def
/Mouter {
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
inflag
1 eq
{
dup
0 lt
{
dup
intop
mul
neg
/yadtop
exch def
} if
dup
0 gt
{
dup
intop
mul
/yadbot
exch def
}
if
pop
dup
0 lt
{
dup
inrht
mul
neg
/xadrht
exch def
} if
dup
0 gt
{
dup
inrht
mul
/xadlft
exch def
} if
pop
/outflag 1 def
}
{ pop pop}
ifelse
/inflag 0 def
/inrht 0 def
/intop 0 def
} bind def	
/Mboxout {
outflag
1
eq
{
4 -1
roll
xadlft
leadjust
add
sub
4 1 roll
3 -1
roll
yadbot
leadjust
add
sub
3 1
roll
exch
xadrht
leadjust
add
add
exch
yadtop
leadjust
add
add
/outflag 0 def
/xadlft 0 def
/yadbot 0 def
/xadrht 0 def
/yadtop 0 def
} if
} bind def
/leadjust {
(m) stringwidth pop
.5 mul
} bind def
/Mrotcheck {
dup
90
eq
{
yadbot
/yadbot
xadrht
def	
/xadrht
yadtop
def
/yadtop
xadlft
def
/xadlft
exch
def
}
if
dup
cos
1 index
sin
Checkaux
dup
cos
1 index
sin neg
exch
Checkaux
3 1 roll
pop pop
} bind def
/Checkaux {
4 index
exch
4 index
mul
3 1 roll
mul add
4 1 roll
} bind def
/Mboxrot {
Mrot
90 eq
{
brotaux
4 2
roll
}
if
Mrot
180 eq
{
4 2
roll
brotaux
4 2
roll
brotaux
}	
if
Mrot
270 eq
{
4 2
roll
brotaux
}
if
} bind def
/brotaux {
neg
exch
neg
} bind def
/Mabsproc {
0
matrix defaultmatrix
dtransform idtransform
dup mul exch
dup mul
add sqrt
} bind def
/Mabswid {
Mabsproc
setlinewidth	
} bind def
/Mabsdash {
exch
[
exch
{
Mabsproc
}
forall
]
exch
setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop}
repeat
} bind def
} ifelse
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/setcmykcolor where
{ pop}
{ /setcmykcolor {
4 1
roll
[
4 1 
roll
]
{
1 index
sub
1
sub neg
dup
0
lt
{
pop
0
}
if
dup
1
gt
{
pop
1
}
if
exch
} forall
pop
setrgbcolor
} bind def
} ifelse
/Mcharproc
{
currentfile
(x)
readhexstring
pop
0 get
exch
div
} bind def
/Mshadeproc
{
dup
3 1
roll
{
dup
Mcharproc
3 1
roll
} repeat
1 eq
{
setgray
}
{
3 eq
{
setrgbcolor
}
{
setcmykcolor
} ifelse
} ifelse
} bind def
/Mrectproc
{
3 index
2 index
moveto
2 index
3 -1
roll
lineto
dup
3 1
roll
lineto
lineto
fill
} bind def
/Mcolorimage
{
7 1
roll
pop
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
9 index
Mshadeproc
Mrectproc
} for
pop
} for
pop pop pop pop
} bind def
/Mimage
{
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
Mcharproc
setgray
Mrectproc
} for
pop
} for
pop pop pop
} bind def

MathPictureStart
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0454545 0.909091 -0.690744 0.727099 [
[(0)] .04545 0 0 2 0 Minner Mrotsboxa
[(0.2)] .22727 0 0 2 0 Minner Mrotsboxa
[(0.4)] .40909 0 0 2 0 Minner Mrotsboxa
[(0.6)] .59091 0 0 2 0 Minner Mrotsboxa
[(0.8)] .77273 0 0 2 0 Minner Mrotsboxa
[(1)] .95455 0 0 2 0 Minner Mrotsboxa
[()] .5 0 0 2 0 0 -1 Mouter Mrotsboxa
[(1)] -0.0125 .03635 1 0 0 Minner Mrotsboxa
[(1.2)] -0.0125 .18177 1 0 0 Minner Mrotsboxa
[(1.4)] -0.0125 .32719 1 0 0 Minner Mrotsboxa
[(1.6)] -0.0125 .47261 1 0 0 Minner Mrotsboxa
[(1.8)] -0.0125 .61803 1 0 0 Minner Mrotsboxa
[(Epsilon = 0.5, 0.3, 0.06)] .5 .61803 0 -4 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 .61903 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 g
p
p
.002 w
.04545 0 m
.04545 .00625 L
s
P
[(0)] .04545 0 0 2 0 Minner Mrotshowa
p
.002 w
.22727 0 m
.22727 .00625 L
s
P
[(0.2)] .22727 0 0 2 0 Minner Mrotshowa
p
.002 w
.40909 0 m
.40909 .00625 L
s
P
[(0.4)] .40909 0 0 2 0 Minner Mrotshowa
p
.002 w
.59091 0 m
.59091 .00625 L
s
P
[(0.6)] .59091 0 0 2 0 Minner Mrotshowa
p
.002 w
.77273 0 m
.77273 .00625 L
s
P
[(0.8)] .77273 0 0 2 0 Minner Mrotshowa
p
.002 w
.95455 0 m
.95455 .00625 L
s
P
[(1)] .95455 0 0 2 0 Minner Mrotshowa
p
.001 w
.08182 0 m
.08182 .00375 L
s
P
p
.001 w
.11818 0 m
.11818 .00375 L
s
P
p
.001 w
.15455 0 m
.15455 .00375 L
s
P
p
.001 w
.19091 0 m
.19091 .00375 L
s
P
p
.001 w
.26364 0 m
.26364 .00375 L
s
P
p
.001 w
.3 0 m
.3 .00375 L
s
P
p
.001 w
.33636 0 m
.33636 .00375 L
s
P
p
.001 w
.37273 0 m
.37273 .00375 L
s
P
p
.001 w
.44545 0 m
.44545 .00375 L
s
P
p
.001 w
.48182 0 m
.48182 .00375 L
s
P
p
.001 w
.51818 0 m
.51818 .00375 L
s
P
p
.001 w
.55455 0 m
.55455 .00375 L
s
P
p
.001 w
.62727 0 m
.62727 .00375 L
s
P
p
.001 w
.66364 0 m
.66364 .00375 L
s
P
p
.001 w
.7 0 m
.7 .00375 L
s
P
p
.001 w
.73636 0 m
.73636 .00375 L
s
P
p
.001 w
.80909 0 m
.80909 .00375 L
s
P
p
.001 w
.84545 0 m
.84545 .00375 L
s
P
p
.001 w
.88182 0 m
.88182 .00375 L
s
P
p
.001 w
.91818 0 m
.91818 .00375 L
s
P
p
.001 w
.00909 0 m
.00909 .00375 L
s
P
p
.001 w
.99091 0 m
.99091 .00375 L
s
P
[()] .5 0 0 2 0 0 -1 Mouter Mrotshowa
p
.002 w
0 0 m
1 0 L
s
P
p
.002 w
0 .03635 m
.00625 .03635 L
s
P
[(1)] -0.0125 .03635 1 0 0 Minner Mrotshowa
p
.002 w
0 .18177 m
.00625 .18177 L
s
P
[(1.2)] -0.0125 .18177 1 0 0 Minner Mrotshowa
p
.002 w
0 .32719 m
.00625 .32719 L
s
P
[(1.4)] -0.0125 .32719 1 0 0 Minner Mrotshowa
p
.002 w
0 .47261 m
.00625 .47261 L
s
P
[(1.6)] -0.0125 .47261 1 0 0 Minner Mrotshowa
p
.002 w
0 .61803 m
.00625 .61803 L
s
P
[(1.8)] -0.0125 .61803 1 0 0 Minner Mrotshowa
p
.001 w
0 .06544 m
.00375 .06544 L
s
P
p
.001 w
0 .09452 m
.00375 .09452 L
s
P
p
.001 w
0 .12361 m
.00375 .12361 L
s
P
p
.001 w
0 .15269 m
.00375 .15269 L
s
P
p
.001 w
0 .21086 m
.00375 .21086 L
s
P
p
.001 w
0 .23994 m
.00375 .23994 L
s
P
p
.001 w
0 .26903 m
.00375 .26903 L
s
P
p
.001 w
0 .29811 m
.00375 .29811 L
s
P
p
.001 w
0 .35628 m
.00375 .35628 L
s
P
p
.001 w
0 .38536 m
.00375 .38536 L
s
P
p
.001 w
0 .41445 m
.00375 .41445 L
s
P
p
.001 w
0 .44353 m
.00375 .44353 L
s
P
p
.001 w
0 .5017 m
.00375 .5017 L
s
P
p
.001 w
0 .53078 m
.00375 .53078 L
s
P
p
.001 w
0 .55987 m
.00375 .55987 L
s
P
p
.001 w
0 .58895 m
.00375 .58895 L
s
P
p
.001 w
0 .00727 m
.00375 .00727 L
s
P
p
.002 w
0 0 m
0 .61803 L
s
P
P
p
p
.002 w
.04545 .61178 m
.04545 .61803 L
s
P
p
.002 w
.22727 .61178 m
.22727 .61803 L
s
P
p
.002 w
.40909 .61178 m
.40909 .61803 L
s
P
p
.002 w
.59091 .61178 m
.59091 .61803 L
s
P
p
.002 w
.77273 .61178 m
.77273 .61803 L
s
P
p
.002 w
.95455 .61178 m
.95455 .61803 L
s
P
p
.001 w
.08182 .61428 m
.08182 .61803 L
s
P
p
.001 w
.11818 .61428 m
.11818 .61803 L
s
P
p
.001 w
.15455 .61428 m
.15455 .61803 L
s
P
p
.001 w
.19091 .61428 m
.19091 .61803 L
s
P
p
.001 w
.26364 .61428 m
.26364 .61803 L
s
P
p
.001 w
.3 .61428 m
.3 .61803 L
s
P
p
.001 w
.33636 .61428 m
.33636 .61803 L
s
P
p
.001 w
.37273 .61428 m
.37273 .61803 L
s
P
p
.001 w
.44545 .61428 m
.44545 .61803 L
s
P
p
.001 w
.48182 .61428 m
.48182 .61803 L
s
P
p
.001 w
.51818 .61428 m
.51818 .61803 L
s
P
p
.001 w
.55455 .61428 m
.55455 .61803 L
s
P
p
.001 w
.62727 .61428 m
.62727 .61803 L
s
P
p
.001 w
.66364 .61428 m
.66364 .61803 L
s
P
p
.001 w
.7 .61428 m
.7 .61803 L
s
P
p
.001 w
.73636 .61428 m
.73636 .61803 L
s
P
p
.001 w
.80909 .61428 m
.80909 .61803 L
s
P
p
.001 w
.84545 .61428 m
.84545 .61803 L
s
P
p
.001 w
.88182 .61428 m
.88182 .61803 L
s
P
p
.001 w
.91818 .61428 m
.91818 .61803 L
s
P
p
.001 w
.00909 .61428 m
.00909 .61803 L
s
P
p
.001 w
.99091 .61428 m
.99091 .61803 L
s
P
[(Epsilon = 0.5, 0.3, 0.06)] .5 .61803 0 -4 Mshowa
p
.002 w
0 .61803 m
1 .61803 L
s
P
p
.002 w
.99375 .03635 m
1 .03635 L
s
P
p
.002 w
.99375 .18177 m
1 .18177 L
s
P
p
.002 w
.99375 .32719 m
1 .32719 L
s
P
p
.002 w
.99375 .47261 m
1 .47261 L
s
P
p
.001 w
.99625 .06544 m
1 .06544 L
s
P
p
.001 w
.99625 .09452 m
1 .09452 L
s
P
p
.001 w
.99625 .12361 m
1 .12361 L
s
P
p
.001 w
.99625 .15269 m
1 .15269 L
s
P
p
.001 w
.99625 .21086 m
1 .21086 L
s
P
p
.001 w
.99625 .23994 m
1 .23994 L
s
P
p
.001 w
.99625 .26903 m
1 .26903 L
s
P
p
.001 w
.99625 .29811 m
1 .29811 L
s
P
p
.001 w
.99625 .35628 m
1 .35628 L
s
P
p
.001 w
.99625 .38536 m
1 .38536 L
s
P
p
.001 w
.99625 .41445 m
1 .41445 L
s
P
p
.001 w
.99625 .44353 m
1 .44353 L
s
P
p
.001 w
.99625 .5017 m
1 .5017 L
s
P
p
.001 w
.99625 .53078 m
1 .53078 L
s
P
p
.001 w
.99625 .55987 m
1 .55987 L
s
P
p
.001 w
.99625 .58895 m
1 .58895 L
s
P
p
.001 w
.99625 .00727 m
1 .00727 L
s
P
p
.002 w
1 0 m
1 .61803 L
s
P
P
p
P
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
p
p
p
.001 w
.04545 .34406 m
.08333 .31694 L
.12121 .29036 L
.15909 .2644 L
.19697 .23916 L
.23485 .21476 L
.27273 .19129 L
.31061 .16891 L
.34848 .14775 L
.38636 .12795 L
.42424 .10968 L
.46212 .09309 L
.5 .07836 L
.53788 .06562 L
.57576 .05504 L
.61364 .04673 L
.63258 .04346 L
.65152 .0408 L
.67045 .03875 L
.67992 .03796 L
.68939 .03733 L
.69886 .03686 L
.7036 .03668 L
.70833 .03654 L
.71307 .03644 L
.71544 .0364 L
.71662 .03639 L
.7178 .03638 L
.71899 .03637 L
.72017 .03636 L
.72135 .03636 L
.72254 .03635 L
.72372 .03636 L
.72491 .03636 L
.72609 .03636 L
.72727 .03637 L
.72964 .0364 L
.73201 .03643 L
.73437 .03647 L
.73674 .03653 L
.74148 .03666 L
.74621 .03684 L
.75568 .03731 L
.76515 .03794 L
.78409 .03966 L
.80303 .042 L
.84091 .04851 L
.87879 .05737 L
.91667 .06849 L
.95455 .08172 L
Mistroke
Mfstroke
P
P
p
p
.001 w
.04545 .42836 m
.08333 .39855 L
.12121 .36889 L
.15909 .33943 L
.19697 .31023 L
.23485 .28138 L
.27273 .25297 L
.31061 .22515 L
.34848 .19807 L
.38636 .17195 L
.42424 .14705 L
.46212 .12368 L
.5 .10221 L
.53788 .08303 L
.57576 .0666 L
.61364 .05336 L
.63258 .04806 L
.65152 .04371 L
.67045 .04034 L
.67992 .03903 L
.68939 .03798 L
.69886 .03719 L
.7036 .03689 L
.70833 .03666 L
.71307 .03649 L
.71544 .03643 L
.71662 .03641 L
.7178 .03639 L
.71899 .03638 L
.72017 .03636 L
.72135 .03636 L
.72254 .03635 L
.72372 .03636 L
.72491 .03636 L
.72609 .03637 L
.72727 .03639 L
.72964 .03643 L
.73201 .03648 L
.73437 .03655 L
.73674 .03664 L
.74148 .03687 L
.74621 .03716 L
.75568 .03794 L
.76515 .03898 L
.78409 .04183 L
.80303 .04568 L
.84091 .05622 L
.87879 .07027 L
.91667 .0874 L
.95455 .10717 L
Mistroke
Mfstroke
P
P
p
p
.001 w
.04545 .5478 m
.08333 .51751 L
.12121 .48721 L
.15909 .45692 L
.19697 .42662 L
.23485 .39633 L
.27273 .36603 L
.31061 .33573 L
.34848 .30544 L
.38636 .27514 L
.42424 .24485 L
.46212 .21455 L
.5 .18427 L
.53788 .15401 L
.57576 .12386 L
.61364 .09416 L
.65152 .06616 L
.67045 .05391 L
.67992 .0486 L
.68939 .04404 L
.69886 .0404 L
.7036 .03898 L
.70833 .03786 L
.71307 .03704 L
.71544 .03674 L
.71662 .03663 L
.7178 .03653 L
.71899 .03646 L
.72017 .0364 L
.72135 .03637 L
.72254 .03636 L
.72372 .03636 L
.72491 .03639 L
.72609 .03644 L
.72727 .03651 L
.72964 .0367 L
.73201 .03698 L
.73437 .03734 L
.73674 .03778 L
.74148 .03888 L
.74621 .04028 L
.75568 .04388 L
.76515 .0484 L
.80303 .07258 L
.84091 .10121 L
.87879 .13108 L
.91667 .16127 L
.95455 .19153 L
s
P
P
P
% End of Graphics
MathPictureEnd
end
showpage
%%EndDocument
 @endspecial 587 1379 a(Figure)i(20:)j(T)m(est)d(Problem)f(20,)g
Fl(y)q Fm(\()p Fl(x)p Fm(\))i(v)o(ersus)g Fl(x)p eop
%%Page: 21 21
21 20 bop 262 307 a Fn(T)l(est)15 b(Problem)e(21)h Fm(\(Nonlinear\))g
([3)o(])262 357 y Fl(\017y)300 342 y Fk(00)333 357 y
Fm(=)e Fl(y)f Fm(+)e Fl(y)470 342 y Fi(2)499 357 y Fj(\000)h
Fm(exp\()p Fj(\000)p Fm(2)p Fl(x=)718 327 y Fj(p)p 752
327 17 2 v 752 357 a Fl(\017)p Fm(\),)60 b Fl(y)q Fm(\(0\))12
b(=)g(1)p Fl(;)18 b(y)q Fm(\(1\))12 b(=)g(exp\()p Fj(\000)p
Fm(1)p Fl(=)1321 327 y Fj(p)p 1356 327 V 30 x Fl(\017)p
Fm(\).)262 407 y(The)i(exact)g(solution)f(is)h Fl(y)q
Fm(\()p Fl(x)p Fm(\))f(=)e(exp)q(\()p Fj(\000)p Fl(x=)945
377 y Fj(p)p 979 377 V 979 407 a Fl(\017)p Fm(\).)262
457 y(The)j(solution)f(has)h(a)g(b)q(oundary)f(la)o(y)o(er)h(of)f
(width)h Fl(O)q Fm(\()1114 427 y Fj(p)p 1148 427 V 1148
457 a Fl(\017)p Fm(\))g(at)g Fl(x)d Fm(=)h(0.)439 1762
y @beginspecial 72 @llx 72 @lly 540 @urx 720 @ury 2834
@rwi @setspecial
%%BeginDocument: ../PLOTS/pr21.ps

/Mathdict 150 dict def
Mathdict begin
/Mlmarg		1.0 72 mul def
/Mrmarg		1.0 72 mul def
/Mbmarg		1.0 72 mul def
/Mtmarg		1.0 72 mul def
/Mwidth		8.5 72 mul def
/Mheight	11 72 mul def
/Mtransform	{  } bind def
/Mnodistort	true def
/Mfixwid	true	def
/Mfixdash	false def
/Mrot		0	def
/Mpstart {
MathPictureStart
} bind def
/Mpend {
MathPictureEnd
} bind def
/Mscale {
0 1 0 1
5 -1 roll
MathScale
} bind def
/ISOLatin1Encoding dup where
{ pop pop }
{
[
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft
/logicalnot /hyphen /registered /macron
/degree /plusminus /twosuperior /threesuperior
/acute /mu /paragraph /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright
/onequarter /onehalf /threequarters /questiondown
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis
] def
} ifelse
/MFontDict 50 dict def
/MStrCat
{
exch
dup length
2 index length add
string
dup 3 1 roll
copy
length
exch dup
4 2 roll exch
putinterval
} def
/MCreateEncoding
{
1 index
255 string cvs
(-) MStrCat
1 index MStrCat
cvn exch
(Encoding) MStrCat
cvn dup where
{
exch get
}
{
pop
StandardEncoding
} ifelse
3 1 roll
dup MFontDict exch known not
{
1 index findfont
dup length dict
begin
{1 index /FID ne
{def}
{pop pop}
ifelse} forall
/Encoding 3 index
def
currentdict
end
1 index exch definefont pop
MFontDict 1 index
null put
}
if
exch pop
exch pop
} def
/ISOLatin1 { (ISOLatin1) MCreateEncoding } def
/ISO8859 { (ISOLatin1) MCreateEncoding } def
/Mcopyfont {
dup
maxlength
dict
exch
{
1 index
/FID
eq
{
pop pop
}
{
2 index
3 1 roll
put
}
ifelse
}
forall
} def
/Plain	/Courier findfont Mcopyfont definefont pop
/Bold	/Courier-Bold findfont Mcopyfont definefont pop
/Italic /Courier-Oblique findfont Mcopyfont definefont pop
/MathPictureStart {
gsave
Mtransform
Mlmarg
Mbmarg
translate
Mwidth
Mlmarg Mrmarg add
sub
/Mwidth exch def
Mheight
Mbmarg Mtmarg add
sub
/Mheight exch def
/Mtmatrix
matrix currentmatrix
def
/Mgmatrix
matrix currentmatrix
def
} bind def
/MathPictureEnd {
grestore
} bind def
/MFill {
0 0 		moveto
Mwidth 0 	lineto
Mwidth Mheight 	lineto
0 Mheight 	lineto
fill
} bind def
/MPlotRegion {
3 index
Mwidth mul
2 index
Mheight mul
translate
exch sub
Mheight mul
/Mheight
exch def
exch sub
Mwidth mul
/Mwidth
exch def
} bind def
/MathSubStart {
Momatrix
Mgmatrix Mtmatrix
Mwidth Mheight
7 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
Mgmatrix setmatrix
9 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
2 copy translate
/Mtmatrix matrix currentmatrix def
3 -1 roll
exch sub
/Mheight exch def
sub
/Mwidth exch def
} bind def
/MathSubEnd {
/Mheight exch def
/Mwidth exch def
/Mtmatrix exch def
dup setmatrix
/Mgmatrix exch def
/Momatrix exch def
} bind def
/Mdot {
moveto
0 0 rlineto
stroke
} bind def
/Mtetra {
moveto
lineto
lineto
lineto
fill
} bind def
/Metetra {
moveto
lineto
lineto
lineto
closepath
gsave
fill
grestore
0 setgray
stroke
} bind def
/Mistroke {
flattenpath
0 0 0
{
4 2 roll
pop pop
}
{
4 -1 roll
2 index
sub dup mul
4 -1 roll
2 index
sub dup mul
add sqrt
4 -1 roll
add
3 1 roll
}
{
stop
}
{
stop
}
pathforall
pop pop
currentpoint
stroke
moveto
currentdash
3 -1 roll
add
setdash
} bind def
/Mfstroke {
stroke
currentdash
pop 0
setdash
} bind def
/Mrotsboxa {
gsave
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
grestore
Msboxa
3  -1 roll
/Mtmatrix
exch def
/Mrot
0 def
} bind def
/Msboxa {
newpath
5 -1 roll
Mvboxa
pop
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Msboxa1
5 -3 roll
Msboxa1
Mboxrot
[
7 -2 roll
2 copy
[
3 1 roll
10 -1 roll
9 -1 roll
]
6 1 roll
5 -2 roll
]
} bind def
/Msboxa1 {
sub
2 div
dup
2 index
1 add
mul
3 -1 roll
-1 add
3 -1 roll
mul
} bind def
/Mvboxa	{
Mfixwid
{
Mvboxa1
}
{
dup
Mwidthcal
0 exch
{
add
}
forall
exch
Mvboxa1
4 index
7 -1 roll
add
4 -1 roll
pop
3 1 roll
}
ifelse
} bind def
/Mvboxa1 {
gsave
newpath
[ true
3 -1 roll
{
Mbbox
5 -1 roll
{
0
5 1 roll
}
{
7 -1 roll
exch sub
(m) stringwidth pop
.3 mul
sub
7 1 roll
6 -1 roll
4 -1 roll
Mmin
3 -1 roll
5 index
add
5 -1 roll
4 -1 roll
Mmax
4 -1 roll
}
ifelse
false
}
forall
{ stop } if
counttomark
1 add
4 roll
]
grestore
} bind def
/Mbbox {
1 dict begin
0 0 moveto
/temp (T) def
{	gsave
currentpoint newpath moveto
temp 0 3 -1 roll put temp
false charpath flattenpath currentpoint
pathbbox
grestore moveto lineto moveto} forall
pathbbox
newpath
end
} bind def
/Mmin {
2 copy
gt
{ exch } if
pop
} bind def
/Mmax {
2 copy
lt
{ exch } if
pop
} bind def
/Mrotshowa {
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
Mgmatrix setmatrix
Mshowa
/Mtmatrix
exch def
/Mrot 0 def
} bind def
/Mshowa {
4 -2 roll
moveto
2 index
Mtmatrix setmatrix
Mvboxa
7 1 roll
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Mshowa1
4 1 roll
Mshowa1
rmoveto
currentpoint
Mfixwid
{
Mshowax
}
{
Mshoway
}
ifelse
pop pop pop pop
Mgmatrix setmatrix
} bind def
/Mshowax {	
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
Mfixdash
{
Mfixdashp		
}
if
show
} for
} bind def
/Mfixdashp {
dup
length
1
gt
1 index
true exch
{
45
eq
and
} forall
and
{
gsave
(--)		
stringwidth pop
(-)
stringwidth pop
sub
2 div
0 rmoveto
dup
length
1 sub
{
(-)
show
}
repeat
grestore
}
if
} bind def	
/Mshoway {
3 index
Mwidthcal
5 1 roll
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
[
6 index
aload
length
2 add
-1 roll
{
pop
Strform
stringwidth
pop
neg 
exch
add
0 rmoveto
}
exch
kshow
cleartomark
} for
pop	
} bind def
/Mwidthcal {
[
exch
{
Mwidthcal1
}
forall
]
[
exch
dup
Maxlen
-1 add
0 1
3 -1 roll
{
[
exch
2 index
{		 
1 index	
Mget
exch
}
forall		
pop
Maxget
exch
}
for
pop
]
Mreva
} bind def
/Mreva	{
[
exch
aload
length
-1 1
{1 roll}
for
]
} bind def
/Mget	{
1 index
length
-1 add
1 index
ge
{
get
}
{
pop pop
0
}
ifelse
} bind def
/Maxlen	{
[
exch
{
length
}
forall
Maxget
} bind def
/Maxget	{
counttomark
-1 add
1 1
3 -1 roll
{
pop
Mmax
}
for
exch
pop
} bind def
/Mwidthcal1 {
[
exch
{
Strform
stringwidth
pop
}
forall
]
} bind def
/Strform {
/tem (x) def
tem 0
3 -1 roll
put
tem
} bind def
/Mshowa1 {
2 copy
add
4 1 roll
sub
mul
sub
-2 div
} bind def
/MathScale {
Mwidth
Mheight
Mlp
translate
scale
/yscale exch def
/ybias exch def
/xscale exch def
/xbias exch def
/Momatrix
xscale yscale matrix scale
xbias ybias matrix translate
matrix concatmatrix def
/Mgmatrix
matrix currentmatrix
def
} bind def
/Mlp {
3 copy
Mlpfirst
{
Mnodistort
{
Mmin
dup
} if
4 index
2 index
2 index
Mlprun
11 index
11 -1 roll
10 -4 roll
Mlp1
8 index
9 -5 roll
Mlp1
4 -1 roll
and
{ exit } if
3 -1 roll
pop pop
} loop
exch
3 1 roll
7 -3 roll
pop pop pop
} bind def
/Mlpfirst {
3 -1 roll
dup length
2 copy
-2 add
get
aload
pop pop pop
4 -2 roll
-1 add
get
aload
pop pop pop
6 -1 roll
3 -1 roll
5 -1 roll
sub
div
4 1 roll
exch sub
div
} bind def
/Mlprun {
2 copy
4 index
0 get
dup
4 1 roll
Mlprun1
3 copy
8 -2 roll
9 -1 roll
{
3 copy
Mlprun1
3 copy
11 -3 roll
/gt Mlpminmax
8 3 roll
11 -3 roll
/lt Mlpminmax
8 3 roll
} forall
pop pop pop pop
3 1 roll
pop pop
aload pop
5 -1 roll
aload pop
exch
6 -1 roll
Mlprun2
8 2 roll
4 -1 roll
Mlprun2
6 2 roll
3 -1 roll
Mlprun2
4 2 roll
exch
Mlprun2
6 2 roll
} bind def
/Mlprun1 {
aload pop
exch
6 -1 roll
5 -1 roll
mul add
4 -2 roll
mul
3 -1 roll
add
} bind def
/Mlprun2 {
2 copy
add 2 div
3 1 roll
exch sub
} bind def
/Mlpminmax {
cvx
2 index
6 index
2 index
exec
{
7 -3 roll
4 -1 roll
} if
1 index
5 index
3 -1 roll
exec
{
4 1 roll
pop
5 -1 roll
aload
pop pop
4 -1 roll
aload pop
[
8 -2 roll
pop
5 -2 roll
pop
6 -2 roll
pop
5 -1 roll
]
4 1 roll
pop
}
{
pop pop pop
} ifelse
} bind def
/Mlp1 {
5 index
3 index	sub
5 index
2 index mul
1 index
le
1 index
0 le
or
dup
not
{
1 index
3 index	div
.99999 mul
8 -1 roll
pop
7 1 roll
}
if
8 -1 roll
2 div
7 -2 roll
pop sub
5 index
6 -3 roll
pop pop
mul sub
exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
outflag
1
eq
{
/outflag 0 def
/intop 0 def
/inrht 0 def
} if		
5 index
gsave
Mtmatrix setmatrix
Mvboxa pop
grestore
3 -1 roll
pop
dup
intop
gt
{
/intop
exch def
}
{ pop }
ifelse
dup
inrht
gt
{
/inrht
exch def
}
{ pop }
ifelse
pop
/inflag
1 def
} bind def
/Mouter {
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
inflag
1 eq
{
dup
0 lt
{
dup
intop
mul
neg
/yadtop
exch def
} if
dup
0 gt
{
dup
intop
mul
/yadbot
exch def
}
if
pop
dup
0 lt
{
dup
inrht
mul
neg
/xadrht
exch def
} if
dup
0 gt
{
dup
inrht
mul
/xadlft
exch def
} if
pop
/outflag 1 def
}
{ pop pop}
ifelse
/inflag 0 def
/inrht 0 def
/intop 0 def
} bind def	
/Mboxout {
outflag
1
eq
{
4 -1
roll
xadlft
leadjust
add
sub
4 1 roll
3 -1
roll
yadbot
leadjust
add
sub
3 1
roll
exch
xadrht
leadjust
add
add
exch
yadtop
leadjust
add
add
/outflag 0 def
/xadlft 0 def
/yadbot 0 def
/xadrht 0 def
/yadtop 0 def
} if
} bind def
/leadjust {
(m) stringwidth pop
.5 mul
} bind def
/Mrotcheck {
dup
90
eq
{
yadbot
/yadbot
xadrht
def	
/xadrht
yadtop
def
/yadtop
xadlft
def
/xadlft
exch
def
}
if
dup
cos
1 index
sin
Checkaux
dup
cos
1 index
sin neg
exch
Checkaux
3 1 roll
pop pop
} bind def
/Checkaux {
4 index
exch
4 index
mul
3 1 roll
mul add
4 1 roll
} bind def
/Mboxrot {
Mrot
90 eq
{
brotaux
4 2
roll
}
if
Mrot
180 eq
{
4 2
roll
brotaux
4 2
roll
brotaux
}	
if
Mrot
270 eq
{
4 2
roll
brotaux
}
if
} bind def
/brotaux {
neg
exch
neg
} bind def
/Mabsproc {
0
matrix defaultmatrix
dtransform idtransform
dup mul exch
dup mul
add sqrt
} bind def
/Mabswid {
Mabsproc
setlinewidth	
} bind def
/Mabsdash {
exch
[
exch
{
Mabsproc
}
forall
]
exch
setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop}
repeat
} bind def
} ifelse
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/setcmykcolor where
{ pop}
{ /setcmykcolor {
4 1
roll
[
4 1 
roll
]
{
1 index
sub
1
sub neg
dup
0
lt
{
pop
0
}
if
dup
1
gt
{
pop
1
}
if
exch
} forall
pop
setrgbcolor
} bind def
} ifelse
/Mcharproc
{
currentfile
(x)
readhexstring
pop
0 get
exch
div
} bind def
/Mshadeproc
{
dup
3 1
roll
{
dup
Mcharproc
3 1
roll
} repeat
1 eq
{
setgray
}
{
3 eq
{
setrgbcolor
}
{
setcmykcolor
} ifelse
} ifelse
} bind def
/Mrectproc
{
3 index
2 index
moveto
2 index
3 -1
roll
lineto
dup
3 1
roll
lineto
lineto
fill
} bind def
/Mcolorimage
{
7 1
roll
pop
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
9 index
Mshadeproc
Mrectproc
} for
pop
} for
pop pop pop pop
} bind def
/Mimage
{
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
Mcharproc
setgray
Mrectproc
} for
pop
} for
pop pop pop
} bind def

MathPictureStart
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0454545 0.909091 0.0280925 0.561849 [
[(0)] .04545 0 0 2 0 Minner Mrotsboxa
[(0.2)] .22727 0 0 2 0 Minner Mrotsboxa
[(0.4)] .40909 0 0 2 0 Minner Mrotsboxa
[(0.6)] .59091 0 0 2 0 Minner Mrotsboxa
[(0.8)] .77273 0 0 2 0 Minner Mrotsboxa
[(1)] .95455 0 0 2 0 Minner Mrotsboxa
[()] .5 0 0 2 0 0 -1 Mouter Mrotsboxa
[(0)] -0.0125 .02809 1 0 0 Minner Mrotsboxa
[(0.2)] -0.0125 .14046 1 0 0 Minner Mrotsboxa
[(0.4)] -0.0125 .25283 1 0 0 Minner Mrotsboxa
[(0.6)] -0.0125 .3652 1 0 0 Minner Mrotsboxa
[(0.8)] -0.0125 .47757 1 0 0 Minner Mrotsboxa
[(1)] -0.0125 .58994 1 0 0 Minner Mrotsboxa
[(Epsilon = 0.2, 0.1, 0.01)] .5 .61803 0 -4 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 .61903 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 g
p
p
.002 w
.04545 0 m
.04545 .00625 L
s
P
[(0)] .04545 0 0 2 0 Minner Mrotshowa
p
.002 w
.22727 0 m
.22727 .00625 L
s
P
[(0.2)] .22727 0 0 2 0 Minner Mrotshowa
p
.002 w
.40909 0 m
.40909 .00625 L
s
P
[(0.4)] .40909 0 0 2 0 Minner Mrotshowa
p
.002 w
.59091 0 m
.59091 .00625 L
s
P
[(0.6)] .59091 0 0 2 0 Minner Mrotshowa
p
.002 w
.77273 0 m
.77273 .00625 L
s
P
[(0.8)] .77273 0 0 2 0 Minner Mrotshowa
p
.002 w
.95455 0 m
.95455 .00625 L
s
P
[(1)] .95455 0 0 2 0 Minner Mrotshowa
p
.001 w
.08182 0 m
.08182 .00375 L
s
P
p
.001 w
.11818 0 m
.11818 .00375 L
s
P
p
.001 w
.15455 0 m
.15455 .00375 L
s
P
p
.001 w
.19091 0 m
.19091 .00375 L
s
P
p
.001 w
.26364 0 m
.26364 .00375 L
s
P
p
.001 w
.3 0 m
.3 .00375 L
s
P
p
.001 w
.33636 0 m
.33636 .00375 L
s
P
p
.001 w
.37273 0 m
.37273 .00375 L
s
P
p
.001 w
.44545 0 m
.44545 .00375 L
s
P
p
.001 w
.48182 0 m
.48182 .00375 L
s
P
p
.001 w
.51818 0 m
.51818 .00375 L
s
P
p
.001 w
.55455 0 m
.55455 .00375 L
s
P
p
.001 w
.62727 0 m
.62727 .00375 L
s
P
p
.001 w
.66364 0 m
.66364 .00375 L
s
P
p
.001 w
.7 0 m
.7 .00375 L
s
P
p
.001 w
.73636 0 m
.73636 .00375 L
s
P
p
.001 w
.80909 0 m
.80909 .00375 L
s
P
p
.001 w
.84545 0 m
.84545 .00375 L
s
P
p
.001 w
.88182 0 m
.88182 .00375 L
s
P
p
.001 w
.91818 0 m
.91818 .00375 L
s
P
p
.001 w
.00909 0 m
.00909 .00375 L
s
P
p
.001 w
.99091 0 m
.99091 .00375 L
s
P
[()] .5 0 0 2 0 0 -1 Mouter Mrotshowa
p
.002 w
0 0 m
1 0 L
s
P
p
.002 w
0 .02809 m
.00625 .02809 L
s
P
[(0)] -0.0125 .02809 1 0 0 Minner Mrotshowa
p
.002 w
0 .14046 m
.00625 .14046 L
s
P
[(0.2)] -0.0125 .14046 1 0 0 Minner Mrotshowa
p
.002 w
0 .25283 m
.00625 .25283 L
s
P
[(0.4)] -0.0125 .25283 1 0 0 Minner Mrotshowa
p
.002 w
0 .3652 m
.00625 .3652 L
s
P
[(0.6)] -0.0125 .3652 1 0 0 Minner Mrotshowa
p
.002 w
0 .47757 m
.00625 .47757 L
s
P
[(0.8)] -0.0125 .47757 1 0 0 Minner Mrotshowa
p
.002 w
0 .58994 m
.00625 .58994 L
s
P
[(1)] -0.0125 .58994 1 0 0 Minner Mrotshowa
p
.001 w
0 .05057 m
.00375 .05057 L
s
P
p
.001 w
0 .07304 m
.00375 .07304 L
s
P
p
.001 w
0 .09551 m
.00375 .09551 L
s
P
p
.001 w
0 .11799 m
.00375 .11799 L
s
P
p
.001 w
0 .16294 m
.00375 .16294 L
s
P
p
.001 w
0 .18541 m
.00375 .18541 L
s
P
p
.001 w
0 .20788 m
.00375 .20788 L
s
P
p
.001 w
0 .23036 m
.00375 .23036 L
s
P
p
.001 w
0 .27531 m
.00375 .27531 L
s
P
p
.001 w
0 .29778 m
.00375 .29778 L
s
P
p
.001 w
0 .32025 m
.00375 .32025 L
s
P
p
.001 w
0 .34273 m
.00375 .34273 L
s
P
p
.001 w
0 .38768 m
.00375 .38768 L
s
P
p
.001 w
0 .41015 m
.00375 .41015 L
s
P
p
.001 w
0 .43262 m
.00375 .43262 L
s
P
p
.001 w
0 .4551 m
.00375 .4551 L
s
P
p
.001 w
0 .50005 m
.00375 .50005 L
s
P
p
.001 w
0 .52252 m
.00375 .52252 L
s
P
p
.001 w
0 .54499 m
.00375 .54499 L
s
P
p
.001 w
0 .56747 m
.00375 .56747 L
s
P
p
.001 w
0 .00562 m
.00375 .00562 L
s
P
p
.001 w
0 .61242 m
.00375 .61242 L
s
P
p
.002 w
0 0 m
0 .61803 L
s
P
P
p
p
.002 w
.04545 .61178 m
.04545 .61803 L
s
P
p
.002 w
.22727 .61178 m
.22727 .61803 L
s
P
p
.002 w
.40909 .61178 m
.40909 .61803 L
s
P
p
.002 w
.59091 .61178 m
.59091 .61803 L
s
P
p
.002 w
.77273 .61178 m
.77273 .61803 L
s
P
p
.002 w
.95455 .61178 m
.95455 .61803 L
s
P
p
.001 w
.08182 .61428 m
.08182 .61803 L
s
P
p
.001 w
.11818 .61428 m
.11818 .61803 L
s
P
p
.001 w
.15455 .61428 m
.15455 .61803 L
s
P
p
.001 w
.19091 .61428 m
.19091 .61803 L
s
P
p
.001 w
.26364 .61428 m
.26364 .61803 L
s
P
p
.001 w
.3 .61428 m
.3 .61803 L
s
P
p
.001 w
.33636 .61428 m
.33636 .61803 L
s
P
p
.001 w
.37273 .61428 m
.37273 .61803 L
s
P
p
.001 w
.44545 .61428 m
.44545 .61803 L
s
P
p
.001 w
.48182 .61428 m
.48182 .61803 L
s
P
p
.001 w
.51818 .61428 m
.51818 .61803 L
s
P
p
.001 w
.55455 .61428 m
.55455 .61803 L
s
P
p
.001 w
.62727 .61428 m
.62727 .61803 L
s
P
p
.001 w
.66364 .61428 m
.66364 .61803 L
s
P
p
.001 w
.7 .61428 m
.7 .61803 L
s
P
p
.001 w
.73636 .61428 m
.73636 .61803 L
s
P
p
.001 w
.80909 .61428 m
.80909 .61803 L
s
P
p
.001 w
.84545 .61428 m
.84545 .61803 L
s
P
p
.001 w
.88182 .61428 m
.88182 .61803 L
s
P
p
.001 w
.91818 .61428 m
.91818 .61803 L
s
P
p
.001 w
.00909 .61428 m
.00909 .61803 L
s
P
p
.001 w
.99091 .61428 m
.99091 .61803 L
s
P
[(Epsilon = 0.2, 0.1, 0.01)] .5 .61803 0 -4 Mshowa
p
.002 w
0 .61803 m
1 .61803 L
s
P
p
.002 w
.99375 .02809 m
1 .02809 L
s
P
p
.002 w
.99375 .14046 m
1 .14046 L
s
P
p
.002 w
.99375 .25283 m
1 .25283 L
s
P
p
.002 w
.99375 .3652 m
1 .3652 L
s
P
p
.002 w
.99375 .47757 m
1 .47757 L
s
P
p
.002 w
.99375 .58994 m
1 .58994 L
s
P
p
.001 w
.99625 .05057 m
1 .05057 L
s
P
p
.001 w
.99625 .07304 m
1 .07304 L
s
P
p
.001 w
.99625 .09551 m
1 .09551 L
s
P
p
.001 w
.99625 .11799 m
1 .11799 L
s
P
p
.001 w
.99625 .16294 m
1 .16294 L
s
P
p
.001 w
.99625 .18541 m
1 .18541 L
s
P
p
.001 w
.99625 .20788 m
1 .20788 L
s
P
p
.001 w
.99625 .23036 m
1 .23036 L
s
P
p
.001 w
.99625 .27531 m
1 .27531 L
s
P
p
.001 w
.99625 .29778 m
1 .29778 L
s
P
p
.001 w
.99625 .32025 m
1 .32025 L
s
P
p
.001 w
.99625 .34273 m
1 .34273 L
s
P
p
.001 w
.99625 .38768 m
1 .38768 L
s
P
p
.001 w
.99625 .41015 m
1 .41015 L
s
P
p
.001 w
.99625 .43262 m
1 .43262 L
s
P
p
.001 w
.99625 .4551 m
1 .4551 L
s
P
p
.001 w
.99625 .50005 m
1 .50005 L
s
P
p
.001 w
.99625 .52252 m
1 .52252 L
s
P
p
.001 w
.99625 .54499 m
1 .54499 L
s
P
p
.001 w
.99625 .56747 m
1 .56747 L
s
P
p
.001 w
.99625 .00562 m
1 .00562 L
s
P
p
.001 w
.99625 .61242 m
1 .61242 L
s
P
p
.002 w
1 0 m
1 .61803 L
s
P
P
p
P
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
p
p
p
.001 w
.04545 .58994 m
.08333 .48428 L
.12121 .39849 L
.15909 .32883 L
.19697 .27227 L
.23485 .22635 L
.27273 .18906 L
.31061 .15879 L
.34848 .13421 L
.38636 .11425 L
.42424 .09805 L
.46212 .08489 L
.5 .07421 L
.53788 .06554 L
.57576 .0585 L
.61364 .05278 L
.65152 .04814 L
.68939 .04437 L
.72727 .04131 L
.76515 .03882 L
.80303 .0368 L
.84091 .03517 L
.87879 .03383 L
.91667 .03276 L
.95455 .03188 L
s
P
P
p
p
.001 w
.04545 .58994 m
.06439 .48428 L
.08333 .39849 L
.12121 .27227 L
.14015 .22635 L
.15909 .18906 L
.17803 .15879 L
.19697 .13421 L
.21591 .11425 L
.23485 .09805 L
.25379 .08489 L
.27273 .07421 L
.31061 .0585 L
.32955 .05278 L
.34848 .04814 L
.36742 .04437 L
.38636 .04131 L
.4053 .03882 L
.42424 .0368 L
.44318 .03517 L
.46212 .03383 L
.48106 .03276 L
.5 .03188 L
.51894 .03117 L
.53788 .03059 L
.55682 .03012 L
.57576 .02974 L
.5947 .02943 L
.61364 .02918 L
.63258 .02897 L
.65152 .02881 L
.67045 .02867 L
.68939 .02856 L
.70833 .02848 L
.72727 .0284 L
.74621 .02834 L
.76515 .0283 L
.78409 .02826 L
.80303 .02823 L
.82197 .0282 L
.84091 .02818 L
.85985 .02816 L
.87879 .02815 L
.91667 .02813 L
.93561 .02812 L
.95455 .02812 L
s
P
P
p
p
.001 w
.04545 .58994 m
.04782 .46113 L
.05019 .36185 L
.05256 .28533 L
.05492 .22635 L
.05729 .1809 L
.05966 .14586 L
.06203 .11886 L
.06439 .09805 L
.06676 .08201 L
.06913 .06965 L
.0715 .06012 L
.07386 .05278 L
.07623 .04712 L
.0786 .04276 L
.08097 .03939 L
.08333 .0368 L
.0857 .03481 L
.08807 .03327 L
.09044 .03208 L
.0928 .03117 L
.09517 .03046 L
.09754 .02992 L
.09991 .0295 L
.10227 .02918 L
.10464 .02893 L
.10701 .02874 L
.10938 .02859 L
.11174 .02848 L
.11411 .02839 L
.11648 .02832 L
.11884 .02827 L
.12121 .02823 L
.12358 .0282 L
.12595 .02817 L
.12831 .02815 L
.13068 .02814 L
.13305 .02813 L
.13542 .02812 L
.13778 .02811 L
.14015 .02811 L
.14252 .02811 L
.14489 .0281 L
.14725 .0281 L
.14962 .0281 L
.15199 .0281 L
.15436 .0281 L
.15672 .0281 L
.15909 .02809 L
.16146 .02809 L
Mistroke
.16383 .02809 L
.16619 .02809 L
.16856 .02809 L
.17093 .02809 L
.1733 .02809 L
.17566 .02809 L
.17803 .02809 L
.1804 .02809 L
.18277 .02809 L
.18513 .02809 L
.1875 .02809 L
.18987 .02809 L
.19223 .02809 L
.1946 .02809 L
.19697 .02809 L
.19934 .02809 L
.2017 .02809 L
.20407 .02809 L
.20644 .02809 L
.20881 .02809 L
.21117 .02809 L
.21354 .02809 L
.21591 .02809 L
.21828 .02809 L
.22064 .02809 L
.22301 .02809 L
.22538 .02809 L
.22775 .02809 L
.23011 .02809 L
.23248 .02809 L
.23485 .02809 L
.23722 .02809 L
.23958 .02809 L
.24195 .02809 L
.24432 .02809 L
.24669 .02809 L
.24905 .02809 L
.25142 .02809 L
.25379 .02809 L
.25616 .02809 L
.25852 .02809 L
.26089 .02809 L
.26326 .02809 L
.26563 .02809 L
.26799 .02809 L
.27036 .02809 L
.27273 .02809 L
.27509 .02809 L
.27746 .02809 L
.27983 .02809 L
Mistroke
.2822 .02809 L
.28456 .02809 L
.28693 .02809 L
.2893 .02809 L
.29167 .02809 L
.29403 .02809 L
.2964 .02809 L
.29877 .02809 L
.30114 .02809 L
.3035 .02809 L
.30587 .02809 L
.30824 .02809 L
.31061 .02809 L
.31297 .02809 L
.31534 .02809 L
.31771 .02809 L
.32008 .02809 L
.32244 .02809 L
.32481 .02809 L
.32718 .02809 L
.32955 .02809 L
.33191 .02809 L
.33428 .02809 L
.33665 .02809 L
.33902 .02809 L
.34138 .02809 L
.34375 .02809 L
.34612 .02809 L
.34848 .02809 L
.35085 .02809 L
.35322 .02809 L
.35559 .02809 L
.35795 .02809 L
.36032 .02809 L
.36269 .02809 L
.36506 .02809 L
.36742 .02809 L
.36979 .02809 L
.37216 .02809 L
.37453 .02809 L
.37689 .02809 L
.37926 .02809 L
.38163 .02809 L
.384 .02809 L
.38636 .02809 L
.38873 .02809 L
.3911 .02809 L
.39347 .02809 L
.39583 .02809 L
.3982 .02809 L
Mistroke
.40057 .02809 L
.40294 .02809 L
.4053 .02809 L
.40767 .02809 L
.41004 .02809 L
.41241 .02809 L
.41477 .02809 L
.41714 .02809 L
.41951 .02809 L
.42188 .02809 L
.42424 .02809 L
.42661 .02809 L
.42898 .02809 L
.43134 .02809 L
.43371 .02809 L
.43608 .02809 L
.43845 .02809 L
.44081 .02809 L
.44318 .02809 L
.44555 .02809 L
.44792 .02809 L
.45028 .02809 L
.45265 .02809 L
.45502 .02809 L
.45739 .02809 L
.45975 .02809 L
.46212 .02809 L
.46449 .02809 L
.46686 .02809 L
.46922 .02809 L
.47159 .02809 L
.47396 .02809 L
.47633 .02809 L
.47869 .02809 L
.48106 .02809 L
.48343 .02809 L
.4858 .02809 L
.48816 .02809 L
.49053 .02809 L
.4929 .02809 L
.49527 .02809 L
.49763 .02809 L
.5 .02809 L
.50237 .02809 L
.50473 .02809 L
.5071 .02809 L
.50947 .02809 L
.51184 .02809 L
.5142 .02809 L
.51657 .02809 L
Mistroke
.51894 .02809 L
.52131 .02809 L
.52367 .02809 L
.52604 .02809 L
.52841 .02809 L
.53078 .02809 L
.53314 .02809 L
.53551 .02809 L
.53788 .02809 L
.54025 .02809 L
.54261 .02809 L
.54498 .02809 L
.54735 .02809 L
.54972 .02809 L
.55208 .02809 L
.55445 .02809 L
.55682 .02809 L
.55919 .02809 L
.56155 .02809 L
.56392 .02809 L
.56629 .02809 L
.56866 .02809 L
.57102 .02809 L
.57339 .02809 L
.57576 .02809 L
.57812 .02809 L
.58049 .02809 L
.58286 .02809 L
.58523 .02809 L
.58759 .02809 L
.58996 .02809 L
.59233 .02809 L
.5947 .02809 L
.59706 .02809 L
.59943 .02809 L
.6018 .02809 L
.60417 .02809 L
.60653 .02809 L
.6089 .02809 L
.61127 .02809 L
.61364 .02809 L
.616 .02809 L
.61837 .02809 L
.62074 .02809 L
.62311 .02809 L
.62547 .02809 L
.62784 .02809 L
.63021 .02809 L
.63258 .02809 L
.63494 .02809 L
Mistroke
.63731 .02809 L
.63968 .02809 L
.64205 .02809 L
.64441 .02809 L
.64678 .02809 L
.64915 .02809 L
.65152 .02809 L
.65388 .02809 L
.65625 .02809 L
.65862 .02809 L
.66098 .02809 L
.66335 .02809 L
.66572 .02809 L
.66809 .02809 L
.67045 .02809 L
.67282 .02809 L
.67519 .02809 L
.67756 .02809 L
.67992 .02809 L
.68229 .02809 L
.68466 .02809 L
.68703 .02809 L
.68939 .02809 L
.69176 .02809 L
.69413 .02809 L
.6965 .02809 L
.69886 .02809 L
.70123 .02809 L
.7036 .02809 L
.70597 .02809 L
.70833 .02809 L
.7107 .02809 L
.71307 .02809 L
.71544 .02809 L
.7178 .02809 L
.72017 .02809 L
.72254 .02809 L
.72491 .02809 L
.72727 .02809 L
.72964 .02809 L
.73201 .02809 L
.73437 .02809 L
.73674 .02809 L
.73911 .02809 L
.74148 .02809 L
.74384 .02809 L
.74621 .02809 L
.74858 .02809 L
.75095 .02809 L
.75331 .02809 L
Mistroke
.75568 .02809 L
.75805 .02809 L
.76042 .02809 L
.76278 .02809 L
.76515 .02809 L
.76752 .02809 L
.76989 .02809 L
.77225 .02809 L
.77462 .02809 L
.77699 .02809 L
.77936 .02809 L
.78172 .02809 L
.78409 .02809 L
.78646 .02809 L
.78883 .02809 L
.79119 .02809 L
.79356 .02809 L
.79593 .02809 L
.7983 .02809 L
.80066 .02809 L
.80303 .02809 L
.8054 .02809 L
.80777 .02809 L
.81013 .02809 L
.8125 .02809 L
.81487 .02809 L
.81723 .02809 L
.8196 .02809 L
.82197 .02809 L
.82434 .02809 L
.8267 .02809 L
.82907 .02809 L
.83144 .02809 L
.83381 .02809 L
.83617 .02809 L
.83854 .02809 L
.84091 .02809 L
.84328 .02809 L
.84564 .02809 L
.84801 .02809 L
.85038 .02809 L
.85275 .02809 L
.85511 .02809 L
.85748 .02809 L
.85985 .02809 L
.86222 .02809 L
.86458 .02809 L
.86695 .02809 L
.86932 .02809 L
.87169 .02809 L
Mistroke
.87405 .02809 L
.87642 .02809 L
.87879 .02809 L
.88116 .02809 L
.88352 .02809 L
.88589 .02809 L
.88826 .02809 L
.89062 .02809 L
.89299 .02809 L
.89536 .02809 L
.89773 .02809 L
.90009 .02809 L
.90246 .02809 L
.90483 .02809 L
.9072 .02809 L
.90956 .02809 L
.91193 .02809 L
.9143 .02809 L
.91667 .02809 L
.91903 .02809 L
.9214 .02809 L
.92377 .02809 L
.92614 .02809 L
.9285 .02809 L
.93087 .02809 L
.93324 .02809 L
.93561 .02809 L
.93797 .02809 L
.94034 .02809 L
.94271 .02809 L
.94508 .02809 L
.94744 .02809 L
.94981 .02809 L
.95218 .02809 L
.95455 .02809 L
Mfstroke
P
P
P
% End of Graphics
MathPictureEnd
end
showpage
%%EndDocument
 @endspecial 587 1381 a(Figure)i(21:)j(T)m(est)d(Problem)f(21,)g
Fl(y)q Fm(\()p Fl(x)p Fm(\))i(v)o(ersus)g Fl(x)p eop
%%Page: 22 22
22 21 bop 262 307 a Fn(T)l(est)15 b(Problem)e(22)h Fm(\(Nonlinear\))g
([8)o(])262 357 y Fl(\017y)300 342 y Fk(00)331 357 y
Fm(+)9 b Fl(y)393 342 y Fk(0)415 357 y Fm(+)g Fl(y)477
342 y Fi(2)508 357 y Fm(=)j(0,)59 b Fl(y)q Fm(\(0\))13
b(=)f(0)p Fl(;)17 b(y)q Fm(\(1\))c(=)961 341 y Fi(1)p
961 348 17 2 v 961 371 a(2)982 357 y Fm(.)262 407 y(The)h(solution)f
(has)h(a)g(b)q(oundary)f(la)o(y)o(er)h(near)g Fl(x)d
Fm(=)h(0.)439 1710 y @beginspecial 72 @llx 72 @lly 540
@urx 720 @ury 2834 @rwi @setspecial
%%BeginDocument: ../PLOTS/pr22.ps

/Mathdict 150 dict def
Mathdict begin
/Mlmarg		1.0 72 mul def
/Mrmarg		1.0 72 mul def
/Mbmarg		1.0 72 mul def
/Mtmarg		1.0 72 mul def
/Mwidth		8.5 72 mul def
/Mheight	11 72 mul def
/Mtransform	{  } bind def
/Mnodistort	true def
/Mfixwid	true	def
/Mfixdash	false def
/Mrot		0	def
/Mpstart {
MathPictureStart
} bind def
/Mpend {
MathPictureEnd
} bind def
/Mscale {
0 1 0 1
5 -1 roll
MathScale
} bind def
/ISOLatin1Encoding dup where
{ pop pop }
{
[
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft
/logicalnot /hyphen /registered /macron
/degree /plusminus /twosuperior /threesuperior
/acute /mu /paragraph /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright
/onequarter /onehalf /threequarters /questiondown
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis
] def
} ifelse
/MFontDict 50 dict def
/MStrCat
{
exch
dup length
2 index length add
string
dup 3 1 roll
copy
length
exch dup
4 2 roll exch
putinterval
} def
/MCreateEncoding
{
1 index
255 string cvs
(-) MStrCat
1 index MStrCat
cvn exch
(Encoding) MStrCat
cvn dup where
{
exch get
}
{
pop
StandardEncoding
} ifelse
3 1 roll
dup MFontDict exch known not
{
1 index findfont
dup length dict
begin
{1 index /FID ne
{def}
{pop pop}
ifelse} forall
/Encoding 3 index
def
currentdict
end
1 index exch definefont pop
MFontDict 1 index
null put
}
if
exch pop
exch pop
} def
/ISOLatin1 { (ISOLatin1) MCreateEncoding } def
/ISO8859 { (ISOLatin1) MCreateEncoding } def
/Mcopyfont {
dup
maxlength
dict
exch
{
1 index
/FID
eq
{
pop pop
}
{
2 index
3 1 roll
put
}
ifelse
}
forall
} def
/Plain	/Courier findfont Mcopyfont definefont pop
/Bold	/Courier-Bold findfont Mcopyfont definefont pop
/Italic /Courier-Oblique findfont Mcopyfont definefont pop
/MathPictureStart {
gsave
Mtransform
Mlmarg
Mbmarg
translate
Mwidth
Mlmarg Mrmarg add
sub
/Mwidth exch def
Mheight
Mbmarg Mtmarg add
sub
/Mheight exch def
/Mtmatrix
matrix currentmatrix
def
/Mgmatrix
matrix currentmatrix
def
} bind def
/MathPictureEnd {
grestore
} bind def
/MFill {
0 0 		moveto
Mwidth 0 	lineto
Mwidth Mheight 	lineto
0 Mheight 	lineto
fill
} bind def
/MPlotRegion {
3 index
Mwidth mul
2 index
Mheight mul
translate
exch sub
Mheight mul
/Mheight
exch def
exch sub
Mwidth mul
/Mwidth
exch def
} bind def
/MathSubStart {
Momatrix
Mgmatrix Mtmatrix
Mwidth Mheight
7 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
Mgmatrix setmatrix
9 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
2 copy translate
/Mtmatrix matrix currentmatrix def
3 -1 roll
exch sub
/Mheight exch def
sub
/Mwidth exch def
} bind def
/MathSubEnd {
/Mheight exch def
/Mwidth exch def
/Mtmatrix exch def
dup setmatrix
/Mgmatrix exch def
/Momatrix exch def
} bind def
/Mdot {
moveto
0 0 rlineto
stroke
} bind def
/Mtetra {
moveto
lineto
lineto
lineto
fill
} bind def
/Metetra {
moveto
lineto
lineto
lineto
closepath
gsave
fill
grestore
0 setgray
stroke
} bind def
/Mistroke {
flattenpath
0 0 0
{
4 2 roll
pop pop
}
{
4 -1 roll
2 index
sub dup mul
4 -1 roll
2 index
sub dup mul
add sqrt
4 -1 roll
add
3 1 roll
}
{
stop
}
{
stop
}
pathforall
pop pop
currentpoint
stroke
moveto
currentdash
3 -1 roll
add
setdash
} bind def
/Mfstroke {
stroke
currentdash
pop 0
setdash
} bind def
/Mrotsboxa {
gsave
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
grestore
Msboxa
3  -1 roll
/Mtmatrix
exch def
/Mrot
0 def
} bind def
/Msboxa {
newpath
5 -1 roll
Mvboxa
pop
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Msboxa1
5 -3 roll
Msboxa1
Mboxrot
[
7 -2 roll
2 copy
[
3 1 roll
10 -1 roll
9 -1 roll
]
6 1 roll
5 -2 roll
]
} bind def
/Msboxa1 {
sub
2 div
dup
2 index
1 add
mul
3 -1 roll
-1 add
3 -1 roll
mul
} bind def
/Mvboxa	{
Mfixwid
{
Mvboxa1
}
{
dup
Mwidthcal
0 exch
{
add
}
forall
exch
Mvboxa1
4 index
7 -1 roll
add
4 -1 roll
pop
3 1 roll
}
ifelse
} bind def
/Mvboxa1 {
gsave
newpath
[ true
3 -1 roll
{
Mbbox
5 -1 roll
{
0
5 1 roll
}
{
7 -1 roll
exch sub
(m) stringwidth pop
.3 mul
sub
7 1 roll
6 -1 roll
4 -1 roll
Mmin
3 -1 roll
5 index
add
5 -1 roll
4 -1 roll
Mmax
4 -1 roll
}
ifelse
false
}
forall
{ stop } if
counttomark
1 add
4 roll
]
grestore
} bind def
/Mbbox {
1 dict begin
0 0 moveto
/temp (T) def
{	gsave
currentpoint newpath moveto
temp 0 3 -1 roll put temp
false charpath flattenpath currentpoint
pathbbox
grestore moveto lineto moveto} forall
pathbbox
newpath
end
} bind def
/Mmin {
2 copy
gt
{ exch } if
pop
} bind def
/Mmax {
2 copy
lt
{ exch } if
pop
} bind def
/Mrotshowa {
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
Mgmatrix setmatrix
Mshowa
/Mtmatrix
exch def
/Mrot 0 def
} bind def
/Mshowa {
4 -2 roll
moveto
2 index
Mtmatrix setmatrix
Mvboxa
7 1 roll
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Mshowa1
4 1 roll
Mshowa1
rmoveto
currentpoint
Mfixwid
{
Mshowax
}
{
Mshoway
}
ifelse
pop pop pop pop
Mgmatrix setmatrix
} bind def
/Mshowax {	
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
Mfixdash
{
Mfixdashp		
}
if
show
} for
} bind def
/Mfixdashp {
dup
length
1
gt
1 index
true exch
{
45
eq
and
} forall
and
{
gsave
(--)		
stringwidth pop
(-)
stringwidth pop
sub
2 div
0 rmoveto
dup
length
1 sub
{
(-)
show
}
repeat
grestore
}
if
} bind def	
/Mshoway {
3 index
Mwidthcal
5 1 roll
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
[
6 index
aload
length
2 add
-1 roll
{
pop
Strform
stringwidth
pop
neg 
exch
add
0 rmoveto
}
exch
kshow
cleartomark
} for
pop	
} bind def
/Mwidthcal {
[
exch
{
Mwidthcal1
}
forall
]
[
exch
dup
Maxlen
-1 add
0 1
3 -1 roll
{
[
exch
2 index
{		 
1 index	
Mget
exch
}
forall		
pop
Maxget
exch
}
for
pop
]
Mreva
} bind def
/Mreva	{
[
exch
aload
length
-1 1
{1 roll}
for
]
} bind def
/Mget	{
1 index
length
-1 add
1 index
ge
{
get
}
{
pop pop
0
}
ifelse
} bind def
/Maxlen	{
[
exch
{
length
}
forall
Maxget
} bind def
/Maxget	{
counttomark
-1 add
1 1
3 -1 roll
{
pop
Mmax
}
for
exch
pop
} bind def
/Mwidthcal1 {
[
exch
{
Strform
stringwidth
pop
}
forall
]
} bind def
/Strform {
/tem (x) def
tem 0
3 -1 roll
put
tem
} bind def
/Mshowa1 {
2 copy
add
4 1 roll
sub
mul
sub
-2 div
} bind def
/MathScale {
Mwidth
Mheight
Mlp
translate
scale
/yscale exch def
/ybias exch def
/xscale exch def
/xbias exch def
/Momatrix
xscale yscale matrix scale
xbias ybias matrix translate
matrix concatmatrix def
/Mgmatrix
matrix currentmatrix
def
} bind def
/Mlp {
3 copy
Mlpfirst
{
Mnodistort
{
Mmin
dup
} if
4 index
2 index
2 index
Mlprun
11 index
11 -1 roll
10 -4 roll
Mlp1
8 index
9 -5 roll
Mlp1
4 -1 roll
and
{ exit } if
3 -1 roll
pop pop
} loop
exch
3 1 roll
7 -3 roll
pop pop pop
} bind def
/Mlpfirst {
3 -1 roll
dup length
2 copy
-2 add
get
aload
pop pop pop
4 -2 roll
-1 add
get
aload
pop pop pop
6 -1 roll
3 -1 roll
5 -1 roll
sub
div
4 1 roll
exch sub
div
} bind def
/Mlprun {
2 copy
4 index
0 get
dup
4 1 roll
Mlprun1
3 copy
8 -2 roll
9 -1 roll
{
3 copy
Mlprun1
3 copy
11 -3 roll
/gt Mlpminmax
8 3 roll
11 -3 roll
/lt Mlpminmax
8 3 roll
} forall
pop pop pop pop
3 1 roll
pop pop
aload pop
5 -1 roll
aload pop
exch
6 -1 roll
Mlprun2
8 2 roll
4 -1 roll
Mlprun2
6 2 roll
3 -1 roll
Mlprun2
4 2 roll
exch
Mlprun2
6 2 roll
} bind def
/Mlprun1 {
aload pop
exch
6 -1 roll
5 -1 roll
mul add
4 -2 roll
mul
3 -1 roll
add
} bind def
/Mlprun2 {
2 copy
add 2 div
3 1 roll
exch sub
} bind def
/Mlpminmax {
cvx
2 index
6 index
2 index
exec
{
7 -3 roll
4 -1 roll
} if
1 index
5 index
3 -1 roll
exec
{
4 1 roll
pop
5 -1 roll
aload
pop pop
4 -1 roll
aload pop
[
8 -2 roll
pop
5 -2 roll
pop
6 -2 roll
pop
5 -1 roll
]
4 1 roll
pop
}
{
pop pop pop
} ifelse
} bind def
/Mlp1 {
5 index
3 index	sub
5 index
2 index mul
1 index
le
1 index
0 le
or
dup
not
{
1 index
3 index	div
.99999 mul
8 -1 roll
pop
7 1 roll
}
if
8 -1 roll
2 div
7 -2 roll
pop sub
5 index
6 -3 roll
pop pop
mul sub
exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
outflag
1
eq
{
/outflag 0 def
/intop 0 def
/inrht 0 def
} if		
5 index
gsave
Mtmatrix setmatrix
Mvboxa pop
grestore
3 -1 roll
pop
dup
intop
gt
{
/intop
exch def
}
{ pop }
ifelse
dup
inrht
gt
{
/inrht
exch def
}
{ pop }
ifelse
pop
/inflag
1 def
} bind def
/Mouter {
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
inflag
1 eq
{
dup
0 lt
{
dup
intop
mul
neg
/yadtop
exch def
} if
dup
0 gt
{
dup
intop
mul
/yadbot
exch def
}
if
pop
dup
0 lt
{
dup
inrht
mul
neg
/xadrht
exch def
} if
dup
0 gt
{
dup
inrht
mul
/xadlft
exch def
} if
pop
/outflag 1 def
}
{ pop pop}
ifelse
/inflag 0 def
/inrht 0 def
/intop 0 def
} bind def	
/Mboxout {
outflag
1
eq
{
4 -1
roll
xadlft
leadjust
add
sub
4 1 roll
3 -1
roll
yadbot
leadjust
add
sub
3 1
roll
exch
xadrht
leadjust
add
add
exch
yadtop
leadjust
add
add
/outflag 0 def
/xadlft 0 def
/yadbot 0 def
/xadrht 0 def
/yadtop 0 def
} if
} bind def
/leadjust {
(m) stringwidth pop
.5 mul
} bind def
/Mrotcheck {
dup
90
eq
{
yadbot
/yadbot
xadrht
def	
/xadrht
yadtop
def
/yadtop
xadlft
def
/xadlft
exch
def
}
if
dup
cos
1 index
sin
Checkaux
dup
cos
1 index
sin neg
exch
Checkaux
3 1 roll
pop pop
} bind def
/Checkaux {
4 index
exch
4 index
mul
3 1 roll
mul add
4 1 roll
} bind def
/Mboxrot {
Mrot
90 eq
{
brotaux
4 2
roll
}
if
Mrot
180 eq
{
4 2
roll
brotaux
4 2
roll
brotaux
}	
if
Mrot
270 eq
{
4 2
roll
brotaux
}
if
} bind def
/brotaux {
neg
exch
neg
} bind def
/Mabsproc {
0
matrix defaultmatrix
dtransform idtransform
dup mul exch
dup mul
add sqrt
} bind def
/Mabswid {
Mabsproc
setlinewidth	
} bind def
/Mabsdash {
exch
[
exch
{
Mabsproc
}
forall
]
exch
setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop}
repeat
} bind def
} ifelse
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/setcmykcolor where
{ pop}
{ /setcmykcolor {
4 1
roll
[
4 1 
roll
]
{
1 index
sub
1
sub neg
dup
0
lt
{
pop
0
}
if
dup
1
gt
{
pop
1
}
if
exch
} forall
pop
setrgbcolor
} bind def
} ifelse
/Mcharproc
{
currentfile
(x)
readhexstring
pop
0 get
exch
div
} bind def
/Mshadeproc
{
dup
3 1
roll
{
dup
Mcharproc
3 1
roll
} repeat
1 eq
{
setgray
}
{
3 eq
{
setrgbcolor
}
{
setcmykcolor
} ifelse
} ifelse
} bind def
/Mrectproc
{
3 index
2 index
moveto
2 index
3 -1
roll
lineto
dup
3 1
roll
lineto
lineto
fill
} bind def
/Mcolorimage
{
7 1
roll
pop
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
9 index
Mshadeproc
Mrectproc
} for
pop
} for
pop pop pop pop
} bind def
/Mimage
{
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
Mcharproc
setgray
Mrectproc
} for
pop
} for
pop pop pop
} bind def

MathPictureStart
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0454545 0.909091 0.0280925 0.561849 [
[(0)] .04545 0 0 2 0 Minner Mrotsboxa
[(0.2)] .22727 0 0 2 0 Minner Mrotsboxa
[(0.4)] .40909 0 0 2 0 Minner Mrotsboxa
[(0.6)] .59091 0 0 2 0 Minner Mrotsboxa
[(0.8)] .77273 0 0 2 0 Minner Mrotsboxa
[(1)] .95455 0 0 2 0 Minner Mrotsboxa
[()] .5 0 0 2 0 0 -1 Mouter Mrotsboxa
[(0)] -0.0125 .02809 1 0 0 Minner Mrotsboxa
[(0.2)] -0.0125 .14046 1 0 0 Minner Mrotsboxa
[(0.4)] -0.0125 .25283 1 0 0 Minner Mrotsboxa
[(0.6)] -0.0125 .3652 1 0 0 Minner Mrotsboxa
[(0.8)] -0.0125 .47757 1 0 0 Minner Mrotsboxa
[(1)] -0.0125 .58994 1 0 0 Minner Mrotsboxa
[(Epsilon = 0.1, 0.05, 0.01)] .5 .61803 0 -4 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 .61903 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 g
p
p
.002 w
.04545 0 m
.04545 .00625 L
s
P
[(0)] .04545 0 0 2 0 Minner Mrotshowa
p
.002 w
.22727 0 m
.22727 .00625 L
s
P
[(0.2)] .22727 0 0 2 0 Minner Mrotshowa
p
.002 w
.40909 0 m
.40909 .00625 L
s
P
[(0.4)] .40909 0 0 2 0 Minner Mrotshowa
p
.002 w
.59091 0 m
.59091 .00625 L
s
P
[(0.6)] .59091 0 0 2 0 Minner Mrotshowa
p
.002 w
.77273 0 m
.77273 .00625 L
s
P
[(0.8)] .77273 0 0 2 0 Minner Mrotshowa
p
.002 w
.95455 0 m
.95455 .00625 L
s
P
[(1)] .95455 0 0 2 0 Minner Mrotshowa
p
.001 w
.08182 0 m
.08182 .00375 L
s
P
p
.001 w
.11818 0 m
.11818 .00375 L
s
P
p
.001 w
.15455 0 m
.15455 .00375 L
s
P
p
.001 w
.19091 0 m
.19091 .00375 L
s
P
p
.001 w
.26364 0 m
.26364 .00375 L
s
P
p
.001 w
.3 0 m
.3 .00375 L
s
P
p
.001 w
.33636 0 m
.33636 .00375 L
s
P
p
.001 w
.37273 0 m
.37273 .00375 L
s
P
p
.001 w
.44545 0 m
.44545 .00375 L
s
P
p
.001 w
.48182 0 m
.48182 .00375 L
s
P
p
.001 w
.51818 0 m
.51818 .00375 L
s
P
p
.001 w
.55455 0 m
.55455 .00375 L
s
P
p
.001 w
.62727 0 m
.62727 .00375 L
s
P
p
.001 w
.66364 0 m
.66364 .00375 L
s
P
p
.001 w
.7 0 m
.7 .00375 L
s
P
p
.001 w
.73636 0 m
.73636 .00375 L
s
P
p
.001 w
.80909 0 m
.80909 .00375 L
s
P
p
.001 w
.84545 0 m
.84545 .00375 L
s
P
p
.001 w
.88182 0 m
.88182 .00375 L
s
P
p
.001 w
.91818 0 m
.91818 .00375 L
s
P
p
.001 w
.00909 0 m
.00909 .00375 L
s
P
p
.001 w
.99091 0 m
.99091 .00375 L
s
P
[()] .5 0 0 2 0 0 -1 Mouter Mrotshowa
p
.002 w
0 0 m
1 0 L
s
P
p
.002 w
0 .02809 m
.00625 .02809 L
s
P
[(0)] -0.0125 .02809 1 0 0 Minner Mrotshowa
p
.002 w
0 .14046 m
.00625 .14046 L
s
P
[(0.2)] -0.0125 .14046 1 0 0 Minner Mrotshowa
p
.002 w
0 .25283 m
.00625 .25283 L
s
P
[(0.4)] -0.0125 .25283 1 0 0 Minner Mrotshowa
p
.002 w
0 .3652 m
.00625 .3652 L
s
P
[(0.6)] -0.0125 .3652 1 0 0 Minner Mrotshowa
p
.002 w
0 .47757 m
.00625 .47757 L
s
P
[(0.8)] -0.0125 .47757 1 0 0 Minner Mrotshowa
p
.002 w
0 .58994 m
.00625 .58994 L
s
P
[(1)] -0.0125 .58994 1 0 0 Minner Mrotshowa
p
.001 w
0 .05057 m
.00375 .05057 L
s
P
p
.001 w
0 .07304 m
.00375 .07304 L
s
P
p
.001 w
0 .09551 m
.00375 .09551 L
s
P
p
.001 w
0 .11799 m
.00375 .11799 L
s
P
p
.001 w
0 .16294 m
.00375 .16294 L
s
P
p
.001 w
0 .18541 m
.00375 .18541 L
s
P
p
.001 w
0 .20788 m
.00375 .20788 L
s
P
p
.001 w
0 .23036 m
.00375 .23036 L
s
P
p
.001 w
0 .27531 m
.00375 .27531 L
s
P
p
.001 w
0 .29778 m
.00375 .29778 L
s
P
p
.001 w
0 .32025 m
.00375 .32025 L
s
P
p
.001 w
0 .34273 m
.00375 .34273 L
s
P
p
.001 w
0 .38768 m
.00375 .38768 L
s
P
p
.001 w
0 .41015 m
.00375 .41015 L
s
P
p
.001 w
0 .43262 m
.00375 .43262 L
s
P
p
.001 w
0 .4551 m
.00375 .4551 L
s
P
p
.001 w
0 .50005 m
.00375 .50005 L
s
P
p
.001 w
0 .52252 m
.00375 .52252 L
s
P
p
.001 w
0 .54499 m
.00375 .54499 L
s
P
p
.001 w
0 .56747 m
.00375 .56747 L
s
P
p
.001 w
0 .00562 m
.00375 .00562 L
s
P
p
.001 w
0 .61242 m
.00375 .61242 L
s
P
p
.002 w
0 0 m
0 .61803 L
s
P
P
p
p
.002 w
.04545 .61178 m
.04545 .61803 L
s
P
p
.002 w
.22727 .61178 m
.22727 .61803 L
s
P
p
.002 w
.40909 .61178 m
.40909 .61803 L
s
P
p
.002 w
.59091 .61178 m
.59091 .61803 L
s
P
p
.002 w
.77273 .61178 m
.77273 .61803 L
s
P
p
.002 w
.95455 .61178 m
.95455 .61803 L
s
P
p
.001 w
.08182 .61428 m
.08182 .61803 L
s
P
p
.001 w
.11818 .61428 m
.11818 .61803 L
s
P
p
.001 w
.15455 .61428 m
.15455 .61803 L
s
P
p
.001 w
.19091 .61428 m
.19091 .61803 L
s
P
p
.001 w
.26364 .61428 m
.26364 .61803 L
s
P
p
.001 w
.3 .61428 m
.3 .61803 L
s
P
p
.001 w
.33636 .61428 m
.33636 .61803 L
s
P
p
.001 w
.37273 .61428 m
.37273 .61803 L
s
P
p
.001 w
.44545 .61428 m
.44545 .61803 L
s
P
p
.001 w
.48182 .61428 m
.48182 .61803 L
s
P
p
.001 w
.51818 .61428 m
.51818 .61803 L
s
P
p
.001 w
.55455 .61428 m
.55455 .61803 L
s
P
p
.001 w
.62727 .61428 m
.62727 .61803 L
s
P
p
.001 w
.66364 .61428 m
.66364 .61803 L
s
P
p
.001 w
.7 .61428 m
.7 .61803 L
s
P
p
.001 w
.73636 .61428 m
.73636 .61803 L
s
P
p
.001 w
.80909 .61428 m
.80909 .61803 L
s
P
p
.001 w
.84545 .61428 m
.84545 .61803 L
s
P
p
.001 w
.88182 .61428 m
.88182 .61803 L
s
P
p
.001 w
.91818 .61428 m
.91818 .61803 L
s
P
p
.001 w
.00909 .61428 m
.00909 .61803 L
s
P
p
.001 w
.99091 .61428 m
.99091 .61803 L
s
P
[(Epsilon = 0.1, 0.05, 0.01)] .5 .61803 0 -4 Mshowa
p
.002 w
0 .61803 m
1 .61803 L
s
P
p
.002 w
.99375 .02809 m
1 .02809 L
s
P
p
.002 w
.99375 .14046 m
1 .14046 L
s
P
p
.002 w
.99375 .25283 m
1 .25283 L
s
P
p
.002 w
.99375 .3652 m
1 .3652 L
s
P
p
.002 w
.99375 .47757 m
1 .47757 L
s
P
p
.002 w
.99375 .58994 m
1 .58994 L
s
P
p
.001 w
.99625 .05057 m
1 .05057 L
s
P
p
.001 w
.99625 .07304 m
1 .07304 L
s
P
p
.001 w
.99625 .09551 m
1 .09551 L
s
P
p
.001 w
.99625 .11799 m
1 .11799 L
s
P
p
.001 w
.99625 .16294 m
1 .16294 L
s
P
p
.001 w
.99625 .18541 m
1 .18541 L
s
P
p
.001 w
.99625 .20788 m
1 .20788 L
s
P
p
.001 w
.99625 .23036 m
1 .23036 L
s
P
p
.001 w
.99625 .27531 m
1 .27531 L
s
P
p
.001 w
.99625 .29778 m
1 .29778 L
s
P
p
.001 w
.99625 .32025 m
1 .32025 L
s
P
p
.001 w
.99625 .34273 m
1 .34273 L
s
P
p
.001 w
.99625 .38768 m
1 .38768 L
s
P
p
.001 w
.99625 .41015 m
1 .41015 L
s
P
p
.001 w
.99625 .43262 m
1 .43262 L
s
P
p
.001 w
.99625 .4551 m
1 .4551 L
s
P
p
.001 w
.99625 .50005 m
1 .50005 L
s
P
p
.001 w
.99625 .52252 m
1 .52252 L
s
P
p
.001 w
.99625 .54499 m
1 .54499 L
s
P
p
.001 w
.99625 .56747 m
1 .56747 L
s
P
p
.001 w
.99625 .00562 m
1 .00562 L
s
P
p
.001 w
.99625 .61242 m
1 .61242 L
s
P
p
.002 w
1 0 m
1 .61803 L
s
P
P
p
P
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
p
p
p
.001 w
.04545 .02809 m
.06439 .11927 L
.08333 .19323 L
.12121 .3015 L
.14015 .34014 L
.15909 .37082 L
.17803 .39493 L
.19697 .41355 L
.21591 .42772 L
.22538 .43334 L
.23485 .43803 L
.25379 .44527 L
.26326 .44787 L
.27273 .44993 L
.2822 .45144 L
.28693 .45202 L
.29167 .45247 L
.2964 .45281 L
.29877 .45295 L
.30114 .45305 L
.3035 .45314 L
.30469 .45317 L
.30587 .4532 L
.30705 .45322 L
.30824 .45323 L
.30942 .45324 L
.31061 .45324 L
.31179 .45324 L
.31297 .45324 L
.31416 .45322 L
.31534 .45321 L
.31771 .45316 L
.32008 .45309 L
.32481 .45289 L
.32955 .45263 L
.33902 .45189 L
.34848 .45088 L
.36742 .44822 L
.38636 .44483 L
.42424 .43645 L
.46212 .42674 L
.5 .41633 L
.53788 .40566 L
.57576 .39497 L
.61364 .38459 L
.65152 .37454 L
.68939 .36489 L
.72727 .35565 L
.76515 .34687 L
.80303 .33851 L
Mistroke
.84091 .33054 L
.87879 .32301 L
.91667 .31582 L
.95455 .30902 L
Mfstroke
P
P
p
p
.001 w
.04545 .02809 m
.05492 .12746 L
.06439 .208 L
.08333 .32566 L
.0928 .36829 L
.10227 .40245 L
.11174 .42974 L
.12121 .45128 L
.13068 .46809 L
.14015 .48108 L
.14962 .49097 L
.15909 .49819 L
.16383 .50103 L
.16856 .50336 L
.1733 .50524 L
.17803 .50674 L
.18277 .50784 L
.18513 .50827 L
.1875 .50865 L
.18987 .50895 L
.19223 .50918 L
.19342 .50927 L
.1946 .50934 L
.19579 .50939 L
.19697 .50943 L
.19815 .50945 L
.19934 .50945 L
.20052 .50944 L
.2017 .50942 L
.20289 .50939 L
.20407 .50934 L
.20644 .50922 L
.20881 .50905 L
.21117 .50883 L
.21591 .50825 L
.22538 .5067 L
.23485 .50459 L
.27273 .49302 L
.31061 .47899 L
.34848 .46441 L
.38636 .4501 L
.42424 .43646 L
.46212 .42357 L
.5 .41144 L
.53788 .40005 L
.57576 .3893 L
.61364 .37919 L
.65152 .36965 L
.68939 .36059 L
.72727 .35205 L
Mistroke
.76515 .34395 L
.80303 .33626 L
.84091 .32896 L
.87879 .322 L
.91667 .31536 L
.95455 .30902 L
Mfstroke
P
P
p
p
.001 w
.04545 .02809 m
.04782 .15563 L
.05019 .25382 L
.05256 .32949 L
.05492 .38765 L
.05729 .43232 L
.05966 .46657 L
.06203 .49272 L
.06439 .51269 L
.06676 .52777 L
.06913 .53914 L
.0715 .54765 L
.07386 .55386 L
.07623 .55824 L
.0786 .56147 L
.07978 .56275 L
.08097 .56368 L
.08215 .56445 L
.08333 .56504 L
.08452 .56549 L
.0857 .56578 L
.08688 .56599 L
.08807 .56606 L
.08925 .56604 L
.09044 .56595 L
.09162 .56578 L
.0928 .56556 L
.09399 .56528 L
.09517 .565 L
.09754 .56421 L
.10227 .5623 L
.12121 .55273 L
.15909 .53286 L
.19697 .51439 L
.23485 .49711 L
.27273 .48111 L
.31061 .46618 L
.34848 .45217 L
.38636 .43903 L
.42424 .42673 L
.46212 .41509 L
.5 .40414 L
.53788 .39381 L
.57576 .38402 L
.61364 .37475 L
.65152 .366 L
.68939 .35761 L
.72727 .34964 L
.76515 .34206 L
.80303 .33486 L
Mistroke
.84091 .32795 L
.87879 .32138 L
.91667 .31508 L
.95455 .30902 L
Mfstroke
P
P
P
% End of Graphics
MathPictureEnd
end
showpage
%%EndDocument
 @endspecial 587 1329 a(Figure)i(22:)j(T)m(est)d(Problem)f(22,)g
Fl(y)q Fm(\()p Fl(x)p Fm(\))i(v)o(ersus)g Fl(x)p eop
%%Page: 23 23
23 22 bop 262 307 a Fn(T)l(est)15 b(Problem)e(23)h Fm(T)m(ro)q(esc)o
(h's)h(Equation)e(\(Nonlinear\))h(\(see)h(e.g.)j([11)o(]\))262
357 y Fl(y)283 342 y Fk(00)316 357 y Fm(=)12 b Fl(\026)7
b Fm(sinh\()p Fl(\026y)q Fm(\),)61 b Fl(y)q Fm(\(0\))12
b(=)g(0)p Fl(;)17 b(y)q Fm(\(1\))c(=)f(1.)262 407 y(The)i(solution)f
(has)h(a)g(b)q(oundary)f(la)o(y)o(er)h(near)g Fl(x)d
Fm(=)h(1.)439 1710 y @beginspecial 72 @llx 72 @lly 540
@urx 720 @ury 2834 @rwi @setspecial
%%BeginDocument: ../PLOTS/pr23.ps

/Mathdict 150 dict def
Mathdict begin
/Mlmarg		1.0 72 mul def
/Mrmarg		1.0 72 mul def
/Mbmarg		1.0 72 mul def
/Mtmarg		1.0 72 mul def
/Mwidth		8.5 72 mul def
/Mheight	11 72 mul def
/Mtransform	{  } bind def
/Mnodistort	true def
/Mfixwid	true	def
/Mfixdash	false def
/Mrot		0	def
/Mpstart {
MathPictureStart
} bind def
/Mpend {
MathPictureEnd
} bind def
/Mscale {
0 1 0 1
5 -1 roll
MathScale
} bind def
/ISOLatin1Encoding dup where
{ pop pop }
{
[
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft
/logicalnot /hyphen /registered /macron
/degree /plusminus /twosuperior /threesuperior
/acute /mu /paragraph /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright
/onequarter /onehalf /threequarters /questiondown
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis
] def
} ifelse
/MFontDict 50 dict def
/MStrCat
{
exch
dup length
2 index length add
string
dup 3 1 roll
copy
length
exch dup
4 2 roll exch
putinterval
} def
/MCreateEncoding
{
1 index
255 string cvs
(-) MStrCat
1 index MStrCat
cvn exch
(Encoding) MStrCat
cvn dup where
{
exch get
}
{
pop
StandardEncoding
} ifelse
3 1 roll
dup MFontDict exch known not
{
1 index findfont
dup length dict
begin
{1 index /FID ne
{def}
{pop pop}
ifelse} forall
/Encoding 3 index
def
currentdict
end
1 index exch definefont pop
MFontDict 1 index
null put
}
if
exch pop
exch pop
} def
/ISOLatin1 { (ISOLatin1) MCreateEncoding } def
/ISO8859 { (ISOLatin1) MCreateEncoding } def
/Mcopyfont {
dup
maxlength
dict
exch
{
1 index
/FID
eq
{
pop pop
}
{
2 index
3 1 roll
put
}
ifelse
}
forall
} def
/Plain	/Courier findfont Mcopyfont definefont pop
/Bold	/Courier-Bold findfont Mcopyfont definefont pop
/Italic /Courier-Oblique findfont Mcopyfont definefont pop
/MathPictureStart {
gsave
Mtransform
Mlmarg
Mbmarg
translate
Mwidth
Mlmarg Mrmarg add
sub
/Mwidth exch def
Mheight
Mbmarg Mtmarg add
sub
/Mheight exch def
/Mtmatrix
matrix currentmatrix
def
/Mgmatrix
matrix currentmatrix
def
} bind def
/MathPictureEnd {
grestore
} bind def
/MFill {
0 0 		moveto
Mwidth 0 	lineto
Mwidth Mheight 	lineto
0 Mheight 	lineto
fill
} bind def
/MPlotRegion {
3 index
Mwidth mul
2 index
Mheight mul
translate
exch sub
Mheight mul
/Mheight
exch def
exch sub
Mwidth mul
/Mwidth
exch def
} bind def
/MathSubStart {
Momatrix
Mgmatrix Mtmatrix
Mwidth Mheight
7 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
Mgmatrix setmatrix
9 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
2 copy translate
/Mtmatrix matrix currentmatrix def
3 -1 roll
exch sub
/Mheight exch def
sub
/Mwidth exch def
} bind def
/MathSubEnd {
/Mheight exch def
/Mwidth exch def
/Mtmatrix exch def
dup setmatrix
/Mgmatrix exch def
/Momatrix exch def
} bind def
/Mdot {
moveto
0 0 rlineto
stroke
} bind def
/Mtetra {
moveto
lineto
lineto
lineto
fill
} bind def
/Metetra {
moveto
lineto
lineto
lineto
closepath
gsave
fill
grestore
0 setgray
stroke
} bind def
/Mistroke {
flattenpath
0 0 0
{
4 2 roll
pop pop
}
{
4 -1 roll
2 index
sub dup mul
4 -1 roll
2 index
sub dup mul
add sqrt
4 -1 roll
add
3 1 roll
}
{
stop
}
{
stop
}
pathforall
pop pop
currentpoint
stroke
moveto
currentdash
3 -1 roll
add
setdash
} bind def
/Mfstroke {
stroke
currentdash
pop 0
setdash
} bind def
/Mrotsboxa {
gsave
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
grestore
Msboxa
3  -1 roll
/Mtmatrix
exch def
/Mrot
0 def
} bind def
/Msboxa {
newpath
5 -1 roll
Mvboxa
pop
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Msboxa1
5 -3 roll
Msboxa1
Mboxrot
[
7 -2 roll
2 copy
[
3 1 roll
10 -1 roll
9 -1 roll
]
6 1 roll
5 -2 roll
]
} bind def
/Msboxa1 {
sub
2 div
dup
2 index
1 add
mul
3 -1 roll
-1 add
3 -1 roll
mul
} bind def
/Mvboxa	{
Mfixwid
{
Mvboxa1
}
{
dup
Mwidthcal
0 exch
{
add
}
forall
exch
Mvboxa1
4 index
7 -1 roll
add
4 -1 roll
pop
3 1 roll
}
ifelse
} bind def
/Mvboxa1 {
gsave
newpath
[ true
3 -1 roll
{
Mbbox
5 -1 roll
{
0
5 1 roll
}
{
7 -1 roll
exch sub
(m) stringwidth pop
.3 mul
sub
7 1 roll
6 -1 roll
4 -1 roll
Mmin
3 -1 roll
5 index
add
5 -1 roll
4 -1 roll
Mmax
4 -1 roll
}
ifelse
false
}
forall
{ stop } if
counttomark
1 add
4 roll
]
grestore
} bind def
/Mbbox {
1 dict begin
0 0 moveto
/temp (T) def
{	gsave
currentpoint newpath moveto
temp 0 3 -1 roll put temp
false charpath flattenpath currentpoint
pathbbox
grestore moveto lineto moveto} forall
pathbbox
newpath
end
} bind def
/Mmin {
2 copy
gt
{ exch } if
pop
} bind def
/Mmax {
2 copy
lt
{ exch } if
pop
} bind def
/Mrotshowa {
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
Mgmatrix setmatrix
Mshowa
/Mtmatrix
exch def
/Mrot 0 def
} bind def
/Mshowa {
4 -2 roll
moveto
2 index
Mtmatrix setmatrix
Mvboxa
7 1 roll
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Mshowa1
4 1 roll
Mshowa1
rmoveto
currentpoint
Mfixwid
{
Mshowax
}
{
Mshoway
}
ifelse
pop pop pop pop
Mgmatrix setmatrix
} bind def
/Mshowax {	
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
Mfixdash
{
Mfixdashp		
}
if
show
} for
} bind def
/Mfixdashp {
dup
length
1
gt
1 index
true exch
{
45
eq
and
} forall
and
{
gsave
(--)		
stringwidth pop
(-)
stringwidth pop
sub
2 div
0 rmoveto
dup
length
1 sub
{
(-)
show
}
repeat
grestore
}
if
} bind def	
/Mshoway {
3 index
Mwidthcal
5 1 roll
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
[
6 index
aload
length
2 add
-1 roll
{
pop
Strform
stringwidth
pop
neg 
exch
add
0 rmoveto
}
exch
kshow
cleartomark
} for
pop	
} bind def
/Mwidthcal {
[
exch
{
Mwidthcal1
}
forall
]
[
exch
dup
Maxlen
-1 add
0 1
3 -1 roll
{
[
exch
2 index
{		 
1 index	
Mget
exch
}
forall		
pop
Maxget
exch
}
for
pop
]
Mreva
} bind def
/Mreva	{
[
exch
aload
length
-1 1
{1 roll}
for
]
} bind def
/Mget	{
1 index
length
-1 add
1 index
ge
{
get
}
{
pop pop
0
}
ifelse
} bind def
/Maxlen	{
[
exch
{
length
}
forall
Maxget
} bind def
/Maxget	{
counttomark
-1 add
1 1
3 -1 roll
{
pop
Mmax
}
for
exch
pop
} bind def
/Mwidthcal1 {
[
exch
{
Strform
stringwidth
pop
}
forall
]
} bind def
/Strform {
/tem (x) def
tem 0
3 -1 roll
put
tem
} bind def
/Mshowa1 {
2 copy
add
4 1 roll
sub
mul
sub
-2 div
} bind def
/MathScale {
Mwidth
Mheight
Mlp
translate
scale
/yscale exch def
/ybias exch def
/xscale exch def
/xbias exch def
/Momatrix
xscale yscale matrix scale
xbias ybias matrix translate
matrix concatmatrix def
/Mgmatrix
matrix currentmatrix
def
} bind def
/Mlp {
3 copy
Mlpfirst
{
Mnodistort
{
Mmin
dup
} if
4 index
2 index
2 index
Mlprun
11 index
11 -1 roll
10 -4 roll
Mlp1
8 index
9 -5 roll
Mlp1
4 -1 roll
and
{ exit } if
3 -1 roll
pop pop
} loop
exch
3 1 roll
7 -3 roll
pop pop pop
} bind def
/Mlpfirst {
3 -1 roll
dup length
2 copy
-2 add
get
aload
pop pop pop
4 -2 roll
-1 add
get
aload
pop pop pop
6 -1 roll
3 -1 roll
5 -1 roll
sub
div
4 1 roll
exch sub
div
} bind def
/Mlprun {
2 copy
4 index
0 get
dup
4 1 roll
Mlprun1
3 copy
8 -2 roll
9 -1 roll
{
3 copy
Mlprun1
3 copy
11 -3 roll
/gt Mlpminmax
8 3 roll
11 -3 roll
/lt Mlpminmax
8 3 roll
} forall
pop pop pop pop
3 1 roll
pop pop
aload pop
5 -1 roll
aload pop
exch
6 -1 roll
Mlprun2
8 2 roll
4 -1 roll
Mlprun2
6 2 roll
3 -1 roll
Mlprun2
4 2 roll
exch
Mlprun2
6 2 roll
} bind def
/Mlprun1 {
aload pop
exch
6 -1 roll
5 -1 roll
mul add
4 -2 roll
mul
3 -1 roll
add
} bind def
/Mlprun2 {
2 copy
add 2 div
3 1 roll
exch sub
} bind def
/Mlpminmax {
cvx
2 index
6 index
2 index
exec
{
7 -3 roll
4 -1 roll
} if
1 index
5 index
3 -1 roll
exec
{
4 1 roll
pop
5 -1 roll
aload
pop pop
4 -1 roll
aload pop
[
8 -2 roll
pop
5 -2 roll
pop
6 -2 roll
pop
5 -1 roll
]
4 1 roll
pop
}
{
pop pop pop
} ifelse
} bind def
/Mlp1 {
5 index
3 index	sub
5 index
2 index mul
1 index
le
1 index
0 le
or
dup
not
{
1 index
3 index	div
.99999 mul
8 -1 roll
pop
7 1 roll
}
if
8 -1 roll
2 div
7 -2 roll
pop sub
5 index
6 -3 roll
pop pop
mul sub
exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
outflag
1
eq
{
/outflag 0 def
/intop 0 def
/inrht 0 def
} if		
5 index
gsave
Mtmatrix setmatrix
Mvboxa pop
grestore
3 -1 roll
pop
dup
intop
gt
{
/intop
exch def
}
{ pop }
ifelse
dup
inrht
gt
{
/inrht
exch def
}
{ pop }
ifelse
pop
/inflag
1 def
} bind def
/Mouter {
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
inflag
1 eq
{
dup
0 lt
{
dup
intop
mul
neg
/yadtop
exch def
} if
dup
0 gt
{
dup
intop
mul
/yadbot
exch def
}
if
pop
dup
0 lt
{
dup
inrht
mul
neg
/xadrht
exch def
} if
dup
0 gt
{
dup
inrht
mul
/xadlft
exch def
} if
pop
/outflag 1 def
}
{ pop pop}
ifelse
/inflag 0 def
/inrht 0 def
/intop 0 def
} bind def	
/Mboxout {
outflag
1
eq
{
4 -1
roll
xadlft
leadjust
add
sub
4 1 roll
3 -1
roll
yadbot
leadjust
add
sub
3 1
roll
exch
xadrht
leadjust
add
add
exch
yadtop
leadjust
add
add
/outflag 0 def
/xadlft 0 def
/yadbot 0 def
/xadrht 0 def
/yadtop 0 def
} if
} bind def
/leadjust {
(m) stringwidth pop
.5 mul
} bind def
/Mrotcheck {
dup
90
eq
{
yadbot
/yadbot
xadrht
def	
/xadrht
yadtop
def
/yadtop
xadlft
def
/xadlft
exch
def
}
if
dup
cos
1 index
sin
Checkaux
dup
cos
1 index
sin neg
exch
Checkaux
3 1 roll
pop pop
} bind def
/Checkaux {
4 index
exch
4 index
mul
3 1 roll
mul add
4 1 roll
} bind def
/Mboxrot {
Mrot
90 eq
{
brotaux
4 2
roll
}
if
Mrot
180 eq
{
4 2
roll
brotaux
4 2
roll
brotaux
}	
if
Mrot
270 eq
{
4 2
roll
brotaux
}
if
} bind def
/brotaux {
neg
exch
neg
} bind def
/Mabsproc {
0
matrix defaultmatrix
dtransform idtransform
dup mul exch
dup mul
add sqrt
} bind def
/Mabswid {
Mabsproc
setlinewidth	
} bind def
/Mabsdash {
exch
[
exch
{
Mabsproc
}
forall
]
exch
setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop}
repeat
} bind def
} ifelse
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/setcmykcolor where
{ pop}
{ /setcmykcolor {
4 1
roll
[
4 1 
roll
]
{
1 index
sub
1
sub neg
dup
0
lt
{
pop
0
}
if
dup
1
gt
{
pop
1
}
if
exch
} forall
pop
setrgbcolor
} bind def
} ifelse
/Mcharproc
{
currentfile
(x)
readhexstring
pop
0 get
exch
div
} bind def
/Mshadeproc
{
dup
3 1
roll
{
dup
Mcharproc
3 1
roll
} repeat
1 eq
{
setgray
}
{
3 eq
{
setrgbcolor
}
{
setcmykcolor
} ifelse
} ifelse
} bind def
/Mrectproc
{
3 index
2 index
moveto
2 index
3 -1
roll
lineto
dup
3 1
roll
lineto
lineto
fill
} bind def
/Mcolorimage
{
7 1
roll
pop
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
9 index
Mshadeproc
Mrectproc
} for
pop
} for
pop pop pop pop
} bind def
/Mimage
{
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
Mcharproc
setgray
Mrectproc
} for
pop
} for
pop pop pop
} bind def

MathPictureStart
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0454545 0.909091 0.0280925 0.561849 [
[(0)] .04545 0 0 2 0 Minner Mrotsboxa
[(0.2)] .22727 0 0 2 0 Minner Mrotsboxa
[(0.4)] .40909 0 0 2 0 Minner Mrotsboxa
[(0.6)] .59091 0 0 2 0 Minner Mrotsboxa
[(0.8)] .77273 0 0 2 0 Minner Mrotsboxa
[(1)] .95455 0 0 2 0 Minner Mrotsboxa
[()] .5 0 0 2 0 0 -1 Mouter Mrotsboxa
[(0)] -0.0125 .02809 1 0 0 Minner Mrotsboxa
[(0.2)] -0.0125 .14046 1 0 0 Minner Mrotsboxa
[(0.4)] -0.0125 .25283 1 0 0 Minner Mrotsboxa
[(0.6)] -0.0125 .3652 1 0 0 Minner Mrotsboxa
[(0.8)] -0.0125 .47757 1 0 0 Minner Mrotsboxa
[(1)] -0.0125 .58994 1 0 0 Minner Mrotsboxa
[(Mu = 5, 7, 9)] .5 .61803 0 -4 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 .61903 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 g
p
p
.002 w
.04545 0 m
.04545 .00625 L
s
P
[(0)] .04545 0 0 2 0 Minner Mrotshowa
p
.002 w
.22727 0 m
.22727 .00625 L
s
P
[(0.2)] .22727 0 0 2 0 Minner Mrotshowa
p
.002 w
.40909 0 m
.40909 .00625 L
s
P
[(0.4)] .40909 0 0 2 0 Minner Mrotshowa
p
.002 w
.59091 0 m
.59091 .00625 L
s
P
[(0.6)] .59091 0 0 2 0 Minner Mrotshowa
p
.002 w
.77273 0 m
.77273 .00625 L
s
P
[(0.8)] .77273 0 0 2 0 Minner Mrotshowa
p
.002 w
.95455 0 m
.95455 .00625 L
s
P
[(1)] .95455 0 0 2 0 Minner Mrotshowa
p
.001 w
.08182 0 m
.08182 .00375 L
s
P
p
.001 w
.11818 0 m
.11818 .00375 L
s
P
p
.001 w
.15455 0 m
.15455 .00375 L
s
P
p
.001 w
.19091 0 m
.19091 .00375 L
s
P
p
.001 w
.26364 0 m
.26364 .00375 L
s
P
p
.001 w
.3 0 m
.3 .00375 L
s
P
p
.001 w
.33636 0 m
.33636 .00375 L
s
P
p
.001 w
.37273 0 m
.37273 .00375 L
s
P
p
.001 w
.44545 0 m
.44545 .00375 L
s
P
p
.001 w
.48182 0 m
.48182 .00375 L
s
P
p
.001 w
.51818 0 m
.51818 .00375 L
s
P
p
.001 w
.55455 0 m
.55455 .00375 L
s
P
p
.001 w
.62727 0 m
.62727 .00375 L
s
P
p
.001 w
.66364 0 m
.66364 .00375 L
s
P
p
.001 w
.7 0 m
.7 .00375 L
s
P
p
.001 w
.73636 0 m
.73636 .00375 L
s
P
p
.001 w
.80909 0 m
.80909 .00375 L
s
P
p
.001 w
.84545 0 m
.84545 .00375 L
s
P
p
.001 w
.88182 0 m
.88182 .00375 L
s
P
p
.001 w
.91818 0 m
.91818 .00375 L
s
P
p
.001 w
.00909 0 m
.00909 .00375 L
s
P
p
.001 w
.99091 0 m
.99091 .00375 L
s
P
[()] .5 0 0 2 0 0 -1 Mouter Mrotshowa
p
.002 w
0 0 m
1 0 L
s
P
p
.002 w
0 .02809 m
.00625 .02809 L
s
P
[(0)] -0.0125 .02809 1 0 0 Minner Mrotshowa
p
.002 w
0 .14046 m
.00625 .14046 L
s
P
[(0.2)] -0.0125 .14046 1 0 0 Minner Mrotshowa
p
.002 w
0 .25283 m
.00625 .25283 L
s
P
[(0.4)] -0.0125 .25283 1 0 0 Minner Mrotshowa
p
.002 w
0 .3652 m
.00625 .3652 L
s
P
[(0.6)] -0.0125 .3652 1 0 0 Minner Mrotshowa
p
.002 w
0 .47757 m
.00625 .47757 L
s
P
[(0.8)] -0.0125 .47757 1 0 0 Minner Mrotshowa
p
.002 w
0 .58994 m
.00625 .58994 L
s
P
[(1)] -0.0125 .58994 1 0 0 Minner Mrotshowa
p
.001 w
0 .05057 m
.00375 .05057 L
s
P
p
.001 w
0 .07304 m
.00375 .07304 L
s
P
p
.001 w
0 .09551 m
.00375 .09551 L
s
P
p
.001 w
0 .11799 m
.00375 .11799 L
s
P
p
.001 w
0 .16294 m
.00375 .16294 L
s
P
p
.001 w
0 .18541 m
.00375 .18541 L
s
P
p
.001 w
0 .20788 m
.00375 .20788 L
s
P
p
.001 w
0 .23036 m
.00375 .23036 L
s
P
p
.001 w
0 .27531 m
.00375 .27531 L
s
P
p
.001 w
0 .29778 m
.00375 .29778 L
s
P
p
.001 w
0 .32025 m
.00375 .32025 L
s
P
p
.001 w
0 .34273 m
.00375 .34273 L
s
P
p
.001 w
0 .38768 m
.00375 .38768 L
s
P
p
.001 w
0 .41015 m
.00375 .41015 L
s
P
p
.001 w
0 .43262 m
.00375 .43262 L
s
P
p
.001 w
0 .4551 m
.00375 .4551 L
s
P
p
.001 w
0 .50005 m
.00375 .50005 L
s
P
p
.001 w
0 .52252 m
.00375 .52252 L
s
P
p
.001 w
0 .54499 m
.00375 .54499 L
s
P
p
.001 w
0 .56747 m
.00375 .56747 L
s
P
p
.001 w
0 .00562 m
.00375 .00562 L
s
P
p
.001 w
0 .61242 m
.00375 .61242 L
s
P
p
.002 w
0 0 m
0 .61803 L
s
P
P
p
p
.002 w
.04545 .61178 m
.04545 .61803 L
s
P
p
.002 w
.22727 .61178 m
.22727 .61803 L
s
P
p
.002 w
.40909 .61178 m
.40909 .61803 L
s
P
p
.002 w
.59091 .61178 m
.59091 .61803 L
s
P
p
.002 w
.77273 .61178 m
.77273 .61803 L
s
P
p
.002 w
.95455 .61178 m
.95455 .61803 L
s
P
p
.001 w
.08182 .61428 m
.08182 .61803 L
s
P
p
.001 w
.11818 .61428 m
.11818 .61803 L
s
P
p
.001 w
.15455 .61428 m
.15455 .61803 L
s
P
p
.001 w
.19091 .61428 m
.19091 .61803 L
s
P
p
.001 w
.26364 .61428 m
.26364 .61803 L
s
P
p
.001 w
.3 .61428 m
.3 .61803 L
s
P
p
.001 w
.33636 .61428 m
.33636 .61803 L
s
P
p
.001 w
.37273 .61428 m
.37273 .61803 L
s
P
p
.001 w
.44545 .61428 m
.44545 .61803 L
s
P
p
.001 w
.48182 .61428 m
.48182 .61803 L
s
P
p
.001 w
.51818 .61428 m
.51818 .61803 L
s
P
p
.001 w
.55455 .61428 m
.55455 .61803 L
s
P
p
.001 w
.62727 .61428 m
.62727 .61803 L
s
P
p
.001 w
.66364 .61428 m
.66364 .61803 L
s
P
p
.001 w
.7 .61428 m
.7 .61803 L
s
P
p
.001 w
.73636 .61428 m
.73636 .61803 L
s
P
p
.001 w
.80909 .61428 m
.80909 .61803 L
s
P
p
.001 w
.84545 .61428 m
.84545 .61803 L
s
P
p
.001 w
.88182 .61428 m
.88182 .61803 L
s
P
p
.001 w
.91818 .61428 m
.91818 .61803 L
s
P
p
.001 w
.00909 .61428 m
.00909 .61803 L
s
P
p
.001 w
.99091 .61428 m
.99091 .61803 L
s
P
[(Mu = 5, 7, 9)] .5 .61803 0 -4 Mshowa
p
.002 w
0 .61803 m
1 .61803 L
s
P
p
.002 w
.99375 .02809 m
1 .02809 L
s
P
p
.002 w
.99375 .14046 m
1 .14046 L
s
P
p
.002 w
.99375 .25283 m
1 .25283 L
s
P
p
.002 w
.99375 .3652 m
1 .3652 L
s
P
p
.002 w
.99375 .47757 m
1 .47757 L
s
P
p
.002 w
.99375 .58994 m
1 .58994 L
s
P
p
.001 w
.99625 .05057 m
1 .05057 L
s
P
p
.001 w
.99625 .07304 m
1 .07304 L
s
P
p
.001 w
.99625 .09551 m
1 .09551 L
s
P
p
.001 w
.99625 .11799 m
1 .11799 L
s
P
p
.001 w
.99625 .16294 m
1 .16294 L
s
P
p
.001 w
.99625 .18541 m
1 .18541 L
s
P
p
.001 w
.99625 .20788 m
1 .20788 L
s
P
p
.001 w
.99625 .23036 m
1 .23036 L
s
P
p
.001 w
.99625 .27531 m
1 .27531 L
s
P
p
.001 w
.99625 .29778 m
1 .29778 L
s
P
p
.001 w
.99625 .32025 m
1 .32025 L
s
P
p
.001 w
.99625 .34273 m
1 .34273 L
s
P
p
.001 w
.99625 .38768 m
1 .38768 L
s
P
p
.001 w
.99625 .41015 m
1 .41015 L
s
P
p
.001 w
.99625 .43262 m
1 .43262 L
s
P
p
.001 w
.99625 .4551 m
1 .4551 L
s
P
p
.001 w
.99625 .50005 m
1 .50005 L
s
P
p
.001 w
.99625 .52252 m
1 .52252 L
s
P
p
.001 w
.99625 .54499 m
1 .54499 L
s
P
p
.001 w
.99625 .56747 m
1 .56747 L
s
P
p
.001 w
.99625 .00562 m
1 .00562 L
s
P
p
.001 w
.99625 .61242 m
1 .61242 L
s
P
p
.002 w
1 0 m
1 .61803 L
s
P
P
p
P
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
p
p
p
.001 w
.04545 .02809 m
.08333 .02916 L
.12121 .03028 L
.15909 .03152 L
.19697 .03287 L
.23485 .0345 L
.27273 .03635 L
.31061 .03854 L
.34848 .04124 L
.38636 .04444 L
.42424 .04843 L
.46212 .05327 L
.5 .05922 L
.53788 .06657 L
.57576 .07563 L
.61364 .08681 L
.65152 .10067 L
.68939 .11795 L
.72727 .13951 L
.76515 .16687 L
.80303 .20202 L
.84091 .24822 L
.85985 .27738 L
.87879 .31193 L
.89773 .35441 L
.91667 .40828 L
.92614 .44129 L
.93561 .48041 L
.95455 .58994 L
s
P
P
p
p
.001 w
.04545 .02809 m
.08333 .02826 L
.12121 .02843 L
.15909 .02865 L
.17803 .02876 L
.19697 .02888 L
.23485 .02922 L
.25379 .02938 L
.27273 .02961 L
.31061 .03017 L
.34848 .0309 L
.38636 .03186 L
.42424 .03315 L
.46212 .03489 L
.5 .03719 L
.53788 .04028 L
.57576 .04445 L
.61364 .05 L
.65152 .05747 L
.68939 .06754 L
.72727 .08107 L
.76515 .09955 L
.80303 .12509 L
.82197 .14144 L
.84091 .16119 L
.85985 .1854 L
.87879 .21541 L
.89773 .25457 L
.91667 .30867 L
.92614 .345 L
.93087 .36726 L
.93561 .39318 L
.94034 .42426 L
.94508 .46294 L
.94744 .48648 L
.94981 .5141 L
.95455 .58994 L
s
P
P
p
p
.001 w
.04545 .02809 m
.08333 .02812 L
.12121 .02815 L
.15909 .02818 L
.16383 .02819 L
.16619 .02819 L
.16856 .0282 L
.16974 .0282 L
.17093 .0282 L
.17211 .0282 L
.1733 .0282 L
.17448 .0282 L
.17566 .0282 L
.17803 .0282 L
.1804 .0282 L
.18277 .0282 L
.18513 .0282 L
.18632 .0282 L
.1875 .0282 L
.18868 .0282 L
.18987 .0282 L
.19105 .0282 L
.19223 .0282 L
.19342 .0282 L
.1946 .0282 L
.19579 .0282 L
.19697 .0282 L
.19934 .02821 L
.2017 .02822 L
.20644 .02823 L
.21117 .02825 L
.21354 .02826 L
.21473 .02826 L
.21591 .02826 L
.21709 .02826 L
.21828 .02826 L
.21946 .02826 L
.22064 .02826 L
.22183 .02826 L
.22301 .02826 L
.22538 .02826 L
.22775 .02826 L
.22893 .02826 L
.23011 .02826 L
.2313 .02826 L
.23248 .02826 L
.23366 .02826 L
.23485 .02826 L
.23722 .02827 L
.23958 .02827 L
Mistroke
.24432 .02829 L
.25379 .02832 L
.27273 .02837 L
.29167 .02843 L
.29285 .02843 L
.29403 .02843 L
.29522 .02843 L
.2964 .02843 L
.29759 .02843 L
.29877 .02843 L
.30114 .02844 L
.31061 .02849 L
.32008 .02853 L
.32481 .02855 L
.32955 .02857 L
.33191 .02858 L
.33428 .02859 L
.33665 .0286 L
.33902 .02863 L
.34848 .02871 L
.38636 .02899 L
.4053 .02916 L
.42424 .02938 L
.44318 .02963 L
.46212 .02995 L
.48106 .03037 L
.5 .03079 L
.51894 .03135 L
.53788 .03202 L
.55682 .03287 L
.57576 .03383 L
.5947 .035 L
.61364 .03646 L
.63258 .03821 L
.65152 .04028 L
.67045 .04278 L
.68939 .04579 L
.70833 .04951 L
.72727 .05394 L
.74621 .05931 L
.76515 .06584 L
.78409 .07379 L
.80303 .08351 L
.82197 .09538 L
.84091 .11023 L
.85985 .12892 L
.87879 .15283 L
.89773 .18513 L
.9072 .20598 L
.91667 .23162 L
Mistroke
.92614 .26448 L
.93087 .28517 L
.93561 .30998 L
.94034 .34171 L
.94271 .36098 L
.94508 .38355 L
.94744 .41214 L
.94981 .44911 L
.95099 .47166 L
.95218 .49925 L
.95336 .5383 L
.95455 .58994 L
Mfstroke
P
P
P
% End of Graphics
MathPictureEnd
end
showpage
%%EndDocument
 @endspecial 587 1329 a(Figure)i(23:)j(T)m(est)d(Problem)f(23,)g
Fl(y)q Fm(\()p Fl(x)p Fm(\))i(v)o(ersus)g Fl(x)p eop
%%Page: 24 24
24 23 bop 262 307 a Fn(T)l(est)15 b(Problem)e(24)h Fm(\(Nonlinear\))g
([1)o(,)f(p.21],)f([10)o(])i(and)f([6,)g(p.162])262 394
y Fl(\017A)p Fm(\()p Fl(x)p Fm(\))p Fl(y)q(y)408 377
y Fk(00)440 394 y Fj(\000)481 335 y Fh(\022)517 366 y
Fm(1)c(+)g Fl(\015)p 517 384 96 2 v 554 422 a Fm(2)626
394 y Fj(\000)h Fl(\017A)716 377 y Fk(0)727 394 y Fm(\()p
Fl(x)p Fm(\))783 335 y Fh(\023)821 394 y Fl(y)q(y)863
377 y Fk(0)885 394 y Fm(+)932 366 y Fl(y)953 351 y Fk(0)p
932 384 34 2 v 938 422 a Fl(y)980 394 y Fm(+)1026 366
y Fl(A)1057 351 y Fk(0)1069 366 y Fm(\()p Fl(x)p Fm(\))p
1026 384 99 2 v 1032 422 a Fl(A)p Fm(\()p Fl(x)p Fm(\))1137
335 y Fh(\022)1167 394 y Fm(1)f Fj(\000)1239 335 y Fh(\022)1274
366 y Fl(\015)j Fj(\000)e Fm(1)p 1274 384 96 2 v 1312
422 a(2)1375 335 y Fh(\023)1412 394 y Fl(y)1433 377 y
Fi(2)1453 335 y Fh(\023)1495 394 y Fm(=)h(0,)1182 480
y Fl(y)q Fm(\(0\))h(=)g(0)p Fl(:)p Fm(9129)p Fl(;)k(y)q
Fm(\(1\))d(=)f(0)p Fl(:)p Fm(375.)262 530 y(In)h(our)h(tests)i
Fl(A)p Fm(\()p Fl(x)p Fm(\))11 b(=)h(1)d(+)h Fl(x)723
515 y Fi(2)755 530 y Fm(and)k Fl(\015)g Fm(=)e(1)p Fl(:)p
Fm(4.)262 580 y(This)h(equation)h(represen)o(ts)i(a)e(sho)q(c)o(k)g(w)o
(a)o(v)o(e)g(in)f(a)h(one)g(dimensional)d(nozzle)k(\015o)o(w.)439
1883 y @beginspecial 72 @llx 72 @lly 540 @urx 720 @ury
2834 @rwi @setspecial
%%BeginDocument: ../PLOTS/pr24.ps

/Mathdict 150 dict def
Mathdict begin
/Mlmarg		1.0 72 mul def
/Mrmarg		1.0 72 mul def
/Mbmarg		1.0 72 mul def
/Mtmarg		1.0 72 mul def
/Mwidth		8.5 72 mul def
/Mheight	11 72 mul def
/Mtransform	{  } bind def
/Mnodistort	true def
/Mfixwid	true	def
/Mfixdash	false def
/Mrot		0	def
/Mpstart {
MathPictureStart
} bind def
/Mpend {
MathPictureEnd
} bind def
/Mscale {
0 1 0 1
5 -1 roll
MathScale
} bind def
/ISOLatin1Encoding dup where
{ pop pop }
{
[
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft
/logicalnot /hyphen /registered /macron
/degree /plusminus /twosuperior /threesuperior
/acute /mu /paragraph /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright
/onequarter /onehalf /threequarters /questiondown
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis
] def
} ifelse
/MFontDict 50 dict def
/MStrCat
{
exch
dup length
2 index length add
string
dup 3 1 roll
copy
length
exch dup
4 2 roll exch
putinterval
} def
/MCreateEncoding
{
1 index
255 string cvs
(-) MStrCat
1 index MStrCat
cvn exch
(Encoding) MStrCat
cvn dup where
{
exch get
}
{
pop
StandardEncoding
} ifelse
3 1 roll
dup MFontDict exch known not
{
1 index findfont
dup length dict
begin
{1 index /FID ne
{def}
{pop pop}
ifelse} forall
/Encoding 3 index
def
currentdict
end
1 index exch definefont pop
MFontDict 1 index
null put
}
if
exch pop
exch pop
} def
/ISOLatin1 { (ISOLatin1) MCreateEncoding } def
/ISO8859 { (ISOLatin1) MCreateEncoding } def
/Mcopyfont {
dup
maxlength
dict
exch
{
1 index
/FID
eq
{
pop pop
}
{
2 index
3 1 roll
put
}
ifelse
}
forall
} def
/Plain	/Courier findfont Mcopyfont definefont pop
/Bold	/Courier-Bold findfont Mcopyfont definefont pop
/Italic /Courier-Oblique findfont Mcopyfont definefont pop
/MathPictureStart {
gsave
Mtransform
Mlmarg
Mbmarg
translate
Mwidth
Mlmarg Mrmarg add
sub
/Mwidth exch def
Mheight
Mbmarg Mtmarg add
sub
/Mheight exch def
/Mtmatrix
matrix currentmatrix
def
/Mgmatrix
matrix currentmatrix
def
} bind def
/MathPictureEnd {
grestore
} bind def
/MFill {
0 0 		moveto
Mwidth 0 	lineto
Mwidth Mheight 	lineto
0 Mheight 	lineto
fill
} bind def
/MPlotRegion {
3 index
Mwidth mul
2 index
Mheight mul
translate
exch sub
Mheight mul
/Mheight
exch def
exch sub
Mwidth mul
/Mwidth
exch def
} bind def
/MathSubStart {
Momatrix
Mgmatrix Mtmatrix
Mwidth Mheight
7 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
Mgmatrix setmatrix
9 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
2 copy translate
/Mtmatrix matrix currentmatrix def
3 -1 roll
exch sub
/Mheight exch def
sub
/Mwidth exch def
} bind def
/MathSubEnd {
/Mheight exch def
/Mwidth exch def
/Mtmatrix exch def
dup setmatrix
/Mgmatrix exch def
/Momatrix exch def
} bind def
/Mdot {
moveto
0 0 rlineto
stroke
} bind def
/Mtetra {
moveto
lineto
lineto
lineto
fill
} bind def
/Metetra {
moveto
lineto
lineto
lineto
closepath
gsave
fill
grestore
0 setgray
stroke
} bind def
/Mistroke {
flattenpath
0 0 0
{
4 2 roll
pop pop
}
{
4 -1 roll
2 index
sub dup mul
4 -1 roll
2 index
sub dup mul
add sqrt
4 -1 roll
add
3 1 roll
}
{
stop
}
{
stop
}
pathforall
pop pop
currentpoint
stroke
moveto
currentdash
3 -1 roll
add
setdash
} bind def
/Mfstroke {
stroke
currentdash
pop 0
setdash
} bind def
/Mrotsboxa {
gsave
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
grestore
Msboxa
3  -1 roll
/Mtmatrix
exch def
/Mrot
0 def
} bind def
/Msboxa {
newpath
5 -1 roll
Mvboxa
pop
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Msboxa1
5 -3 roll
Msboxa1
Mboxrot
[
7 -2 roll
2 copy
[
3 1 roll
10 -1 roll
9 -1 roll
]
6 1 roll
5 -2 roll
]
} bind def
/Msboxa1 {
sub
2 div
dup
2 index
1 add
mul
3 -1 roll
-1 add
3 -1 roll
mul
} bind def
/Mvboxa	{
Mfixwid
{
Mvboxa1
}
{
dup
Mwidthcal
0 exch
{
add
}
forall
exch
Mvboxa1
4 index
7 -1 roll
add
4 -1 roll
pop
3 1 roll
}
ifelse
} bind def
/Mvboxa1 {
gsave
newpath
[ true
3 -1 roll
{
Mbbox
5 -1 roll
{
0
5 1 roll
}
{
7 -1 roll
exch sub
(m) stringwidth pop
.3 mul
sub
7 1 roll
6 -1 roll
4 -1 roll
Mmin
3 -1 roll
5 index
add
5 -1 roll
4 -1 roll
Mmax
4 -1 roll
}
ifelse
false
}
forall
{ stop } if
counttomark
1 add
4 roll
]
grestore
} bind def
/Mbbox {
1 dict begin
0 0 moveto
/temp (T) def
{	gsave
currentpoint newpath moveto
temp 0 3 -1 roll put temp
false charpath flattenpath currentpoint
pathbbox
grestore moveto lineto moveto} forall
pathbbox
newpath
end
} bind def
/Mmin {
2 copy
gt
{ exch } if
pop
} bind def
/Mmax {
2 copy
lt
{ exch } if
pop
} bind def
/Mrotshowa {
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
Mgmatrix setmatrix
Mshowa
/Mtmatrix
exch def
/Mrot 0 def
} bind def
/Mshowa {
4 -2 roll
moveto
2 index
Mtmatrix setmatrix
Mvboxa
7 1 roll
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Mshowa1
4 1 roll
Mshowa1
rmoveto
currentpoint
Mfixwid
{
Mshowax
}
{
Mshoway
}
ifelse
pop pop pop pop
Mgmatrix setmatrix
} bind def
/Mshowax {	
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
Mfixdash
{
Mfixdashp		
}
if
show
} for
} bind def
/Mfixdashp {
dup
length
1
gt
1 index
true exch
{
45
eq
and
} forall
and
{
gsave
(--)		
stringwidth pop
(-)
stringwidth pop
sub
2 div
0 rmoveto
dup
length
1 sub
{
(-)
show
}
repeat
grestore
}
if
} bind def	
/Mshoway {
3 index
Mwidthcal
5 1 roll
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
[
6 index
aload
length
2 add
-1 roll
{
pop
Strform
stringwidth
pop
neg 
exch
add
0 rmoveto
}
exch
kshow
cleartomark
} for
pop	
} bind def
/Mwidthcal {
[
exch
{
Mwidthcal1
}
forall
]
[
exch
dup
Maxlen
-1 add
0 1
3 -1 roll
{
[
exch
2 index
{		 
1 index	
Mget
exch
}
forall		
pop
Maxget
exch
}
for
pop
]
Mreva
} bind def
/Mreva	{
[
exch
aload
length
-1 1
{1 roll}
for
]
} bind def
/Mget	{
1 index
length
-1 add
1 index
ge
{
get
}
{
pop pop
0
}
ifelse
} bind def
/Maxlen	{
[
exch
{
length
}
forall
Maxget
} bind def
/Maxget	{
counttomark
-1 add
1 1
3 -1 roll
{
pop
Mmax
}
for
exch
pop
} bind def
/Mwidthcal1 {
[
exch
{
Strform
stringwidth
pop
}
forall
]
} bind def
/Strform {
/tem (x) def
tem 0
3 -1 roll
put
tem
} bind def
/Mshowa1 {
2 copy
add
4 1 roll
sub
mul
sub
-2 div
} bind def
/MathScale {
Mwidth
Mheight
Mlp
translate
scale
/yscale exch def
/ybias exch def
/xscale exch def
/xbias exch def
/Momatrix
xscale yscale matrix scale
xbias ybias matrix translate
matrix concatmatrix def
/Mgmatrix
matrix currentmatrix
def
} bind def
/Mlp {
3 copy
Mlpfirst
{
Mnodistort
{
Mmin
dup
} if
4 index
2 index
2 index
Mlprun
11 index
11 -1 roll
10 -4 roll
Mlp1
8 index
9 -5 roll
Mlp1
4 -1 roll
and
{ exit } if
3 -1 roll
pop pop
} loop
exch
3 1 roll
7 -3 roll
pop pop pop
} bind def
/Mlpfirst {
3 -1 roll
dup length
2 copy
-2 add
get
aload
pop pop pop
4 -2 roll
-1 add
get
aload
pop pop pop
6 -1 roll
3 -1 roll
5 -1 roll
sub
div
4 1 roll
exch sub
div
} bind def
/Mlprun {
2 copy
4 index
0 get
dup
4 1 roll
Mlprun1
3 copy
8 -2 roll
9 -1 roll
{
3 copy
Mlprun1
3 copy
11 -3 roll
/gt Mlpminmax
8 3 roll
11 -3 roll
/lt Mlpminmax
8 3 roll
} forall
pop pop pop pop
3 1 roll
pop pop
aload pop
5 -1 roll
aload pop
exch
6 -1 roll
Mlprun2
8 2 roll
4 -1 roll
Mlprun2
6 2 roll
3 -1 roll
Mlprun2
4 2 roll
exch
Mlprun2
6 2 roll
} bind def
/Mlprun1 {
aload pop
exch
6 -1 roll
5 -1 roll
mul add
4 -2 roll
mul
3 -1 roll
add
} bind def
/Mlprun2 {
2 copy
add 2 div
3 1 roll
exch sub
} bind def
/Mlpminmax {
cvx
2 index
6 index
2 index
exec
{
7 -3 roll
4 -1 roll
} if
1 index
5 index
3 -1 roll
exec
{
4 1 roll
pop
5 -1 roll
aload
pop pop
4 -1 roll
aload pop
[
8 -2 roll
pop
5 -2 roll
pop
6 -2 roll
pop
5 -1 roll
]
4 1 roll
pop
}
{
pop pop pop
} ifelse
} bind def
/Mlp1 {
5 index
3 index	sub
5 index
2 index mul
1 index
le
1 index
0 le
or
dup
not
{
1 index
3 index	div
.99999 mul
8 -1 roll
pop
7 1 roll
}
if
8 -1 roll
2 div
7 -2 roll
pop sub
5 index
6 -3 roll
pop pop
mul sub
exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
outflag
1
eq
{
/outflag 0 def
/intop 0 def
/inrht 0 def
} if		
5 index
gsave
Mtmatrix setmatrix
Mvboxa pop
grestore
3 -1 roll
pop
dup
intop
gt
{
/intop
exch def
}
{ pop }
ifelse
dup
inrht
gt
{
/inrht
exch def
}
{ pop }
ifelse
pop
/inflag
1 def
} bind def
/Mouter {
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
inflag
1 eq
{
dup
0 lt
{
dup
intop
mul
neg
/yadtop
exch def
} if
dup
0 gt
{
dup
intop
mul
/yadbot
exch def
}
if
pop
dup
0 lt
{
dup
inrht
mul
neg
/xadrht
exch def
} if
dup
0 gt
{
dup
inrht
mul
/xadlft
exch def
} if
pop
/outflag 1 def
}
{ pop pop}
ifelse
/inflag 0 def
/inrht 0 def
/intop 0 def
} bind def	
/Mboxout {
outflag
1
eq
{
4 -1
roll
xadlft
leadjust
add
sub
4 1 roll
3 -1
roll
yadbot
leadjust
add
sub
3 1
roll
exch
xadrht
leadjust
add
add
exch
yadtop
leadjust
add
add
/outflag 0 def
/xadlft 0 def
/yadbot 0 def
/xadrht 0 def
/yadtop 0 def
} if
} bind def
/leadjust {
(m) stringwidth pop
.5 mul
} bind def
/Mrotcheck {
dup
90
eq
{
yadbot
/yadbot
xadrht
def	
/xadrht
yadtop
def
/yadtop
xadlft
def
/xadlft
exch
def
}
if
dup
cos
1 index
sin
Checkaux
dup
cos
1 index
sin neg
exch
Checkaux
3 1 roll
pop pop
} bind def
/Checkaux {
4 index
exch
4 index
mul
3 1 roll
mul add
4 1 roll
} bind def
/Mboxrot {
Mrot
90 eq
{
brotaux
4 2
roll
}
if
Mrot
180 eq
{
4 2
roll
brotaux
4 2
roll
brotaux
}	
if
Mrot
270 eq
{
4 2
roll
brotaux
}
if
} bind def
/brotaux {
neg
exch
neg
} bind def
/Mabsproc {
0
matrix defaultmatrix
dtransform idtransform
dup mul exch
dup mul
add sqrt
} bind def
/Mabswid {
Mabsproc
setlinewidth	
} bind def
/Mabsdash {
exch
[
exch
{
Mabsproc
}
forall
]
exch
setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop}
repeat
} bind def
} ifelse
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/setcmykcolor where
{ pop}
{ /setcmykcolor {
4 1
roll
[
4 1 
roll
]
{
1 index
sub
1
sub neg
dup
0
lt
{
pop
0
}
if
dup
1
gt
{
pop
1
}
if
exch
} forall
pop
setrgbcolor
} bind def
} ifelse
/Mcharproc
{
currentfile
(x)
readhexstring
pop
0 get
exch
div
} bind def
/Mshadeproc
{
dup
3 1
roll
{
dup
Mcharproc
3 1
roll
} repeat
1 eq
{
setgray
}
{
3 eq
{
setrgbcolor
}
{
setcmykcolor
} ifelse
} ifelse
} bind def
/Mrectproc
{
3 index
2 index
moveto
2 index
3 -1
roll
lineto
dup
3 1
roll
lineto
lineto
fill
} bind def
/Mcolorimage
{
7 1
roll
pop
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
9 index
Mshadeproc
Mrectproc
} for
pop
} for
pop pop pop pop
} bind def
/Mimage
{
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
Mcharproc
setgray
Mrectproc
} for
pop
} for
pop pop pop
} bind def

MathPictureStart
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0454545 0.909091 -0.0988854 0.494427 [
[(0)] .04545 0 0 2 0 Minner Mrotsboxa
[(0.2)] .22727 0 0 2 0 Minner Mrotsboxa
[(0.4)] .40909 0 0 2 0 Minner Mrotsboxa
[(0.6)] .59091 0 0 2 0 Minner Mrotsboxa
[(0.8)] .77273 0 0 2 0 Minner Mrotsboxa
[(1)] .95455 0 0 2 0 Minner Mrotsboxa
[()] .5 0 0 2 0 0 -1 Mouter Mrotsboxa
[(0.2)] -0.0125 0 1 0 0 Minner Mrotsboxa
[(0.4)] -0.0125 .09889 1 0 0 Minner Mrotsboxa
[(0.6)] -0.0125 .19777 1 0 0 Minner Mrotsboxa
[(0.8)] -0.0125 .29666 1 0 0 Minner Mrotsboxa
[(1)] -0.0125 .39554 1 0 0 Minner Mrotsboxa
[(1.2)] -0.0125 .49443 1 0 0 Minner Mrotsboxa
[(1.4)] -0.0125 .59331 1 0 0 Minner Mrotsboxa
[(Epsilon = 0.03, 0.01, 0.001)] .5 .61803 0 -4 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 .61903 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 g
p
p
.002 w
.04545 0 m
.04545 .00625 L
s
P
[(0)] .04545 0 0 2 0 Minner Mrotshowa
p
.002 w
.22727 0 m
.22727 .00625 L
s
P
[(0.2)] .22727 0 0 2 0 Minner Mrotshowa
p
.002 w
.40909 0 m
.40909 .00625 L
s
P
[(0.4)] .40909 0 0 2 0 Minner Mrotshowa
p
.002 w
.59091 0 m
.59091 .00625 L
s
P
[(0.6)] .59091 0 0 2 0 Minner Mrotshowa
p
.002 w
.77273 0 m
.77273 .00625 L
s
P
[(0.8)] .77273 0 0 2 0 Minner Mrotshowa
p
.002 w
.95455 0 m
.95455 .00625 L
s
P
[(1)] .95455 0 0 2 0 Minner Mrotshowa
p
.001 w
.08182 0 m
.08182 .00375 L
s
P
p
.001 w
.11818 0 m
.11818 .00375 L
s
P
p
.001 w
.15455 0 m
.15455 .00375 L
s
P
p
.001 w
.19091 0 m
.19091 .00375 L
s
P
p
.001 w
.26364 0 m
.26364 .00375 L
s
P
p
.001 w
.3 0 m
.3 .00375 L
s
P
p
.001 w
.33636 0 m
.33636 .00375 L
s
P
p
.001 w
.37273 0 m
.37273 .00375 L
s
P
p
.001 w
.44545 0 m
.44545 .00375 L
s
P
p
.001 w
.48182 0 m
.48182 .00375 L
s
P
p
.001 w
.51818 0 m
.51818 .00375 L
s
P
p
.001 w
.55455 0 m
.55455 .00375 L
s
P
p
.001 w
.62727 0 m
.62727 .00375 L
s
P
p
.001 w
.66364 0 m
.66364 .00375 L
s
P
p
.001 w
.7 0 m
.7 .00375 L
s
P
p
.001 w
.73636 0 m
.73636 .00375 L
s
P
p
.001 w
.80909 0 m
.80909 .00375 L
s
P
p
.001 w
.84545 0 m
.84545 .00375 L
s
P
p
.001 w
.88182 0 m
.88182 .00375 L
s
P
p
.001 w
.91818 0 m
.91818 .00375 L
s
P
p
.001 w
.00909 0 m
.00909 .00375 L
s
P
p
.001 w
.99091 0 m
.99091 .00375 L
s
P
[()] .5 0 0 2 0 0 -1 Mouter Mrotshowa
p
.002 w
0 0 m
1 0 L
s
P
p
.002 w
0 0 m
.00625 0 L
s
P
[(0.2)] -0.0125 0 1 0 0 Minner Mrotshowa
p
.002 w
0 .09889 m
.00625 .09889 L
s
P
[(0.4)] -0.0125 .09889 1 0 0 Minner Mrotshowa
p
.002 w
0 .19777 m
.00625 .19777 L
s
P
[(0.6)] -0.0125 .19777 1 0 0 Minner Mrotshowa
p
.002 w
0 .29666 m
.00625 .29666 L
s
P
[(0.8)] -0.0125 .29666 1 0 0 Minner Mrotshowa
p
.002 w
0 .39554 m
.00625 .39554 L
s
P
[(1)] -0.0125 .39554 1 0 0 Minner Mrotshowa
p
.002 w
0 .49443 m
.00625 .49443 L
s
P
[(1.2)] -0.0125 .49443 1 0 0 Minner Mrotshowa
p
.002 w
0 .59331 m
.00625 .59331 L
s
P
[(1.4)] -0.0125 .59331 1 0 0 Minner Mrotshowa
p
.001 w
0 .01978 m
.00375 .01978 L
s
P
p
.001 w
0 .03955 m
.00375 .03955 L
s
P
p
.001 w
0 .05933 m
.00375 .05933 L
s
P
p
.001 w
0 .07911 m
.00375 .07911 L
s
P
p
.001 w
0 .11866 m
.00375 .11866 L
s
P
p
.001 w
0 .13844 m
.00375 .13844 L
s
P
p
.001 w
0 .15822 m
.00375 .15822 L
s
P
p
.001 w
0 .17799 m
.00375 .17799 L
s
P
p
.001 w
0 .21755 m
.00375 .21755 L
s
P
p
.001 w
0 .23733 m
.00375 .23733 L
s
P
p
.001 w
0 .2571 m
.00375 .2571 L
s
P
p
.001 w
0 .27688 m
.00375 .27688 L
s
P
p
.001 w
0 .31643 m
.00375 .31643 L
s
P
p
.001 w
0 .33621 m
.00375 .33621 L
s
P
p
.001 w
0 .35599 m
.00375 .35599 L
s
P
p
.001 w
0 .37576 m
.00375 .37576 L
s
P
p
.001 w
0 .41532 m
.00375 .41532 L
s
P
p
.001 w
0 .4351 m
.00375 .4351 L
s
P
p
.001 w
0 .45487 m
.00375 .45487 L
s
P
p
.001 w
0 .47465 m
.00375 .47465 L
s
P
p
.001 w
0 .5142 m
.00375 .5142 L
s
P
p
.001 w
0 .53398 m
.00375 .53398 L
s
P
p
.001 w
0 .55376 m
.00375 .55376 L
s
P
p
.001 w
0 .57354 m
.00375 .57354 L
s
P
p
.001 w
0 .61309 m
.00375 .61309 L
s
P
p
.002 w
0 0 m
0 .61803 L
s
P
P
p
p
.002 w
.04545 .61178 m
.04545 .61803 L
s
P
p
.002 w
.22727 .61178 m
.22727 .61803 L
s
P
p
.002 w
.40909 .61178 m
.40909 .61803 L
s
P
p
.002 w
.59091 .61178 m
.59091 .61803 L
s
P
p
.002 w
.77273 .61178 m
.77273 .61803 L
s
P
p
.002 w
.95455 .61178 m
.95455 .61803 L
s
P
p
.001 w
.08182 .61428 m
.08182 .61803 L
s
P
p
.001 w
.11818 .61428 m
.11818 .61803 L
s
P
p
.001 w
.15455 .61428 m
.15455 .61803 L
s
P
p
.001 w
.19091 .61428 m
.19091 .61803 L
s
P
p
.001 w
.26364 .61428 m
.26364 .61803 L
s
P
p
.001 w
.3 .61428 m
.3 .61803 L
s
P
p
.001 w
.33636 .61428 m
.33636 .61803 L
s
P
p
.001 w
.37273 .61428 m
.37273 .61803 L
s
P
p
.001 w
.44545 .61428 m
.44545 .61803 L
s
P
p
.001 w
.48182 .61428 m
.48182 .61803 L
s
P
p
.001 w
.51818 .61428 m
.51818 .61803 L
s
P
p
.001 w
.55455 .61428 m
.55455 .61803 L
s
P
p
.001 w
.62727 .61428 m
.62727 .61803 L
s
P
p
.001 w
.66364 .61428 m
.66364 .61803 L
s
P
p
.001 w
.7 .61428 m
.7 .61803 L
s
P
p
.001 w
.73636 .61428 m
.73636 .61803 L
s
P
p
.001 w
.80909 .61428 m
.80909 .61803 L
s
P
p
.001 w
.84545 .61428 m
.84545 .61803 L
s
P
p
.001 w
.88182 .61428 m
.88182 .61803 L
s
P
p
.001 w
.91818 .61428 m
.91818 .61803 L
s
P
p
.001 w
.00909 .61428 m
.00909 .61803 L
s
P
p
.001 w
.99091 .61428 m
.99091 .61803 L
s
P
[(Epsilon = 0.03, 0.01, 0.001)] .5 .61803 0 -4 Mshowa
p
.002 w
0 .61803 m
1 .61803 L
s
P
p
.002 w
.99375 0 m
1 0 L
s
P
p
.002 w
.99375 .09889 m
1 .09889 L
s
P
p
.002 w
.99375 .19777 m
1 .19777 L
s
P
p
.002 w
.99375 .29666 m
1 .29666 L
s
P
p
.002 w
.99375 .39554 m
1 .39554 L
s
P
p
.002 w
.99375 .49443 m
1 .49443 L
s
P
p
.002 w
.99375 .59331 m
1 .59331 L
s
P
p
.001 w
.99625 .01978 m
1 .01978 L
s
P
p
.001 w
.99625 .03955 m
1 .03955 L
s
P
p
.001 w
.99625 .05933 m
1 .05933 L
s
P
p
.001 w
.99625 .07911 m
1 .07911 L
s
P
p
.001 w
.99625 .11866 m
1 .11866 L
s
P
p
.001 w
.99625 .13844 m
1 .13844 L
s
P
p
.001 w
.99625 .15822 m
1 .15822 L
s
P
p
.001 w
.99625 .17799 m
1 .17799 L
s
P
p
.001 w
.99625 .21755 m
1 .21755 L
s
P
p
.001 w
.99625 .23733 m
1 .23733 L
s
P
p
.001 w
.99625 .2571 m
1 .2571 L
s
P
p
.001 w
.99625 .27688 m
1 .27688 L
s
P
p
.001 w
.99625 .31643 m
1 .31643 L
s
P
p
.001 w
.99625 .33621 m
1 .33621 L
s
P
p
.001 w
.99625 .35599 m
1 .35599 L
s
P
p
.001 w
.99625 .37576 m
1 .37576 L
s
P
p
.001 w
.99625 .41532 m
1 .41532 L
s
P
p
.001 w
.99625 .4351 m
1 .4351 L
s
P
p
.001 w
.99625 .45487 m
1 .45487 L
s
P
p
.001 w
.99625 .47465 m
1 .47465 L
s
P
p
.001 w
.99625 .5142 m
1 .5142 L
s
P
p
.001 w
.99625 .53398 m
1 .53398 L
s
P
p
.001 w
.99625 .55376 m
1 .55376 L
s
P
p
.001 w
.99625 .57354 m
1 .57354 L
s
P
p
.001 w
.99625 .61309 m
1 .61309 L
s
P
p
.002 w
1 0 m
1 .61803 L
s
P
P
p
P
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
p
p
p
.001 w
.04545 .35248 m
.08333 .36962 L
.12121 .38671 L
.15909 .40365 L
.19697 .4203 L
.23485 .43659 L
.27273 .45225 L
.31061 .46693 L
.34848 .4799 L
.36742 .48537 L
.37689 .48772 L
.38636 .48978 L
.39583 .49154 L
.40057 .49223 L
.4053 .49285 L
.41004 .49335 L
.41477 .49372 L
.41596 .49379 L
.41714 .49385 L
.41832 .4939 L
.41951 .49393 L
.42069 .49396 L
.42188 .49398 L
.42306 .49398 L
.42424 .49398 L
.42543 .49398 L
.42661 .49396 L
.42779 .49393 L
.42898 .4939 L
.43016 .49385 L
.43134 .49379 L
.43371 .49363 L
.43845 .49318 L
.44318 .49255 L
.44555 .49213 L
.44792 .49165 L
.45265 .49055 L
.46212 .48759 L
.47159 .48347 L
.48106 .47808 L
.49053 .47117 L
.5 .46268 L
.51894 .44015 L
.53788 .40998 L
.57576 .32912 L
.5947 .28575 L
.61364 .24716 L
.62311 .23106 L
.63258 .21741 L
.64205 .20604 L
Mistroke
.65152 .19666 L
.67045 .1822 L
.68939 .1715 L
.72727 .15505 L
.76515 .14112 L
.80303 .12849 L
.84091 .11683 L
.87879 .10601 L
.91667 .09591 L
.95455 .08652 L
Mfstroke
P
P
p
p
.001 w
.04545 .35248 m
.08333 .36967 L
.12121 .38685 L
.15909 .4039 L
.19697 .42079 L
.23485 .43748 L
.27273 .45388 L
.31061 .46999 L
.34848 .48574 L
.38636 .50105 L
.42424 .51592 L
.46212 .53024 L
.48106 .53699 L
.5 .54318 L
.50947 .54585 L
.51894 .54788 L
.52131 .54828 L
.52367 .54862 L
.52486 .54876 L
.52604 .54887 L
.52723 .54895 L
.52841 .54901 L
.52959 .54907 L
.53078 .54911 L
.53196 .5491 L
.53314 .54906 L
.53433 .549 L
.53551 .54892 L
.5367 .54881 L
.53788 .54867 L
.54025 .54823 L
.54261 .54763 L
.54498 .54679 L
.54735 .54581 L
.54972 .54452 L
.55208 .54299 L
.55682 .53888 L
.56155 .53323 L
.56629 .52565 L
.57102 .51563 L
.57576 .50274 L
.58049 .48642 L
.58523 .46665 L
.5947 .41402 L
.60417 .34774 L
.61364 .28093 L
.61837 .2533 L
.62311 .23173 L
.62547 .2234 L
.62784 .21605 L
Mistroke
.63021 .21021 L
.63258 .20528 L
.63731 .19797 L
.63968 .19521 L
.64205 .19283 L
.65152 .18607 L
.66098 .18117 L
.67045 .17686 L
.68939 .16888 L
.72727 .15416 L
.76515 .14067 L
.80303 .1282 L
.84091 .11664 L
.87879 .10591 L
.91667 .09586 L
.95455 .08652 L
Mfstroke
P
P
p
p
.001 w
.04545 .35248 m
.08333 .36962 L
.12121 .3868 L
.15909 .40385 L
.19697 .42074 L
.23485 .43748 L
.27273 .45388 L
.31061 .46994 L
.34848 .48569 L
.38636 .50105 L
.42424 .51592 L
.46212 .53037 L
.5 .54441 L
.53788 .5579 L
.55682 .56449 L
.57576 .57091 L
.5947 .57723 L
.59943 .57882 L
.6018 .57956 L
.60417 .58026 L
.60535 .58054 L
.60653 .58076 L
.60772 .58076 L
.6089 .58046 L
.61009 .57952 L
.61127 .57749 L
.61245 .57317 L
.61364 .56498 L
.61482 .54962 L
.616 .52199 L
.61719 .47504 L
.61837 .4038 L
.61955 .3169 L
.62074 .24574 L
.62192 .2126 L
.62311 .20093 L
.62429 .1978 L
.62547 .19662 L
.62784 .19533 L
.63258 .19311 L
.65152 .18448 L
.68939 .16844 L
.72727 .15387 L
.76515 .14048 L
.80303 .12805 L
.84091 .11654 L
.87879 .10586 L
.91667 .09586 L
.95455 .08652 L
s
P
P
P
% End of Graphics
MathPictureEnd
end
showpage
%%EndDocument
 @endspecial 587 1502 a(Figure)f(24:)j(T)m(est)d(Problem)f(24,)g
Fl(y)q Fm(\()p Fl(x)p Fm(\))i(v)o(ersus)g Fl(x)p eop
%%Page: 25 25
25 24 bop 262 307 a Fn(T)l(est)15 b(Problem)e(25)h Fm(\(Nonlinear\))g
(\(see)h(e.g.)j([4)o(,)13 b(pp.29-38])f(and)i([6)o(,)g(p.159]\))262
357 y Fl(\017y)300 342 y Fk(00)331 357 y Fm(+)9 b Fl(y)q(y)414
342 y Fk(0)437 357 y Fj(\000)g Fl(y)14 b Fm(=)d(0,)60
b Fl(y)q Fm(\(0\))12 b(=)g Fj(\000)815 341 y Fi(1)p 815
348 17 2 v 815 371 a(3)837 357 y Fl(;)18 b(y)q Fm(\(1\))12
b(=)1002 341 y Fi(1)p 1002 348 V 1002 371 a(3)1023 357
y Fm(.)262 407 y(The)i(solution)f(has)h(corner)h(la)o(y)o(ers)f(at)g
Fl(x)d Fm(=)957 390 y Fi(1)p 957 397 V 957 421 a(3)992
407 y Fm(and)j Fl(x)d Fm(=)1157 390 y Fi(2)p 1157 397
V 1157 421 a(3)1178 407 y Fm(.)439 1717 y @beginspecial
72 @llx 72 @lly 540 @urx 720 @ury 2834 @rwi @setspecial
%%BeginDocument: ../PLOTS/pr25.ps

/Mathdict 150 dict def
Mathdict begin
/Mlmarg		1.0 72 mul def
/Mrmarg		1.0 72 mul def
/Mbmarg		1.0 72 mul def
/Mtmarg		1.0 72 mul def
/Mwidth		8.5 72 mul def
/Mheight	11 72 mul def
/Mtransform	{  } bind def
/Mnodistort	true def
/Mfixwid	true	def
/Mfixdash	false def
/Mrot		0	def
/Mpstart {
MathPictureStart
} bind def
/Mpend {
MathPictureEnd
} bind def
/Mscale {
0 1 0 1
5 -1 roll
MathScale
} bind def
/ISOLatin1Encoding dup where
{ pop pop }
{
[
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft
/logicalnot /hyphen /registered /macron
/degree /plusminus /twosuperior /threesuperior
/acute /mu /paragraph /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright
/onequarter /onehalf /threequarters /questiondown
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis
] def
} ifelse
/MFontDict 50 dict def
/MStrCat
{
exch
dup length
2 index length add
string
dup 3 1 roll
copy
length
exch dup
4 2 roll exch
putinterval
} def
/MCreateEncoding
{
1 index
255 string cvs
(-) MStrCat
1 index MStrCat
cvn exch
(Encoding) MStrCat
cvn dup where
{
exch get
}
{
pop
StandardEncoding
} ifelse
3 1 roll
dup MFontDict exch known not
{
1 index findfont
dup length dict
begin
{1 index /FID ne
{def}
{pop pop}
ifelse} forall
/Encoding 3 index
def
currentdict
end
1 index exch definefont pop
MFontDict 1 index
null put
}
if
exch pop
exch pop
} def
/ISOLatin1 { (ISOLatin1) MCreateEncoding } def
/ISO8859 { (ISOLatin1) MCreateEncoding } def
/Mcopyfont {
dup
maxlength
dict
exch
{
1 index
/FID
eq
{
pop pop
}
{
2 index
3 1 roll
put
}
ifelse
}
forall
} def
/Plain	/Courier findfont Mcopyfont definefont pop
/Bold	/Courier-Bold findfont Mcopyfont definefont pop
/Italic /Courier-Oblique findfont Mcopyfont definefont pop
/MathPictureStart {
gsave
Mtransform
Mlmarg
Mbmarg
translate
Mwidth
Mlmarg Mrmarg add
sub
/Mwidth exch def
Mheight
Mbmarg Mtmarg add
sub
/Mheight exch def
/Mtmatrix
matrix currentmatrix
def
/Mgmatrix
matrix currentmatrix
def
} bind def
/MathPictureEnd {
grestore
} bind def
/MFill {
0 0 		moveto
Mwidth 0 	lineto
Mwidth Mheight 	lineto
0 Mheight 	lineto
fill
} bind def
/MPlotRegion {
3 index
Mwidth mul
2 index
Mheight mul
translate
exch sub
Mheight mul
/Mheight
exch def
exch sub
Mwidth mul
/Mwidth
exch def
} bind def
/MathSubStart {
Momatrix
Mgmatrix Mtmatrix
Mwidth Mheight
7 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
Mgmatrix setmatrix
9 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
2 copy translate
/Mtmatrix matrix currentmatrix def
3 -1 roll
exch sub
/Mheight exch def
sub
/Mwidth exch def
} bind def
/MathSubEnd {
/Mheight exch def
/Mwidth exch def
/Mtmatrix exch def
dup setmatrix
/Mgmatrix exch def
/Momatrix exch def
} bind def
/Mdot {
moveto
0 0 rlineto
stroke
} bind def
/Mtetra {
moveto
lineto
lineto
lineto
fill
} bind def
/Metetra {
moveto
lineto
lineto
lineto
closepath
gsave
fill
grestore
0 setgray
stroke
} bind def
/Mistroke {
flattenpath
0 0 0
{
4 2 roll
pop pop
}
{
4 -1 roll
2 index
sub dup mul
4 -1 roll
2 index
sub dup mul
add sqrt
4 -1 roll
add
3 1 roll
}
{
stop
}
{
stop
}
pathforall
pop pop
currentpoint
stroke
moveto
currentdash
3 -1 roll
add
setdash
} bind def
/Mfstroke {
stroke
currentdash
pop 0
setdash
} bind def
/Mrotsboxa {
gsave
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
grestore
Msboxa
3  -1 roll
/Mtmatrix
exch def
/Mrot
0 def
} bind def
/Msboxa {
newpath
5 -1 roll
Mvboxa
pop
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Msboxa1
5 -3 roll
Msboxa1
Mboxrot
[
7 -2 roll
2 copy
[
3 1 roll
10 -1 roll
9 -1 roll
]
6 1 roll
5 -2 roll
]
} bind def
/Msboxa1 {
sub
2 div
dup
2 index
1 add
mul
3 -1 roll
-1 add
3 -1 roll
mul
} bind def
/Mvboxa	{
Mfixwid
{
Mvboxa1
}
{
dup
Mwidthcal
0 exch
{
add
}
forall
exch
Mvboxa1
4 index
7 -1 roll
add
4 -1 roll
pop
3 1 roll
}
ifelse
} bind def
/Mvboxa1 {
gsave
newpath
[ true
3 -1 roll
{
Mbbox
5 -1 roll
{
0
5 1 roll
}
{
7 -1 roll
exch sub
(m) stringwidth pop
.3 mul
sub
7 1 roll
6 -1 roll
4 -1 roll
Mmin
3 -1 roll
5 index
add
5 -1 roll
4 -1 roll
Mmax
4 -1 roll
}
ifelse
false
}
forall
{ stop } if
counttomark
1 add
4 roll
]
grestore
} bind def
/Mbbox {
1 dict begin
0 0 moveto
/temp (T) def
{	gsave
currentpoint newpath moveto
temp 0 3 -1 roll put temp
false charpath flattenpath currentpoint
pathbbox
grestore moveto lineto moveto} forall
pathbbox
newpath
end
} bind def
/Mmin {
2 copy
gt
{ exch } if
pop
} bind def
/Mmax {
2 copy
lt
{ exch } if
pop
} bind def
/Mrotshowa {
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
Mgmatrix setmatrix
Mshowa
/Mtmatrix
exch def
/Mrot 0 def
} bind def
/Mshowa {
4 -2 roll
moveto
2 index
Mtmatrix setmatrix
Mvboxa
7 1 roll
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Mshowa1
4 1 roll
Mshowa1
rmoveto
currentpoint
Mfixwid
{
Mshowax
}
{
Mshoway
}
ifelse
pop pop pop pop
Mgmatrix setmatrix
} bind def
/Mshowax {	
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
Mfixdash
{
Mfixdashp		
}
if
show
} for
} bind def
/Mfixdashp {
dup
length
1
gt
1 index
true exch
{
45
eq
and
} forall
and
{
gsave
(--)		
stringwidth pop
(-)
stringwidth pop
sub
2 div
0 rmoveto
dup
length
1 sub
{
(-)
show
}
repeat
grestore
}
if
} bind def	
/Mshoway {
3 index
Mwidthcal
5 1 roll
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
[
6 index
aload
length
2 add
-1 roll
{
pop
Strform
stringwidth
pop
neg 
exch
add
0 rmoveto
}
exch
kshow
cleartomark
} for
pop	
} bind def
/Mwidthcal {
[
exch
{
Mwidthcal1
}
forall
]
[
exch
dup
Maxlen
-1 add
0 1
3 -1 roll
{
[
exch
2 index
{		 
1 index	
Mget
exch
}
forall		
pop
Maxget
exch
}
for
pop
]
Mreva
} bind def
/Mreva	{
[
exch
aload
length
-1 1
{1 roll}
for
]
} bind def
/Mget	{
1 index
length
-1 add
1 index
ge
{
get
}
{
pop pop
0
}
ifelse
} bind def
/Maxlen	{
[
exch
{
length
}
forall
Maxget
} bind def
/Maxget	{
counttomark
-1 add
1 1
3 -1 roll
{
pop
Mmax
}
for
exch
pop
} bind def
/Mwidthcal1 {
[
exch
{
Strform
stringwidth
pop
}
forall
]
} bind def
/Strform {
/tem (x) def
tem 0
3 -1 roll
put
tem
} bind def
/Mshowa1 {
2 copy
add
4 1 roll
sub
mul
sub
-2 div
} bind def
/MathScale {
Mwidth
Mheight
Mlp
translate
scale
/yscale exch def
/ybias exch def
/xscale exch def
/xbias exch def
/Momatrix
xscale yscale matrix scale
xbias ybias matrix translate
matrix concatmatrix def
/Mgmatrix
matrix currentmatrix
def
} bind def
/Mlp {
3 copy
Mlpfirst
{
Mnodistort
{
Mmin
dup
} if
4 index
2 index
2 index
Mlprun
11 index
11 -1 roll
10 -4 roll
Mlp1
8 index
9 -5 roll
Mlp1
4 -1 roll
and
{ exit } if
3 -1 roll
pop pop
} loop
exch
3 1 roll
7 -3 roll
pop pop pop
} bind def
/Mlpfirst {
3 -1 roll
dup length
2 copy
-2 add
get
aload
pop pop pop
4 -2 roll
-1 add
get
aload
pop pop pop
6 -1 roll
3 -1 roll
5 -1 roll
sub
div
4 1 roll
exch sub
div
} bind def
/Mlprun {
2 copy
4 index
0 get
dup
4 1 roll
Mlprun1
3 copy
8 -2 roll
9 -1 roll
{
3 copy
Mlprun1
3 copy
11 -3 roll
/gt Mlpminmax
8 3 roll
11 -3 roll
/lt Mlpminmax
8 3 roll
} forall
pop pop pop pop
3 1 roll
pop pop
aload pop
5 -1 roll
aload pop
exch
6 -1 roll
Mlprun2
8 2 roll
4 -1 roll
Mlprun2
6 2 roll
3 -1 roll
Mlprun2
4 2 roll
exch
Mlprun2
6 2 roll
} bind def
/Mlprun1 {
aload pop
exch
6 -1 roll
5 -1 roll
mul add
4 -2 roll
mul
3 -1 roll
add
} bind def
/Mlprun2 {
2 copy
add 2 div
3 1 roll
exch sub
} bind def
/Mlpminmax {
cvx
2 index
6 index
2 index
exec
{
7 -3 roll
4 -1 roll
} if
1 index
5 index
3 -1 roll
exec
{
4 1 roll
pop
5 -1 roll
aload
pop pop
4 -1 roll
aload pop
[
8 -2 roll
pop
5 -2 roll
pop
6 -2 roll
pop
5 -1 roll
]
4 1 roll
pop
}
{
pop pop pop
} ifelse
} bind def
/Mlp1 {
5 index
3 index	sub
5 index
2 index mul
1 index
le
1 index
0 le
or
dup
not
{
1 index
3 index	div
.99999 mul
8 -1 roll
pop
7 1 roll
}
if
8 -1 roll
2 div
7 -2 roll
pop sub
5 index
6 -3 roll
pop pop
mul sub
exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
outflag
1
eq
{
/outflag 0 def
/intop 0 def
/inrht 0 def
} if		
5 index
gsave
Mtmatrix setmatrix
Mvboxa pop
grestore
3 -1 roll
pop
dup
intop
gt
{
/intop
exch def
}
{ pop }
ifelse
dup
inrht
gt
{
/inrht
exch def
}
{ pop }
ifelse
pop
/inflag
1 def
} bind def
/Mouter {
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
inflag
1 eq
{
dup
0 lt
{
dup
intop
mul
neg
/yadtop
exch def
} if
dup
0 gt
{
dup
intop
mul
/yadbot
exch def
}
if
pop
dup
0 lt
{
dup
inrht
mul
neg
/xadrht
exch def
} if
dup
0 gt
{
dup
inrht
mul
/xadlft
exch def
} if
pop
/outflag 1 def
}
{ pop pop}
ifelse
/inflag 0 def
/inrht 0 def
/intop 0 def
} bind def	
/Mboxout {
outflag
1
eq
{
4 -1
roll
xadlft
leadjust
add
sub
4 1 roll
3 -1
roll
yadbot
leadjust
add
sub
3 1
roll
exch
xadrht
leadjust
add
add
exch
yadtop
leadjust
add
add
/outflag 0 def
/xadlft 0 def
/yadbot 0 def
/xadrht 0 def
/yadtop 0 def
} if
} bind def
/leadjust {
(m) stringwidth pop
.5 mul
} bind def
/Mrotcheck {
dup
90
eq
{
yadbot
/yadbot
xadrht
def	
/xadrht
yadtop
def
/yadtop
xadlft
def
/xadlft
exch
def
}
if
dup
cos
1 index
sin
Checkaux
dup
cos
1 index
sin neg
exch
Checkaux
3 1 roll
pop pop
} bind def
/Checkaux {
4 index
exch
4 index
mul
3 1 roll
mul add
4 1 roll
} bind def
/Mboxrot {
Mrot
90 eq
{
brotaux
4 2
roll
}
if
Mrot
180 eq
{
4 2
roll
brotaux
4 2
roll
brotaux
}	
if
Mrot
270 eq
{
4 2
roll
brotaux
}
if
} bind def
/brotaux {
neg
exch
neg
} bind def
/Mabsproc {
0
matrix defaultmatrix
dtransform idtransform
dup mul exch
dup mul
add sqrt
} bind def
/Mabswid {
Mabsproc
setlinewidth	
} bind def
/Mabsdash {
exch
[
exch
{
Mabsproc
}
forall
]
exch
setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop}
repeat
} bind def
} ifelse
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/setcmykcolor where
{ pop}
{ /setcmykcolor {
4 1
roll
[
4 1 
roll
]
{
1 index
sub
1
sub neg
dup
0
lt
{
pop
0
}
if
dup
1
gt
{
pop
1
}
if
exch
} forall
pop
setrgbcolor
} bind def
} ifelse
/Mcharproc
{
currentfile
(x)
readhexstring
pop
0 get
exch
div
} bind def
/Mshadeproc
{
dup
3 1
roll
{
dup
Mcharproc
3 1
roll
} repeat
1 eq
{
setgray
}
{
3 eq
{
setrgbcolor
}
{
setcmykcolor
} ifelse
} ifelse
} bind def
/Mrectproc
{
3 index
2 index
moveto
2 index
3 -1
roll
lineto
dup
3 1
roll
lineto
lineto
fill
} bind def
/Mcolorimage
{
7 1
roll
pop
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
9 index
Mshadeproc
Mrectproc
} for
pop
} for
pop pop pop pop
} bind def
/Mimage
{
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
Mcharproc
setgray
Mrectproc
} for
pop
} for
pop pop pop
} bind def

MathPictureStart
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0454545 0.909091 0.309017 0.772542 [
[(0)] .04545 0 0 2 0 Minner Mrotsboxa
[(0.2)] .22727 0 0 2 0 Minner Mrotsboxa
[(0.4)] .40909 0 0 2 0 Minner Mrotsboxa
[(0.6)] .59091 0 0 2 0 Minner Mrotsboxa
[(0.8)] .77273 0 0 2 0 Minner Mrotsboxa
[(1)] .95455 0 0 2 0 Minner Mrotsboxa
[()] .5 0 0 2 0 0 -1 Mouter Mrotsboxa
[(-0.4)] -0.0125 0 1 0 0 Minner Mrotsboxa
[(-0.3)] -0.0125 .07725 1 0 0 Minner Mrotsboxa
[(-0.2)] -0.0125 .15451 1 0 0 Minner Mrotsboxa
[(-0.1)] -0.0125 .23176 1 0 0 Minner Mrotsboxa
[(0)] -0.0125 .30902 1 0 0 Minner Mrotsboxa
[(0.1)] -0.0125 .38627 1 0 0 Minner Mrotsboxa
[(0.2)] -0.0125 .46353 1 0 0 Minner Mrotsboxa
[(0.3)] -0.0125 .54078 1 0 0 Minner Mrotsboxa
[(0.4)] -0.0125 .61803 1 0 0 Minner Mrotsboxa
[(Epsilon = 0.1, 0.01, 0.001)] .5 .61803 0 -4 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 .61903 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 g
p
p
.002 w
.04545 0 m
.04545 .00625 L
s
P
[(0)] .04545 0 0 2 0 Minner Mrotshowa
p
.002 w
.22727 0 m
.22727 .00625 L
s
P
[(0.2)] .22727 0 0 2 0 Minner Mrotshowa
p
.002 w
.40909 0 m
.40909 .00625 L
s
P
[(0.4)] .40909 0 0 2 0 Minner Mrotshowa
p
.002 w
.59091 0 m
.59091 .00625 L
s
P
[(0.6)] .59091 0 0 2 0 Minner Mrotshowa
p
.002 w
.77273 0 m
.77273 .00625 L
s
P
[(0.8)] .77273 0 0 2 0 Minner Mrotshowa
p
.002 w
.95455 0 m
.95455 .00625 L
s
P
[(1)] .95455 0 0 2 0 Minner Mrotshowa
p
.001 w
.08182 0 m
.08182 .00375 L
s
P
p
.001 w
.11818 0 m
.11818 .00375 L
s
P
p
.001 w
.15455 0 m
.15455 .00375 L
s
P
p
.001 w
.19091 0 m
.19091 .00375 L
s
P
p
.001 w
.26364 0 m
.26364 .00375 L
s
P
p
.001 w
.3 0 m
.3 .00375 L
s
P
p
.001 w
.33636 0 m
.33636 .00375 L
s
P
p
.001 w
.37273 0 m
.37273 .00375 L
s
P
p
.001 w
.44545 0 m
.44545 .00375 L
s
P
p
.001 w
.48182 0 m
.48182 .00375 L
s
P
p
.001 w
.51818 0 m
.51818 .00375 L
s
P
p
.001 w
.55455 0 m
.55455 .00375 L
s
P
p
.001 w
.62727 0 m
.62727 .00375 L
s
P
p
.001 w
.66364 0 m
.66364 .00375 L
s
P
p
.001 w
.7 0 m
.7 .00375 L
s
P
p
.001 w
.73636 0 m
.73636 .00375 L
s
P
p
.001 w
.80909 0 m
.80909 .00375 L
s
P
p
.001 w
.84545 0 m
.84545 .00375 L
s
P
p
.001 w
.88182 0 m
.88182 .00375 L
s
P
p
.001 w
.91818 0 m
.91818 .00375 L
s
P
p
.001 w
.00909 0 m
.00909 .00375 L
s
P
p
.001 w
.99091 0 m
.99091 .00375 L
s
P
[()] .5 0 0 2 0 0 -1 Mouter Mrotshowa
p
.002 w
0 0 m
1 0 L
s
P
p
.002 w
0 0 m
.00625 0 L
s
P
[(-0.4)] -0.0125 0 1 0 0 Minner Mrotshowa
p
.002 w
0 .07725 m
.00625 .07725 L
s
P
[(-0.3)] -0.0125 .07725 1 0 0 Minner Mrotshowa
p
.002 w
0 .15451 m
.00625 .15451 L
s
P
[(-0.2)] -0.0125 .15451 1 0 0 Minner Mrotshowa
p
.002 w
0 .23176 m
.00625 .23176 L
s
P
[(-0.1)] -0.0125 .23176 1 0 0 Minner Mrotshowa
p
.002 w
0 .30902 m
.00625 .30902 L
s
P
[(0)] -0.0125 .30902 1 0 0 Minner Mrotshowa
p
.002 w
0 .38627 m
.00625 .38627 L
s
P
[(0.1)] -0.0125 .38627 1 0 0 Minner Mrotshowa
p
.002 w
0 .46353 m
.00625 .46353 L
s
P
[(0.2)] -0.0125 .46353 1 0 0 Minner Mrotshowa
p
.002 w
0 .54078 m
.00625 .54078 L
s
P
[(0.3)] -0.0125 .54078 1 0 0 Minner Mrotshowa
p
.002 w
0 .61803 m
.00625 .61803 L
s
P
[(0.4)] -0.0125 .61803 1 0 0 Minner Mrotshowa
p
.001 w
0 .01545 m
.00375 .01545 L
s
P
p
.001 w
0 .0309 m
.00375 .0309 L
s
P
p
.001 w
0 .04635 m
.00375 .04635 L
s
P
p
.001 w
0 .0618 m
.00375 .0618 L
s
P
p
.001 w
0 .09271 m
.00375 .09271 L
s
P
p
.001 w
0 .10816 m
.00375 .10816 L
s
P
p
.001 w
0 .12361 m
.00375 .12361 L
s
P
p
.001 w
0 .13906 m
.00375 .13906 L
s
P
p
.001 w
0 .16996 m
.00375 .16996 L
s
P
p
.001 w
0 .18541 m
.00375 .18541 L
s
P
p
.001 w
0 .20086 m
.00375 .20086 L
s
P
p
.001 w
0 .21631 m
.00375 .21631 L
s
P
p
.001 w
0 .24721 m
.00375 .24721 L
s
P
p
.001 w
0 .26266 m
.00375 .26266 L
s
P
p
.001 w
0 .27812 m
.00375 .27812 L
s
P
p
.001 w
0 .29357 m
.00375 .29357 L
s
P
p
.001 w
0 .32447 m
.00375 .32447 L
s
P
p
.001 w
0 .33992 m
.00375 .33992 L
s
P
p
.001 w
0 .35537 m
.00375 .35537 L
s
P
p
.001 w
0 .37082 m
.00375 .37082 L
s
P
p
.001 w
0 .40172 m
.00375 .40172 L
s
P
p
.001 w
0 .41717 m
.00375 .41717 L
s
P
p
.001 w
0 .43262 m
.00375 .43262 L
s
P
p
.001 w
0 .44807 m
.00375 .44807 L
s
P
p
.001 w
0 .47898 m
.00375 .47898 L
s
P
p
.001 w
0 .49443 m
.00375 .49443 L
s
P
p
.001 w
0 .50988 m
.00375 .50988 L
s
P
p
.001 w
0 .52533 m
.00375 .52533 L
s
P
p
.001 w
0 .55623 m
.00375 .55623 L
s
P
p
.001 w
0 .57168 m
.00375 .57168 L
s
P
p
.001 w
0 .58713 m
.00375 .58713 L
s
P
p
.001 w
0 .60258 m
.00375 .60258 L
s
P
p
.002 w
0 0 m
0 .61803 L
s
P
P
p
p
.002 w
.04545 .61178 m
.04545 .61803 L
s
P
p
.002 w
.22727 .61178 m
.22727 .61803 L
s
P
p
.002 w
.40909 .61178 m
.40909 .61803 L
s
P
p
.002 w
.59091 .61178 m
.59091 .61803 L
s
P
p
.002 w
.77273 .61178 m
.77273 .61803 L
s
P
p
.002 w
.95455 .61178 m
.95455 .61803 L
s
P
p
.001 w
.08182 .61428 m
.08182 .61803 L
s
P
p
.001 w
.11818 .61428 m
.11818 .61803 L
s
P
p
.001 w
.15455 .61428 m
.15455 .61803 L
s
P
p
.001 w
.19091 .61428 m
.19091 .61803 L
s
P
p
.001 w
.26364 .61428 m
.26364 .61803 L
s
P
p
.001 w
.3 .61428 m
.3 .61803 L
s
P
p
.001 w
.33636 .61428 m
.33636 .61803 L
s
P
p
.001 w
.37273 .61428 m
.37273 .61803 L
s
P
p
.001 w
.44545 .61428 m
.44545 .61803 L
s
P
p
.001 w
.48182 .61428 m
.48182 .61803 L
s
P
p
.001 w
.51818 .61428 m
.51818 .61803 L
s
P
p
.001 w
.55455 .61428 m
.55455 .61803 L
s
P
p
.001 w
.62727 .61428 m
.62727 .61803 L
s
P
p
.001 w
.66364 .61428 m
.66364 .61803 L
s
P
p
.001 w
.7 .61428 m
.7 .61803 L
s
P
p
.001 w
.73636 .61428 m
.73636 .61803 L
s
P
p
.001 w
.80909 .61428 m
.80909 .61803 L
s
P
p
.001 w
.84545 .61428 m
.84545 .61803 L
s
P
p
.001 w
.88182 .61428 m
.88182 .61803 L
s
P
p
.001 w
.91818 .61428 m
.91818 .61803 L
s
P
p
.001 w
.00909 .61428 m
.00909 .61803 L
s
P
p
.001 w
.99091 .61428 m
.99091 .61803 L
s
P
[(Epsilon = 0.1, 0.01, 0.001)] .5 .61803 0 -4 Mshowa
p
.002 w
0 .61803 m
1 .61803 L
s
P
p
.002 w
.99375 0 m
1 0 L
s
P
p
.002 w
.99375 .07725 m
1 .07725 L
s
P
p
.002 w
.99375 .15451 m
1 .15451 L
s
P
p
.002 w
.99375 .23176 m
1 .23176 L
s
P
p
.002 w
.99375 .30902 m
1 .30902 L
s
P
p
.002 w
.99375 .38627 m
1 .38627 L
s
P
p
.002 w
.99375 .46353 m
1 .46353 L
s
P
p
.002 w
.99375 .54078 m
1 .54078 L
s
P
p
.001 w
.99625 .01545 m
1 .01545 L
s
P
p
.001 w
.99625 .0309 m
1 .0309 L
s
P
p
.001 w
.99625 .04635 m
1 .04635 L
s
P
p
.001 w
.99625 .0618 m
1 .0618 L
s
P
p
.001 w
.99625 .09271 m
1 .09271 L
s
P
p
.001 w
.99625 .10816 m
1 .10816 L
s
P
p
.001 w
.99625 .12361 m
1 .12361 L
s
P
p
.001 w
.99625 .13906 m
1 .13906 L
s
P
p
.001 w
.99625 .16996 m
1 .16996 L
s
P
p
.001 w
.99625 .18541 m
1 .18541 L
s
P
p
.001 w
.99625 .20086 m
1 .20086 L
s
P
p
.001 w
.99625 .21631 m
1 .21631 L
s
P
p
.001 w
.99625 .24721 m
1 .24721 L
s
P
p
.001 w
.99625 .26266 m
1 .26266 L
s
P
p
.001 w
.99625 .27812 m
1 .27812 L
s
P
p
.001 w
.99625 .29357 m
1 .29357 L
s
P
p
.001 w
.99625 .32447 m
1 .32447 L
s
P
p
.001 w
.99625 .33992 m
1 .33992 L
s
P
p
.001 w
.99625 .35537 m
1 .35537 L
s
P
p
.001 w
.99625 .37082 m
1 .37082 L
s
P
p
.001 w
.99625 .40172 m
1 .40172 L
s
P
p
.001 w
.99625 .41717 m
1 .41717 L
s
P
p
.001 w
.99625 .43262 m
1 .43262 L
s
P
p
.001 w
.99625 .44807 m
1 .44807 L
s
P
p
.001 w
.99625 .47898 m
1 .47898 L
s
P
p
.001 w
.99625 .49443 m
1 .49443 L
s
P
p
.001 w
.99625 .50988 m
1 .50988 L
s
P
p
.001 w
.99625 .52533 m
1 .52533 L
s
P
p
.001 w
.99625 .55623 m
1 .55623 L
s
P
p
.001 w
.99625 .57168 m
1 .57168 L
s
P
p
.001 w
.99625 .58713 m
1 .58713 L
s
P
p
.001 w
.99625 .60258 m
1 .60258 L
s
P
p
.002 w
1 0 m
1 .61803 L
s
P
P
p
P
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
p
p
p
.001 w
.04545 .05153 m
.08333 .07714 L
.12121 .10184 L
.15909 .12565 L
.19697 .14862 L
.23485 .17076 L
.27273 .19213 L
.31061 .21276 L
.34848 .23278 L
.38636 .25227 L
.42424 .27138 L
.46212 .29026 L
.5 .30902 L
.53788 .32778 L
.57576 .34665 L
.61364 .36576 L
.65152 .38525 L
.68939 .40527 L
.72727 .4259 L
.76515 .44728 L
.80303 .46941 L
.84091 .49238 L
.87879 .51619 L
.91667 .54089 L
.95455 .56651 L
s
P
P
p
p
.001 w
.04545 .05153 m
.08333 .08356 L
.12121 .11552 L
.15909 .1468 L
.19697 .17697 L
.23485 .20505 L
.27273 .23006 L
.31061 .25124 L
.34848 .26847 L
.38636 .28206 L
.42424 .29271 L
.46212 .30138 L
.5 .30902 L
.53788 .31666 L
.57576 .32533 L
.61364 .33598 L
.65152 .34956 L
.68939 .36679 L
.72727 .38797 L
.76515 .41298 L
.80303 .44107 L
.84091 .47123 L
.87879 .50251 L
.91667 .53447 L
.95455 .56651 L
s
P
P
p
p
.001 w
.04545 .05153 m
.08333 .08372 L
.12121 .11591 L
.15909 .1481 L
.19697 .18021 L
.23485 .21247 L
.27273 .24451 L
.31061 .27462 L
.32955 .28677 L
.33902 .29169 L
.34848 .29574 L
.35795 .29893 L
.36742 .3015 L
.37689 .30344 L
.38636 .30492 L
.39583 .30601 L
.4053 .30686 L
.41004 .30719 L
.41477 .30747 L
.41951 .30768 L
.42424 .30786 L
.42898 .30805 L
.43371 .30822 L
.43608 .3083 L
.43845 .30836 L
.44318 .30846 L
.45265 .3086 L
.46212 .30871 L
.47159 .30883 L
.47396 .30885 L
.47633 .30887 L
.48106 .30891 L
.5 .30902 L
.51894 .30913 L
.52131 .30914 L
.52367 .30916 L
.52841 .30921 L
.53788 .30933 L
.54735 .30944 L
.55208 .3095 L
.55682 .30958 L
.56155 .30967 L
.56392 .30974 L
.56629 .30982 L
.57576 .31018 L
.58049 .31035 L
.58523 .31056 L
.58996 .31084 L
.5947 .31118 L
.60417 .31203 L
Mistroke
.61364 .31311 L
.62311 .31459 L
.63258 .31654 L
.64205 .31911 L
.65152 .32229 L
.67045 .33127 L
.68939 .34342 L
.72727 .37352 L
.76515 .40556 L
.80303 .43783 L
.84091 .46994 L
.87879 .50215 L
.91667 .53441 L
.95455 .56651 L
Mfstroke
P
P
P
% End of Graphics
MathPictureEnd
end
showpage
%%EndDocument
 @endspecial 587 1335 a(Figure)j(25:)j(T)m(est)d(Problem)f(25,)g
Fl(y)q Fm(\()p Fl(x)p Fm(\))i(v)o(ersus)g Fl(x)p eop
%%Page: 26 26
26 25 bop 262 307 a Fn(T)l(est)15 b(Problem)e(26)h Fm(\(Nonlinear\))g
(\(see)h(e.g.)j([4)o(,)13 b(pp.29-38])f(and)i([6)o(,)g(p.159]\))262
357 y Fl(\017y)300 342 y Fk(00)331 357 y Fm(+)9 b Fl(y)q(y)414
342 y Fk(0)437 357 y Fj(\000)g Fl(y)14 b Fm(=)d(0,)60
b Fl(y)q Fm(\(0\))12 b(=)g(1)p Fl(;)18 b(y)q Fm(\(1\))12
b(=)g Fj(\000)996 341 y Fi(1)p 996 348 17 2 v 996 371
a(3)1018 357 y Fm(.)262 407 y(The)i(solution)f(has)h(b)q(oundary)g(la)o
(y)o(ers)g(at)f Fl(x)f Fm(=)f(0)j(and)g Fl(x)d Fm(=)h(1.)439
1710 y @beginspecial 72 @llx 72 @lly 540 @urx 720 @ury
2834 @rwi @setspecial
%%BeginDocument: ../PLOTS/pr26.ps

/Mathdict 150 dict def
Mathdict begin
/Mlmarg		1.0 72 mul def
/Mrmarg		1.0 72 mul def
/Mbmarg		1.0 72 mul def
/Mtmarg		1.0 72 mul def
/Mwidth		8.5 72 mul def
/Mheight	11 72 mul def
/Mtransform	{  } bind def
/Mnodistort	true def
/Mfixwid	true	def
/Mfixdash	false def
/Mrot		0	def
/Mpstart {
MathPictureStart
} bind def
/Mpend {
MathPictureEnd
} bind def
/Mscale {
0 1 0 1
5 -1 roll
MathScale
} bind def
/ISOLatin1Encoding dup where
{ pop pop }
{
[
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft
/logicalnot /hyphen /registered /macron
/degree /plusminus /twosuperior /threesuperior
/acute /mu /paragraph /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright
/onequarter /onehalf /threequarters /questiondown
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis
] def
} ifelse
/MFontDict 50 dict def
/MStrCat
{
exch
dup length
2 index length add
string
dup 3 1 roll
copy
length
exch dup
4 2 roll exch
putinterval
} def
/MCreateEncoding
{
1 index
255 string cvs
(-) MStrCat
1 index MStrCat
cvn exch
(Encoding) MStrCat
cvn dup where
{
exch get
}
{
pop
StandardEncoding
} ifelse
3 1 roll
dup MFontDict exch known not
{
1 index findfont
dup length dict
begin
{1 index /FID ne
{def}
{pop pop}
ifelse} forall
/Encoding 3 index
def
currentdict
end
1 index exch definefont pop
MFontDict 1 index
null put
}
if
exch pop
exch pop
} def
/ISOLatin1 { (ISOLatin1) MCreateEncoding } def
/ISO8859 { (ISOLatin1) MCreateEncoding } def
/Mcopyfont {
dup
maxlength
dict
exch
{
1 index
/FID
eq
{
pop pop
}
{
2 index
3 1 roll
put
}
ifelse
}
forall
} def
/Plain	/Courier findfont Mcopyfont definefont pop
/Bold	/Courier-Bold findfont Mcopyfont definefont pop
/Italic /Courier-Oblique findfont Mcopyfont definefont pop
/MathPictureStart {
gsave
Mtransform
Mlmarg
Mbmarg
translate
Mwidth
Mlmarg Mrmarg add
sub
/Mwidth exch def
Mheight
Mbmarg Mtmarg add
sub
/Mheight exch def
/Mtmatrix
matrix currentmatrix
def
/Mgmatrix
matrix currentmatrix
def
} bind def
/MathPictureEnd {
grestore
} bind def
/MFill {
0 0 		moveto
Mwidth 0 	lineto
Mwidth Mheight 	lineto
0 Mheight 	lineto
fill
} bind def
/MPlotRegion {
3 index
Mwidth mul
2 index
Mheight mul
translate
exch sub
Mheight mul
/Mheight
exch def
exch sub
Mwidth mul
/Mwidth
exch def
} bind def
/MathSubStart {
Momatrix
Mgmatrix Mtmatrix
Mwidth Mheight
7 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
Mgmatrix setmatrix
9 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
2 copy translate
/Mtmatrix matrix currentmatrix def
3 -1 roll
exch sub
/Mheight exch def
sub
/Mwidth exch def
} bind def
/MathSubEnd {
/Mheight exch def
/Mwidth exch def
/Mtmatrix exch def
dup setmatrix
/Mgmatrix exch def
/Momatrix exch def
} bind def
/Mdot {
moveto
0 0 rlineto
stroke
} bind def
/Mtetra {
moveto
lineto
lineto
lineto
fill
} bind def
/Metetra {
moveto
lineto
lineto
lineto
closepath
gsave
fill
grestore
0 setgray
stroke
} bind def
/Mistroke {
flattenpath
0 0 0
{
4 2 roll
pop pop
}
{
4 -1 roll
2 index
sub dup mul
4 -1 roll
2 index
sub dup mul
add sqrt
4 -1 roll
add
3 1 roll
}
{
stop
}
{
stop
}
pathforall
pop pop
currentpoint
stroke
moveto
currentdash
3 -1 roll
add
setdash
} bind def
/Mfstroke {
stroke
currentdash
pop 0
setdash
} bind def
/Mrotsboxa {
gsave
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
grestore
Msboxa
3  -1 roll
/Mtmatrix
exch def
/Mrot
0 def
} bind def
/Msboxa {
newpath
5 -1 roll
Mvboxa
pop
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Msboxa1
5 -3 roll
Msboxa1
Mboxrot
[
7 -2 roll
2 copy
[
3 1 roll
10 -1 roll
9 -1 roll
]
6 1 roll
5 -2 roll
]
} bind def
/Msboxa1 {
sub
2 div
dup
2 index
1 add
mul
3 -1 roll
-1 add
3 -1 roll
mul
} bind def
/Mvboxa	{
Mfixwid
{
Mvboxa1
}
{
dup
Mwidthcal
0 exch
{
add
}
forall
exch
Mvboxa1
4 index
7 -1 roll
add
4 -1 roll
pop
3 1 roll
}
ifelse
} bind def
/Mvboxa1 {
gsave
newpath
[ true
3 -1 roll
{
Mbbox
5 -1 roll
{
0
5 1 roll
}
{
7 -1 roll
exch sub
(m) stringwidth pop
.3 mul
sub
7 1 roll
6 -1 roll
4 -1 roll
Mmin
3 -1 roll
5 index
add
5 -1 roll
4 -1 roll
Mmax
4 -1 roll
}
ifelse
false
}
forall
{ stop } if
counttomark
1 add
4 roll
]
grestore
} bind def
/Mbbox {
1 dict begin
0 0 moveto
/temp (T) def
{	gsave
currentpoint newpath moveto
temp 0 3 -1 roll put temp
false charpath flattenpath currentpoint
pathbbox
grestore moveto lineto moveto} forall
pathbbox
newpath
end
} bind def
/Mmin {
2 copy
gt
{ exch } if
pop
} bind def
/Mmax {
2 copy
lt
{ exch } if
pop
} bind def
/Mrotshowa {
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
Mgmatrix setmatrix
Mshowa
/Mtmatrix
exch def
/Mrot 0 def
} bind def
/Mshowa {
4 -2 roll
moveto
2 index
Mtmatrix setmatrix
Mvboxa
7 1 roll
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Mshowa1
4 1 roll
Mshowa1
rmoveto
currentpoint
Mfixwid
{
Mshowax
}
{
Mshoway
}
ifelse
pop pop pop pop
Mgmatrix setmatrix
} bind def
/Mshowax {	
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
Mfixdash
{
Mfixdashp		
}
if
show
} for
} bind def
/Mfixdashp {
dup
length
1
gt
1 index
true exch
{
45
eq
and
} forall
and
{
gsave
(--)		
stringwidth pop
(-)
stringwidth pop
sub
2 div
0 rmoveto
dup
length
1 sub
{
(-)
show
}
repeat
grestore
}
if
} bind def	
/Mshoway {
3 index
Mwidthcal
5 1 roll
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
[
6 index
aload
length
2 add
-1 roll
{
pop
Strform
stringwidth
pop
neg 
exch
add
0 rmoveto
}
exch
kshow
cleartomark
} for
pop	
} bind def
/Mwidthcal {
[
exch
{
Mwidthcal1
}
forall
]
[
exch
dup
Maxlen
-1 add
0 1
3 -1 roll
{
[
exch
2 index
{		 
1 index	
Mget
exch
}
forall		
pop
Maxget
exch
}
for
pop
]
Mreva
} bind def
/Mreva	{
[
exch
aload
length
-1 1
{1 roll}
for
]
} bind def
/Mget	{
1 index
length
-1 add
1 index
ge
{
get
}
{
pop pop
0
}
ifelse
} bind def
/Maxlen	{
[
exch
{
length
}
forall
Maxget
} bind def
/Maxget	{
counttomark
-1 add
1 1
3 -1 roll
{
pop
Mmax
}
for
exch
pop
} bind def
/Mwidthcal1 {
[
exch
{
Strform
stringwidth
pop
}
forall
]
} bind def
/Strform {
/tem (x) def
tem 0
3 -1 roll
put
tem
} bind def
/Mshowa1 {
2 copy
add
4 1 roll
sub
mul
sub
-2 div
} bind def
/MathScale {
Mwidth
Mheight
Mlp
translate
scale
/yscale exch def
/ybias exch def
/xscale exch def
/xbias exch def
/Momatrix
xscale yscale matrix scale
xbias ybias matrix translate
matrix concatmatrix def
/Mgmatrix
matrix currentmatrix
def
} bind def
/Mlp {
3 copy
Mlpfirst
{
Mnodistort
{
Mmin
dup
} if
4 index
2 index
2 index
Mlprun
11 index
11 -1 roll
10 -4 roll
Mlp1
8 index
9 -5 roll
Mlp1
4 -1 roll
and
{ exit } if
3 -1 roll
pop pop
} loop
exch
3 1 roll
7 -3 roll
pop pop pop
} bind def
/Mlpfirst {
3 -1 roll
dup length
2 copy
-2 add
get
aload
pop pop pop
4 -2 roll
-1 add
get
aload
pop pop pop
6 -1 roll
3 -1 roll
5 -1 roll
sub
div
4 1 roll
exch sub
div
} bind def
/Mlprun {
2 copy
4 index
0 get
dup
4 1 roll
Mlprun1
3 copy
8 -2 roll
9 -1 roll
{
3 copy
Mlprun1
3 copy
11 -3 roll
/gt Mlpminmax
8 3 roll
11 -3 roll
/lt Mlpminmax
8 3 roll
} forall
pop pop pop pop
3 1 roll
pop pop
aload pop
5 -1 roll
aload pop
exch
6 -1 roll
Mlprun2
8 2 roll
4 -1 roll
Mlprun2
6 2 roll
3 -1 roll
Mlprun2
4 2 roll
exch
Mlprun2
6 2 roll
} bind def
/Mlprun1 {
aload pop
exch
6 -1 roll
5 -1 roll
mul add
4 -2 roll
mul
3 -1 roll
add
} bind def
/Mlprun2 {
2 copy
add 2 div
3 1 roll
exch sub
} bind def
/Mlpminmax {
cvx
2 index
6 index
2 index
exec
{
7 -3 roll
4 -1 roll
} if
1 index
5 index
3 -1 roll
exec
{
4 1 roll
pop
5 -1 roll
aload
pop pop
4 -1 roll
aload pop
[
8 -2 roll
pop
5 -2 roll
pop
6 -2 roll
pop
5 -1 roll
]
4 1 roll
pop
}
{
pop pop pop
} ifelse
} bind def
/Mlp1 {
5 index
3 index	sub
5 index
2 index mul
1 index
le
1 index
0 le
or
dup
not
{
1 index
3 index	div
.99999 mul
8 -1 roll
pop
7 1 roll
}
if
8 -1 roll
2 div
7 -2 roll
pop sub
5 index
6 -3 roll
pop pop
mul sub
exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
outflag
1
eq
{
/outflag 0 def
/intop 0 def
/inrht 0 def
} if		
5 index
gsave
Mtmatrix setmatrix
Mvboxa pop
grestore
3 -1 roll
pop
dup
intop
gt
{
/intop
exch def
}
{ pop }
ifelse
dup
inrht
gt
{
/inrht
exch def
}
{ pop }
ifelse
pop
/inflag
1 def
} bind def
/Mouter {
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
inflag
1 eq
{
dup
0 lt
{
dup
intop
mul
neg
/yadtop
exch def
} if
dup
0 gt
{
dup
intop
mul
/yadbot
exch def
}
if
pop
dup
0 lt
{
dup
inrht
mul
neg
/xadrht
exch def
} if
dup
0 gt
{
dup
inrht
mul
/xadlft
exch def
} if
pop
/outflag 1 def
}
{ pop pop}
ifelse
/inflag 0 def
/inrht 0 def
/intop 0 def
} bind def	
/Mboxout {
outflag
1
eq
{
4 -1
roll
xadlft
leadjust
add
sub
4 1 roll
3 -1
roll
yadbot
leadjust
add
sub
3 1
roll
exch
xadrht
leadjust
add
add
exch
yadtop
leadjust
add
add
/outflag 0 def
/xadlft 0 def
/yadbot 0 def
/xadrht 0 def
/yadtop 0 def
} if
} bind def
/leadjust {
(m) stringwidth pop
.5 mul
} bind def
/Mrotcheck {
dup
90
eq
{
yadbot
/yadbot
xadrht
def	
/xadrht
yadtop
def
/yadtop
xadlft
def
/xadlft
exch
def
}
if
dup
cos
1 index
sin
Checkaux
dup
cos
1 index
sin neg
exch
Checkaux
3 1 roll
pop pop
} bind def
/Checkaux {
4 index
exch
4 index
mul
3 1 roll
mul add
4 1 roll
} bind def
/Mboxrot {
Mrot
90 eq
{
brotaux
4 2
roll
}
if
Mrot
180 eq
{
4 2
roll
brotaux
4 2
roll
brotaux
}	
if
Mrot
270 eq
{
4 2
roll
brotaux
}
if
} bind def
/brotaux {
neg
exch
neg
} bind def
/Mabsproc {
0
matrix defaultmatrix
dtransform idtransform
dup mul exch
dup mul
add sqrt
} bind def
/Mabswid {
Mabsproc
setlinewidth	
} bind def
/Mabsdash {
exch
[
exch
{
Mabsproc
}
forall
]
exch
setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop}
repeat
} bind def
} ifelse
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/setcmykcolor where
{ pop}
{ /setcmykcolor {
4 1
roll
[
4 1 
roll
]
{
1 index
sub
1
sub neg
dup
0
lt
{
pop
0
}
if
dup
1
gt
{
pop
1
}
if
exch
} forall
pop
setrgbcolor
} bind def
} ifelse
/Mcharproc
{
currentfile
(x)
readhexstring
pop
0 get
exch
div
} bind def
/Mshadeproc
{
dup
3 1
roll
{
dup
Mcharproc
3 1
roll
} repeat
1 eq
{
setgray
}
{
3 eq
{
setrgbcolor
}
{
setcmykcolor
} ifelse
} ifelse
} bind def
/Mrectproc
{
3 index
2 index
moveto
2 index
3 -1
roll
lineto
dup
3 1
roll
lineto
lineto
fill
} bind def
/Mcolorimage
{
7 1
roll
pop
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
9 index
Mshadeproc
Mrectproc
} for
pop
} for
pop pop pop pop
} bind def
/Mimage
{
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
Mcharproc
setgray
Mrectproc
} for
pop
} for
pop pop pop
} bind def

MathPictureStart
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0454545 0.909091 0.170492 0.42623 [
[(0)] .04545 0 0 2 0 Minner Mrotsboxa
[(0.2)] .22727 0 0 2 0 Minner Mrotsboxa
[(0.4)] .40909 0 0 2 0 Minner Mrotsboxa
[(0.6)] .59091 0 0 2 0 Minner Mrotsboxa
[(0.8)] .77273 0 0 2 0 Minner Mrotsboxa
[(1)] .95455 0 0 2 0 Minner Mrotsboxa
[()] .5 0 0 2 0 0 -1 Mouter Mrotsboxa
[(-0.4)] -0.0125 0 1 0 0 Minner Mrotsboxa
[(-0.2)] -0.0125 .08525 1 0 0 Minner Mrotsboxa
[(0)] -0.0125 .17049 1 0 0 Minner Mrotsboxa
[(0.2)] -0.0125 .25574 1 0 0 Minner Mrotsboxa
[(0.4)] -0.0125 .34098 1 0 0 Minner Mrotsboxa
[(0.6)] -0.0125 .42623 1 0 0 Minner Mrotsboxa
[(0.8)] -0.0125 .51148 1 0 0 Minner Mrotsboxa
[(1)] -0.0125 .59672 1 0 0 Minner Mrotsboxa
[(Epsilon = 0.1, 0.02, 0.005)] .5 .61803 0 -4 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 .61903 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 g
p
p
.002 w
.04545 0 m
.04545 .00625 L
s
P
[(0)] .04545 0 0 2 0 Minner Mrotshowa
p
.002 w
.22727 0 m
.22727 .00625 L
s
P
[(0.2)] .22727 0 0 2 0 Minner Mrotshowa
p
.002 w
.40909 0 m
.40909 .00625 L
s
P
[(0.4)] .40909 0 0 2 0 Minner Mrotshowa
p
.002 w
.59091 0 m
.59091 .00625 L
s
P
[(0.6)] .59091 0 0 2 0 Minner Mrotshowa
p
.002 w
.77273 0 m
.77273 .00625 L
s
P
[(0.8)] .77273 0 0 2 0 Minner Mrotshowa
p
.002 w
.95455 0 m
.95455 .00625 L
s
P
[(1)] .95455 0 0 2 0 Minner Mrotshowa
p
.001 w
.08182 0 m
.08182 .00375 L
s
P
p
.001 w
.11818 0 m
.11818 .00375 L
s
P
p
.001 w
.15455 0 m
.15455 .00375 L
s
P
p
.001 w
.19091 0 m
.19091 .00375 L
s
P
p
.001 w
.26364 0 m
.26364 .00375 L
s
P
p
.001 w
.3 0 m
.3 .00375 L
s
P
p
.001 w
.33636 0 m
.33636 .00375 L
s
P
p
.001 w
.37273 0 m
.37273 .00375 L
s
P
p
.001 w
.44545 0 m
.44545 .00375 L
s
P
p
.001 w
.48182 0 m
.48182 .00375 L
s
P
p
.001 w
.51818 0 m
.51818 .00375 L
s
P
p
.001 w
.55455 0 m
.55455 .00375 L
s
P
p
.001 w
.62727 0 m
.62727 .00375 L
s
P
p
.001 w
.66364 0 m
.66364 .00375 L
s
P
p
.001 w
.7 0 m
.7 .00375 L
s
P
p
.001 w
.73636 0 m
.73636 .00375 L
s
P
p
.001 w
.80909 0 m
.80909 .00375 L
s
P
p
.001 w
.84545 0 m
.84545 .00375 L
s
P
p
.001 w
.88182 0 m
.88182 .00375 L
s
P
p
.001 w
.91818 0 m
.91818 .00375 L
s
P
p
.001 w
.00909 0 m
.00909 .00375 L
s
P
p
.001 w
.99091 0 m
.99091 .00375 L
s
P
[()] .5 0 0 2 0 0 -1 Mouter Mrotshowa
p
.002 w
0 0 m
1 0 L
s
P
p
.002 w
0 0 m
.00625 0 L
s
P
[(-0.4)] -0.0125 0 1 0 0 Minner Mrotshowa
p
.002 w
0 .08525 m
.00625 .08525 L
s
P
[(-0.2)] -0.0125 .08525 1 0 0 Minner Mrotshowa
p
.002 w
0 .17049 m
.00625 .17049 L
s
P
[(0)] -0.0125 .17049 1 0 0 Minner Mrotshowa
p
.002 w
0 .25574 m
.00625 .25574 L
s
P
[(0.2)] -0.0125 .25574 1 0 0 Minner Mrotshowa
p
.002 w
0 .34098 m
.00625 .34098 L
s
P
[(0.4)] -0.0125 .34098 1 0 0 Minner Mrotshowa
p
.002 w
0 .42623 m
.00625 .42623 L
s
P
[(0.6)] -0.0125 .42623 1 0 0 Minner Mrotshowa
p
.002 w
0 .51148 m
.00625 .51148 L
s
P
[(0.8)] -0.0125 .51148 1 0 0 Minner Mrotshowa
p
.002 w
0 .59672 m
.00625 .59672 L
s
P
[(1)] -0.0125 .59672 1 0 0 Minner Mrotshowa
p
.001 w
0 .01705 m
.00375 .01705 L
s
P
p
.001 w
0 .0341 m
.00375 .0341 L
s
P
p
.001 w
0 .05115 m
.00375 .05115 L
s
P
p
.001 w
0 .0682 m
.00375 .0682 L
s
P
p
.001 w
0 .1023 m
.00375 .1023 L
s
P
p
.001 w
0 .11934 m
.00375 .11934 L
s
P
p
.001 w
0 .13639 m
.00375 .13639 L
s
P
p
.001 w
0 .15344 m
.00375 .15344 L
s
P
p
.001 w
0 .18754 m
.00375 .18754 L
s
P
p
.001 w
0 .20459 m
.00375 .20459 L
s
P
p
.001 w
0 .22164 m
.00375 .22164 L
s
P
p
.001 w
0 .23869 m
.00375 .23869 L
s
P
p
.001 w
0 .27279 m
.00375 .27279 L
s
P
p
.001 w
0 .28984 m
.00375 .28984 L
s
P
p
.001 w
0 .30689 m
.00375 .30689 L
s
P
p
.001 w
0 .32394 m
.00375 .32394 L
s
P
p
.001 w
0 .35803 m
.00375 .35803 L
s
P
p
.001 w
0 .37508 m
.00375 .37508 L
s
P
p
.001 w
0 .39213 m
.00375 .39213 L
s
P
p
.001 w
0 .40918 m
.00375 .40918 L
s
P
p
.001 w
0 .44328 m
.00375 .44328 L
s
P
p
.001 w
0 .46033 m
.00375 .46033 L
s
P
p
.001 w
0 .47738 m
.00375 .47738 L
s
P
p
.001 w
0 .49443 m
.00375 .49443 L
s
P
p
.001 w
0 .52853 m
.00375 .52853 L
s
P
p
.001 w
0 .54557 m
.00375 .54557 L
s
P
p
.001 w
0 .56262 m
.00375 .56262 L
s
P
p
.001 w
0 .57967 m
.00375 .57967 L
s
P
p
.001 w
0 .61377 m
.00375 .61377 L
s
P
p
.002 w
0 0 m
0 .61803 L
s
P
P
p
p
.002 w
.04545 .61178 m
.04545 .61803 L
s
P
p
.002 w
.22727 .61178 m
.22727 .61803 L
s
P
p
.002 w
.40909 .61178 m
.40909 .61803 L
s
P
p
.002 w
.59091 .61178 m
.59091 .61803 L
s
P
p
.002 w
.77273 .61178 m
.77273 .61803 L
s
P
p
.002 w
.95455 .61178 m
.95455 .61803 L
s
P
p
.001 w
.08182 .61428 m
.08182 .61803 L
s
P
p
.001 w
.11818 .61428 m
.11818 .61803 L
s
P
p
.001 w
.15455 .61428 m
.15455 .61803 L
s
P
p
.001 w
.19091 .61428 m
.19091 .61803 L
s
P
p
.001 w
.26364 .61428 m
.26364 .61803 L
s
P
p
.001 w
.3 .61428 m
.3 .61803 L
s
P
p
.001 w
.33636 .61428 m
.33636 .61803 L
s
P
p
.001 w
.37273 .61428 m
.37273 .61803 L
s
P
p
.001 w
.44545 .61428 m
.44545 .61803 L
s
P
p
.001 w
.48182 .61428 m
.48182 .61803 L
s
P
p
.001 w
.51818 .61428 m
.51818 .61803 L
s
P
p
.001 w
.55455 .61428 m
.55455 .61803 L
s
P
p
.001 w
.62727 .61428 m
.62727 .61803 L
s
P
p
.001 w
.66364 .61428 m
.66364 .61803 L
s
P
p
.001 w
.7 .61428 m
.7 .61803 L
s
P
p
.001 w
.73636 .61428 m
.73636 .61803 L
s
P
p
.001 w
.80909 .61428 m
.80909 .61803 L
s
P
p
.001 w
.84545 .61428 m
.84545 .61803 L
s
P
p
.001 w
.88182 .61428 m
.88182 .61803 L
s
P
p
.001 w
.91818 .61428 m
.91818 .61803 L
s
P
p
.001 w
.00909 .61428 m
.00909 .61803 L
s
P
p
.001 w
.99091 .61428 m
.99091 .61803 L
s
P
[(Epsilon = 0.1, 0.02, 0.005)] .5 .61803 0 -4 Mshowa
p
.002 w
0 .61803 m
1 .61803 L
s
P
p
.002 w
.99375 0 m
1 0 L
s
P
p
.002 w
.99375 .08525 m
1 .08525 L
s
P
p
.002 w
.99375 .17049 m
1 .17049 L
s
P
p
.002 w
.99375 .25574 m
1 .25574 L
s
P
p
.002 w
.99375 .34098 m
1 .34098 L
s
P
p
.002 w
.99375 .42623 m
1 .42623 L
s
P
p
.002 w
.99375 .51148 m
1 .51148 L
s
P
p
.002 w
.99375 .59672 m
1 .59672 L
s
P
p
.001 w
.99625 .01705 m
1 .01705 L
s
P
p
.001 w
.99625 .0341 m
1 .0341 L
s
P
p
.001 w
.99625 .05115 m
1 .05115 L
s
P
p
.001 w
.99625 .0682 m
1 .0682 L
s
P
p
.001 w
.99625 .1023 m
1 .1023 L
s
P
p
.001 w
.99625 .11934 m
1 .11934 L
s
P
p
.001 w
.99625 .13639 m
1 .13639 L
s
P
p
.001 w
.99625 .15344 m
1 .15344 L
s
P
p
.001 w
.99625 .18754 m
1 .18754 L
s
P
p
.001 w
.99625 .20459 m
1 .20459 L
s
P
p
.001 w
.99625 .22164 m
1 .22164 L
s
P
p
.001 w
.99625 .23869 m
1 .23869 L
s
P
p
.001 w
.99625 .27279 m
1 .27279 L
s
P
p
.001 w
.99625 .28984 m
1 .28984 L
s
P
p
.001 w
.99625 .30689 m
1 .30689 L
s
P
p
.001 w
.99625 .32394 m
1 .32394 L
s
P
p
.001 w
.99625 .35803 m
1 .35803 L
s
P
p
.001 w
.99625 .37508 m
1 .37508 L
s
P
p
.001 w
.99625 .39213 m
1 .39213 L
s
P
p
.001 w
.99625 .40918 m
1 .40918 L
s
P
p
.001 w
.99625 .44328 m
1 .44328 L
s
P
p
.001 w
.99625 .46033 m
1 .46033 L
s
P
p
.001 w
.99625 .47738 m
1 .47738 L
s
P
p
.001 w
.99625 .49443 m
1 .49443 L
s
P
p
.001 w
.99625 .52853 m
1 .52853 L
s
P
p
.001 w
.99625 .54557 m
1 .54557 L
s
P
p
.001 w
.99625 .56262 m
1 .56262 L
s
P
p
.001 w
.99625 .57967 m
1 .57967 L
s
P
p
.001 w
.99625 .61377 m
1 .61377 L
s
P
p
.002 w
1 0 m
1 .61803 L
s
P
P
p
P
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
p
p
p
.001 w
.04545 .59672 m
.06439 .53945 L
.08333 .49314 L
.12121 .42286 L
.15909 .37206 L
.19697 .33359 L
.23485 .30341 L
.27273 .27918 L
.31061 .25916 L
.34848 .2423 L
.38636 .22778 L
.42424 .21504 L
.46212 .2036 L
.5 .19308 L
.53788 .1832 L
.57576 .17368 L
.61364 .16423 L
.65152 .1546 L
.68939 .14453 L
.72727 .13375 L
.76515 .12195 L
.80303 .10863 L
.84091 .09347 L
.87879 .07567 L
.91667 .05437 L
.95455 .02843 L
s
P
P
p
p
.001 w
.04545 .59672 m
.05019 .54083 L
.05492 .49772 L
.06439 .43268 L
.06913 .40819 L
.07386 .38734 L
.08333 .35344 L
.0928 .32723 L
.10227 .30646 L
.11174 .28954 L
.12121 .27556 L
.14015 .25385 L
.15909 .23771 L
.17803 .22542 L
.19697 .21586 L
.21591 .20821 L
.23485 .20198 L
.25379 .19693 L
.27273 .19274 L
.31061 .18631 L
.34848 .18166 L
.38636 .17825 L
.42424 .17565 L
.46212 .17352 L
.5 .17169 L
.53788 .16998 L
.57576 .16823 L
.61364 .16627 L
.65152 .16393 L
.68939 .16086 L
.72727 .15681 L
.74621 .15425 L
.76515 .15123 L
.78409 .14765 L
.80303 .14329 L
.82197 .13811 L
.84091 .13171 L
.85985 .12376 L
.87879 .11382 L
.89773 .10102 L
.91667 .08415 L
.92614 .07371 L
.93561 .06129 L
.95455 .02843 L
s
P
P
p
p
.001 w
.04545 .59672 m
.04664 .54534 L
.04782 .50493 L
.05019 .44423 L
.05256 .40121 L
.05492 .36973 L
.05729 .34524 L
.05966 .32491 L
.06439 .2957 L
.06913 .27433 L
.07386 .25865 L
.0786 .24619 L
.08333 .23645 L
.0928 .22157 L
.09754 .21596 L
.10227 .21115 L
.11174 .20334 L
.12121 .19741 L
.13068 .19277 L
.14015 .18909 L
.14962 .18606 L
.15909 .18362 L
.17803 .17991 L
.1875 .17849 L
.19697 .17732 L
.21591 .17548 L
.23485 .17416 L
.25379 .17318 L
.26326 .17279 L
.27273 .1725 L
.29167 .17198 L
.31061 .1716 L
.32955 .1713 L
.34848 .17109 L
.35795 .171 L
.36269 .17096 L
.36506 .17094 L
.36742 .17092 L
.36861 .17091 L
.36979 .17091 L
.37216 .17089 L
.37689 .17088 L
.38636 .17083 L
.4053 .17075 L
.41477 .1707 L
.41951 .17068 L
.42188 .17067 L
.42424 .17066 L
.42898 .17065 L
.43371 .17064 L
Mistroke
.44318 .17062 L
.46212 .17058 L
.48106 .17053 L
.49053 .17051 L
.49527 .1705 L
.49763 .1705 L
.49882 .17049 L
.5 .17049 L
.50118 .17049 L
.50237 .17049 L
.50355 .17049 L
.50473 .17049 L
.50592 .17049 L
.5071 .17049 L
.50947 .17049 L
.51184 .17049 L
.51302 .17049 L
.5142 .17049 L
.51539 .17049 L
.51657 .17049 L
.51776 .17049 L
.51894 .17049 L
.52012 .17049 L
.52131 .17049 L
.52367 .17048 L
.52841 .17047 L
.53788 .17045 L
.55682 .17041 L
.57576 .17036 L
.58523 .17035 L
.58996 .17033 L
.59233 .17033 L
.5947 .17032 L
.59706 .17031 L
.59943 .1703 L
.60417 .17028 L
.61364 .17024 L
.62311 .17019 L
.63258 .17015 L
.63731 .17013 L
.63968 .17012 L
.64086 .17012 L
.64205 .17011 L
.64441 .17009 L
.64678 .17007 L
.65152 .17002 L
.67045 .16985 L
.68939 .16964 L
.70833 .16934 L
.7178 .16917 L
Mistroke
.72727 .16896 L
.74621 .1684 L
.76515 .16768 L
.78409 .16666 L
.80303 .16525 L
.82197 .16334 L
.83144 .1621 L
.84091 .1606 L
.85038 .15881 L
.85985 .15667 L
.86932 .15407 L
.87879 .15085 L
.88826 .14689 L
.89773 .14189 L
.9072 .13544 L
.91667 .12694 L
.9214 .1216 L
.92614 .11544 L
.93087 .10794 L
.93561 .09882 L
.94034 .08752 L
.94508 .07315 L
.94981 .05429 L
.95455 .02843 L
Mfstroke
P
P
P
% End of Graphics
MathPictureEnd
end
showpage
%%EndDocument
 @endspecial 587 1329 a(Figure)i(26:)j(T)m(est)d(Problem)f(26,)g
Fl(y)q Fm(\()p Fl(x)p Fm(\))i(v)o(ersus)g Fl(x)p eop
%%Page: 27 27
27 26 bop 262 307 a Fn(T)l(est)15 b(Problem)e(27)h Fm(\(Nonlinear\))g
(\(see)h(e.g.)j([4)o(,)13 b(pp.29-38])f(and)i([6)o(,)g(p.159]\))262
357 y Fl(\017y)300 342 y Fk(00)331 357 y Fm(+)9 b Fl(y)q(y)414
342 y Fk(0)437 357 y Fj(\000)g Fl(y)14 b Fm(=)d(0,)60
b Fl(y)q Fm(\(0\))12 b(=)g(1)p Fl(;)18 b(y)q Fm(\(1\))12
b(=)964 341 y Fi(1)p 964 348 17 2 v 964 371 a(3)985 357
y Fm(.)262 407 y(The)i(solution)f(has)h(a)g(b)q(oundary)f(la)o(y)o(er)h
(at)g Fl(x)d Fm(=)h(0)h(and)h(a)g(corner)h(la)o(y)o(er)e(at)h
Fl(x)d Fm(=)1542 390 y Fi(2)p 1542 397 V 1542 421 a(3)1563
407 y Fm(.)439 1717 y @beginspecial 72 @llx 72 @lly 540
@urx 720 @ury 2834 @rwi @setspecial
%%BeginDocument: ../PLOTS/pr27.ps

/Mathdict 150 dict def
Mathdict begin
/Mlmarg		1.0 72 mul def
/Mrmarg		1.0 72 mul def
/Mbmarg		1.0 72 mul def
/Mtmarg		1.0 72 mul def
/Mwidth		8.5 72 mul def
/Mheight	11 72 mul def
/Mtransform	{  } bind def
/Mnodistort	true def
/Mfixwid	true	def
/Mfixdash	false def
/Mrot		0	def
/Mpstart {
MathPictureStart
} bind def
/Mpend {
MathPictureEnd
} bind def
/Mscale {
0 1 0 1
5 -1 roll
MathScale
} bind def
/ISOLatin1Encoding dup where
{ pop pop }
{
[
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft
/logicalnot /hyphen /registered /macron
/degree /plusminus /twosuperior /threesuperior
/acute /mu /paragraph /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright
/onequarter /onehalf /threequarters /questiondown
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis
] def
} ifelse
/MFontDict 50 dict def
/MStrCat
{
exch
dup length
2 index length add
string
dup 3 1 roll
copy
length
exch dup
4 2 roll exch
putinterval
} def
/MCreateEncoding
{
1 index
255 string cvs
(-) MStrCat
1 index MStrCat
cvn exch
(Encoding) MStrCat
cvn dup where
{
exch get
}
{
pop
StandardEncoding
} ifelse
3 1 roll
dup MFontDict exch known not
{
1 index findfont
dup length dict
begin
{1 index /FID ne
{def}
{pop pop}
ifelse} forall
/Encoding 3 index
def
currentdict
end
1 index exch definefont pop
MFontDict 1 index
null put
}
if
exch pop
exch pop
} def
/ISOLatin1 { (ISOLatin1) MCreateEncoding } def
/ISO8859 { (ISOLatin1) MCreateEncoding } def
/Mcopyfont {
dup
maxlength
dict
exch
{
1 index
/FID
eq
{
pop pop
}
{
2 index
3 1 roll
put
}
ifelse
}
forall
} def
/Plain	/Courier findfont Mcopyfont definefont pop
/Bold	/Courier-Bold findfont Mcopyfont definefont pop
/Italic /Courier-Oblique findfont Mcopyfont definefont pop
/MathPictureStart {
gsave
Mtransform
Mlmarg
Mbmarg
translate
Mwidth
Mlmarg Mrmarg add
sub
/Mwidth exch def
Mheight
Mbmarg Mtmarg add
sub
/Mheight exch def
/Mtmatrix
matrix currentmatrix
def
/Mgmatrix
matrix currentmatrix
def
} bind def
/MathPictureEnd {
grestore
} bind def
/MFill {
0 0 		moveto
Mwidth 0 	lineto
Mwidth Mheight 	lineto
0 Mheight 	lineto
fill
} bind def
/MPlotRegion {
3 index
Mwidth mul
2 index
Mheight mul
translate
exch sub
Mheight mul
/Mheight
exch def
exch sub
Mwidth mul
/Mwidth
exch def
} bind def
/MathSubStart {
Momatrix
Mgmatrix Mtmatrix
Mwidth Mheight
7 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
Mgmatrix setmatrix
9 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
2 copy translate
/Mtmatrix matrix currentmatrix def
3 -1 roll
exch sub
/Mheight exch def
sub
/Mwidth exch def
} bind def
/MathSubEnd {
/Mheight exch def
/Mwidth exch def
/Mtmatrix exch def
dup setmatrix
/Mgmatrix exch def
/Momatrix exch def
} bind def
/Mdot {
moveto
0 0 rlineto
stroke
} bind def
/Mtetra {
moveto
lineto
lineto
lineto
fill
} bind def
/Metetra {
moveto
lineto
lineto
lineto
closepath
gsave
fill
grestore
0 setgray
stroke
} bind def
/Mistroke {
flattenpath
0 0 0
{
4 2 roll
pop pop
}
{
4 -1 roll
2 index
sub dup mul
4 -1 roll
2 index
sub dup mul
add sqrt
4 -1 roll
add
3 1 roll
}
{
stop
}
{
stop
}
pathforall
pop pop
currentpoint
stroke
moveto
currentdash
3 -1 roll
add
setdash
} bind def
/Mfstroke {
stroke
currentdash
pop 0
setdash
} bind def
/Mrotsboxa {
gsave
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
grestore
Msboxa
3  -1 roll
/Mtmatrix
exch def
/Mrot
0 def
} bind def
/Msboxa {
newpath
5 -1 roll
Mvboxa
pop
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Msboxa1
5 -3 roll
Msboxa1
Mboxrot
[
7 -2 roll
2 copy
[
3 1 roll
10 -1 roll
9 -1 roll
]
6 1 roll
5 -2 roll
]
} bind def
/Msboxa1 {
sub
2 div
dup
2 index
1 add
mul
3 -1 roll
-1 add
3 -1 roll
mul
} bind def
/Mvboxa	{
Mfixwid
{
Mvboxa1
}
{
dup
Mwidthcal
0 exch
{
add
}
forall
exch
Mvboxa1
4 index
7 -1 roll
add
4 -1 roll
pop
3 1 roll
}
ifelse
} bind def
/Mvboxa1 {
gsave
newpath
[ true
3 -1 roll
{
Mbbox
5 -1 roll
{
0
5 1 roll
}
{
7 -1 roll
exch sub
(m) stringwidth pop
.3 mul
sub
7 1 roll
6 -1 roll
4 -1 roll
Mmin
3 -1 roll
5 index
add
5 -1 roll
4 -1 roll
Mmax
4 -1 roll
}
ifelse
false
}
forall
{ stop } if
counttomark
1 add
4 roll
]
grestore
} bind def
/Mbbox {
1 dict begin
0 0 moveto
/temp (T) def
{	gsave
currentpoint newpath moveto
temp 0 3 -1 roll put temp
false charpath flattenpath currentpoint
pathbbox
grestore moveto lineto moveto} forall
pathbbox
newpath
end
} bind def
/Mmin {
2 copy
gt
{ exch } if
pop
} bind def
/Mmax {
2 copy
lt
{ exch } if
pop
} bind def
/Mrotshowa {
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
Mgmatrix setmatrix
Mshowa
/Mtmatrix
exch def
/Mrot 0 def
} bind def
/Mshowa {
4 -2 roll
moveto
2 index
Mtmatrix setmatrix
Mvboxa
7 1 roll
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Mshowa1
4 1 roll
Mshowa1
rmoveto
currentpoint
Mfixwid
{
Mshowax
}
{
Mshoway
}
ifelse
pop pop pop pop
Mgmatrix setmatrix
} bind def
/Mshowax {	
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
Mfixdash
{
Mfixdashp		
}
if
show
} for
} bind def
/Mfixdashp {
dup
length
1
gt
1 index
true exch
{
45
eq
and
} forall
and
{
gsave
(--)		
stringwidth pop
(-)
stringwidth pop
sub
2 div
0 rmoveto
dup
length
1 sub
{
(-)
show
}
repeat
grestore
}
if
} bind def	
/Mshoway {
3 index
Mwidthcal
5 1 roll
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
[
6 index
aload
length
2 add
-1 roll
{
pop
Strform
stringwidth
pop
neg 
exch
add
0 rmoveto
}
exch
kshow
cleartomark
} for
pop	
} bind def
/Mwidthcal {
[
exch
{
Mwidthcal1
}
forall
]
[
exch
dup
Maxlen
-1 add
0 1
3 -1 roll
{
[
exch
2 index
{		 
1 index	
Mget
exch
}
forall		
pop
Maxget
exch
}
for
pop
]
Mreva
} bind def
/Mreva	{
[
exch
aload
length
-1 1
{1 roll}
for
]
} bind def
/Mget	{
1 index
length
-1 add
1 index
ge
{
get
}
{
pop pop
0
}
ifelse
} bind def
/Maxlen	{
[
exch
{
length
}
forall
Maxget
} bind def
/Maxget	{
counttomark
-1 add
1 1
3 -1 roll
{
pop
Mmax
}
for
exch
pop
} bind def
/Mwidthcal1 {
[
exch
{
Strform
stringwidth
pop
}
forall
]
} bind def
/Strform {
/tem (x) def
tem 0
3 -1 roll
put
tem
} bind def
/Mshowa1 {
2 copy
add
4 1 roll
sub
mul
sub
-2 div
} bind def
/MathScale {
Mwidth
Mheight
Mlp
translate
scale
/yscale exch def
/ybias exch def
/xscale exch def
/xbias exch def
/Momatrix
xscale yscale matrix scale
xbias ybias matrix translate
matrix concatmatrix def
/Mgmatrix
matrix currentmatrix
def
} bind def
/Mlp {
3 copy
Mlpfirst
{
Mnodistort
{
Mmin
dup
} if
4 index
2 index
2 index
Mlprun
11 index
11 -1 roll
10 -4 roll
Mlp1
8 index
9 -5 roll
Mlp1
4 -1 roll
and
{ exit } if
3 -1 roll
pop pop
} loop
exch
3 1 roll
7 -3 roll
pop pop pop
} bind def
/Mlpfirst {
3 -1 roll
dup length
2 copy
-2 add
get
aload
pop pop pop
4 -2 roll
-1 add
get
aload
pop pop pop
6 -1 roll
3 -1 roll
5 -1 roll
sub
div
4 1 roll
exch sub
div
} bind def
/Mlprun {
2 copy
4 index
0 get
dup
4 1 roll
Mlprun1
3 copy
8 -2 roll
9 -1 roll
{
3 copy
Mlprun1
3 copy
11 -3 roll
/gt Mlpminmax
8 3 roll
11 -3 roll
/lt Mlpminmax
8 3 roll
} forall
pop pop pop pop
3 1 roll
pop pop
aload pop
5 -1 roll
aload pop
exch
6 -1 roll
Mlprun2
8 2 roll
4 -1 roll
Mlprun2
6 2 roll
3 -1 roll
Mlprun2
4 2 roll
exch
Mlprun2
6 2 roll
} bind def
/Mlprun1 {
aload pop
exch
6 -1 roll
5 -1 roll
mul add
4 -2 roll
mul
3 -1 roll
add
} bind def
/Mlprun2 {
2 copy
add 2 div
3 1 roll
exch sub
} bind def
/Mlpminmax {
cvx
2 index
6 index
2 index
exec
{
7 -3 roll
4 -1 roll
} if
1 index
5 index
3 -1 roll
exec
{
4 1 roll
pop
5 -1 roll
aload
pop pop
4 -1 roll
aload pop
[
8 -2 roll
pop
5 -2 roll
pop
6 -2 roll
pop
5 -1 roll
]
4 1 roll
pop
}
{
pop pop pop
} ifelse
} bind def
/Mlp1 {
5 index
3 index	sub
5 index
2 index mul
1 index
le
1 index
0 le
or
dup
not
{
1 index
3 index	div
.99999 mul
8 -1 roll
pop
7 1 roll
}
if
8 -1 roll
2 div
7 -2 roll
pop sub
5 index
6 -3 roll
pop pop
mul sub
exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
outflag
1
eq
{
/outflag 0 def
/intop 0 def
/inrht 0 def
} if		
5 index
gsave
Mtmatrix setmatrix
Mvboxa pop
grestore
3 -1 roll
pop
dup
intop
gt
{
/intop
exch def
}
{ pop }
ifelse
dup
inrht
gt
{
/inrht
exch def
}
{ pop }
ifelse
pop
/inflag
1 def
} bind def
/Mouter {
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
inflag
1 eq
{
dup
0 lt
{
dup
intop
mul
neg
/yadtop
exch def
} if
dup
0 gt
{
dup
intop
mul
/yadbot
exch def
}
if
pop
dup
0 lt
{
dup
inrht
mul
neg
/xadrht
exch def
} if
dup
0 gt
{
dup
inrht
mul
/xadlft
exch def
} if
pop
/outflag 1 def
}
{ pop pop}
ifelse
/inflag 0 def
/inrht 0 def
/intop 0 def
} bind def	
/Mboxout {
outflag
1
eq
{
4 -1
roll
xadlft
leadjust
add
sub
4 1 roll
3 -1
roll
yadbot
leadjust
add
sub
3 1
roll
exch
xadrht
leadjust
add
add
exch
yadtop
leadjust
add
add
/outflag 0 def
/xadlft 0 def
/yadbot 0 def
/xadrht 0 def
/yadtop 0 def
} if
} bind def
/leadjust {
(m) stringwidth pop
.5 mul
} bind def
/Mrotcheck {
dup
90
eq
{
yadbot
/yadbot
xadrht
def	
/xadrht
yadtop
def
/yadtop
xadlft
def
/xadlft
exch
def
}
if
dup
cos
1 index
sin
Checkaux
dup
cos
1 index
sin neg
exch
Checkaux
3 1 roll
pop pop
} bind def
/Checkaux {
4 index
exch
4 index
mul
3 1 roll
mul add
4 1 roll
} bind def
/Mboxrot {
Mrot
90 eq
{
brotaux
4 2
roll
}
if
Mrot
180 eq
{
4 2
roll
brotaux
4 2
roll
brotaux
}	
if
Mrot
270 eq
{
4 2
roll
brotaux
}
if
} bind def
/brotaux {
neg
exch
neg
} bind def
/Mabsproc {
0
matrix defaultmatrix
dtransform idtransform
dup mul exch
dup mul
add sqrt
} bind def
/Mabswid {
Mabsproc
setlinewidth	
} bind def
/Mabsdash {
exch
[
exch
{
Mabsproc
}
forall
]
exch
setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop}
repeat
} bind def
} ifelse
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/setcmykcolor where
{ pop}
{ /setcmykcolor {
4 1
roll
[
4 1 
roll
]
{
1 index
sub
1
sub neg
dup
0
lt
{
pop
0
}
if
dup
1
gt
{
pop
1
}
if
exch
} forall
pop
setrgbcolor
} bind def
} ifelse
/Mcharproc
{
currentfile
(x)
readhexstring
pop
0 get
exch
div
} bind def
/Mshadeproc
{
dup
3 1
roll
{
dup
Mcharproc
3 1
roll
} repeat
1 eq
{
setgray
}
{
3 eq
{
setrgbcolor
}
{
setcmykcolor
} ifelse
} ifelse
} bind def
/Mrectproc
{
3 index
2 index
moveto
2 index
3 -1
roll
lineto
dup
3 1
roll
lineto
lineto
fill
} bind def
/Mcolorimage
{
7 1
roll
pop
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
9 index
Mshadeproc
Mrectproc
} for
pop
} for
pop pop pop pop
} bind def
/Mimage
{
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
Mcharproc
setgray
Mrectproc
} for
pop
} for
pop pop pop
} bind def

MathPictureStart
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0454545 0.909091 0.0280925 0.561849 [
[(0)] .04545 0 0 2 0 Minner Mrotsboxa
[(0.2)] .22727 0 0 2 0 Minner Mrotsboxa
[(0.4)] .40909 0 0 2 0 Minner Mrotsboxa
[(0.6)] .59091 0 0 2 0 Minner Mrotsboxa
[(0.8)] .77273 0 0 2 0 Minner Mrotsboxa
[(1)] .95455 0 0 2 0 Minner Mrotsboxa
[()] .5 0 0 2 0 0 -1 Mouter Mrotsboxa
[(0)] -0.0125 .02809 1 0 0 Minner Mrotsboxa
[(0.2)] -0.0125 .14046 1 0 0 Minner Mrotsboxa
[(0.4)] -0.0125 .25283 1 0 0 Minner Mrotsboxa
[(0.6)] -0.0125 .3652 1 0 0 Minner Mrotsboxa
[(0.8)] -0.0125 .47757 1 0 0 Minner Mrotsboxa
[(1)] -0.0125 .58994 1 0 0 Minner Mrotsboxa
[(Epsilon = 0.1, 0.02, 0.001)] .5 .61803 0 -4 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 .61903 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 g
p
p
.002 w
.04545 0 m
.04545 .00625 L
s
P
[(0)] .04545 0 0 2 0 Minner Mrotshowa
p
.002 w
.22727 0 m
.22727 .00625 L
s
P
[(0.2)] .22727 0 0 2 0 Minner Mrotshowa
p
.002 w
.40909 0 m
.40909 .00625 L
s
P
[(0.4)] .40909 0 0 2 0 Minner Mrotshowa
p
.002 w
.59091 0 m
.59091 .00625 L
s
P
[(0.6)] .59091 0 0 2 0 Minner Mrotshowa
p
.002 w
.77273 0 m
.77273 .00625 L
s
P
[(0.8)] .77273 0 0 2 0 Minner Mrotshowa
p
.002 w
.95455 0 m
.95455 .00625 L
s
P
[(1)] .95455 0 0 2 0 Minner Mrotshowa
p
.001 w
.08182 0 m
.08182 .00375 L
s
P
p
.001 w
.11818 0 m
.11818 .00375 L
s
P
p
.001 w
.15455 0 m
.15455 .00375 L
s
P
p
.001 w
.19091 0 m
.19091 .00375 L
s
P
p
.001 w
.26364 0 m
.26364 .00375 L
s
P
p
.001 w
.3 0 m
.3 .00375 L
s
P
p
.001 w
.33636 0 m
.33636 .00375 L
s
P
p
.001 w
.37273 0 m
.37273 .00375 L
s
P
p
.001 w
.44545 0 m
.44545 .00375 L
s
P
p
.001 w
.48182 0 m
.48182 .00375 L
s
P
p
.001 w
.51818 0 m
.51818 .00375 L
s
P
p
.001 w
.55455 0 m
.55455 .00375 L
s
P
p
.001 w
.62727 0 m
.62727 .00375 L
s
P
p
.001 w
.66364 0 m
.66364 .00375 L
s
P
p
.001 w
.7 0 m
.7 .00375 L
s
P
p
.001 w
.73636 0 m
.73636 .00375 L
s
P
p
.001 w
.80909 0 m
.80909 .00375 L
s
P
p
.001 w
.84545 0 m
.84545 .00375 L
s
P
p
.001 w
.88182 0 m
.88182 .00375 L
s
P
p
.001 w
.91818 0 m
.91818 .00375 L
s
P
p
.001 w
.00909 0 m
.00909 .00375 L
s
P
p
.001 w
.99091 0 m
.99091 .00375 L
s
P
[()] .5 0 0 2 0 0 -1 Mouter Mrotshowa
p
.002 w
0 0 m
1 0 L
s
P
p
.002 w
0 .02809 m
.00625 .02809 L
s
P
[(0)] -0.0125 .02809 1 0 0 Minner Mrotshowa
p
.002 w
0 .14046 m
.00625 .14046 L
s
P
[(0.2)] -0.0125 .14046 1 0 0 Minner Mrotshowa
p
.002 w
0 .25283 m
.00625 .25283 L
s
P
[(0.4)] -0.0125 .25283 1 0 0 Minner Mrotshowa
p
.002 w
0 .3652 m
.00625 .3652 L
s
P
[(0.6)] -0.0125 .3652 1 0 0 Minner Mrotshowa
p
.002 w
0 .47757 m
.00625 .47757 L
s
P
[(0.8)] -0.0125 .47757 1 0 0 Minner Mrotshowa
p
.002 w
0 .58994 m
.00625 .58994 L
s
P
[(1)] -0.0125 .58994 1 0 0 Minner Mrotshowa
p
.001 w
0 .05057 m
.00375 .05057 L
s
P
p
.001 w
0 .07304 m
.00375 .07304 L
s
P
p
.001 w
0 .09551 m
.00375 .09551 L
s
P
p
.001 w
0 .11799 m
.00375 .11799 L
s
P
p
.001 w
0 .16294 m
.00375 .16294 L
s
P
p
.001 w
0 .18541 m
.00375 .18541 L
s
P
p
.001 w
0 .20788 m
.00375 .20788 L
s
P
p
.001 w
0 .23036 m
.00375 .23036 L
s
P
p
.001 w
0 .27531 m
.00375 .27531 L
s
P
p
.001 w
0 .29778 m
.00375 .29778 L
s
P
p
.001 w
0 .32025 m
.00375 .32025 L
s
P
p
.001 w
0 .34273 m
.00375 .34273 L
s
P
p
.001 w
0 .38768 m
.00375 .38768 L
s
P
p
.001 w
0 .41015 m
.00375 .41015 L
s
P
p
.001 w
0 .43262 m
.00375 .43262 L
s
P
p
.001 w
0 .4551 m
.00375 .4551 L
s
P
p
.001 w
0 .50005 m
.00375 .50005 L
s
P
p
.001 w
0 .52252 m
.00375 .52252 L
s
P
p
.001 w
0 .54499 m
.00375 .54499 L
s
P
p
.001 w
0 .56747 m
.00375 .56747 L
s
P
p
.001 w
0 .00562 m
.00375 .00562 L
s
P
p
.001 w
0 .61242 m
.00375 .61242 L
s
P
p
.002 w
0 0 m
0 .61803 L
s
P
P
p
p
.002 w
.04545 .61178 m
.04545 .61803 L
s
P
p
.002 w
.22727 .61178 m
.22727 .61803 L
s
P
p
.002 w
.40909 .61178 m
.40909 .61803 L
s
P
p
.002 w
.59091 .61178 m
.59091 .61803 L
s
P
p
.002 w
.77273 .61178 m
.77273 .61803 L
s
P
p
.002 w
.95455 .61178 m
.95455 .61803 L
s
P
p
.001 w
.08182 .61428 m
.08182 .61803 L
s
P
p
.001 w
.11818 .61428 m
.11818 .61803 L
s
P
p
.001 w
.15455 .61428 m
.15455 .61803 L
s
P
p
.001 w
.19091 .61428 m
.19091 .61803 L
s
P
p
.001 w
.26364 .61428 m
.26364 .61803 L
s
P
p
.001 w
.3 .61428 m
.3 .61803 L
s
P
p
.001 w
.33636 .61428 m
.33636 .61803 L
s
P
p
.001 w
.37273 .61428 m
.37273 .61803 L
s
P
p
.001 w
.44545 .61428 m
.44545 .61803 L
s
P
p
.001 w
.48182 .61428 m
.48182 .61803 L
s
P
p
.001 w
.51818 .61428 m
.51818 .61803 L
s
P
p
.001 w
.55455 .61428 m
.55455 .61803 L
s
P
p
.001 w
.62727 .61428 m
.62727 .61803 L
s
P
p
.001 w
.66364 .61428 m
.66364 .61803 L
s
P
p
.001 w
.7 .61428 m
.7 .61803 L
s
P
p
.001 w
.73636 .61428 m
.73636 .61803 L
s
P
p
.001 w
.80909 .61428 m
.80909 .61803 L
s
P
p
.001 w
.84545 .61428 m
.84545 .61803 L
s
P
p
.001 w
.88182 .61428 m
.88182 .61803 L
s
P
p
.001 w
.91818 .61428 m
.91818 .61803 L
s
P
p
.001 w
.00909 .61428 m
.00909 .61803 L
s
P
p
.001 w
.99091 .61428 m
.99091 .61803 L
s
P
[(Epsilon = 0.1, 0.02, 0.001)] .5 .61803 0 -4 Mshowa
p
.002 w
0 .61803 m
1 .61803 L
s
P
p
.002 w
.99375 .02809 m
1 .02809 L
s
P
p
.002 w
.99375 .14046 m
1 .14046 L
s
P
p
.002 w
.99375 .25283 m
1 .25283 L
s
P
p
.002 w
.99375 .3652 m
1 .3652 L
s
P
p
.002 w
.99375 .47757 m
1 .47757 L
s
P
p
.002 w
.99375 .58994 m
1 .58994 L
s
P
p
.001 w
.99625 .05057 m
1 .05057 L
s
P
p
.001 w
.99625 .07304 m
1 .07304 L
s
P
p
.001 w
.99625 .09551 m
1 .09551 L
s
P
p
.001 w
.99625 .11799 m
1 .11799 L
s
P
p
.001 w
.99625 .16294 m
1 .16294 L
s
P
p
.001 w
.99625 .18541 m
1 .18541 L
s
P
p
.001 w
.99625 .20788 m
1 .20788 L
s
P
p
.001 w
.99625 .23036 m
1 .23036 L
s
P
p
.001 w
.99625 .27531 m
1 .27531 L
s
P
p
.001 w
.99625 .29778 m
1 .29778 L
s
P
p
.001 w
.99625 .32025 m
1 .32025 L
s
P
p
.001 w
.99625 .34273 m
1 .34273 L
s
P
p
.001 w
.99625 .38768 m
1 .38768 L
s
P
p
.001 w
.99625 .41015 m
1 .41015 L
s
P
p
.001 w
.99625 .43262 m
1 .43262 L
s
P
p
.001 w
.99625 .4551 m
1 .4551 L
s
P
p
.001 w
.99625 .50005 m
1 .50005 L
s
P
p
.001 w
.99625 .52252 m
1 .52252 L
s
P
p
.001 w
.99625 .54499 m
1 .54499 L
s
P
p
.001 w
.99625 .56747 m
1 .56747 L
s
P
p
.001 w
.99625 .00562 m
1 .00562 L
s
P
p
.001 w
.99625 .61242 m
1 .61242 L
s
P
p
.002 w
1 0 m
1 .61803 L
s
P
P
p
P
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
p
p
p
.001 w
.04545 .58994 m
.06439 .51778 L
.08333 .45964 L
.12121 .372 L
.15909 .30969 L
.19697 .2636 L
.23485 .22865 L
.27273 .20182 L
.31061 .18115 L
.34848 .16517 L
.38636 .15305 L
.42424 .14406 L
.44318 .14057 L
.46212 .13771 L
.48106 .13546 L
.49053 .13453 L
.5 .13372 L
.50947 .13305 L
.51894 .13251 L
.52841 .1321 L
.53314 .13194 L
.53788 .13181 L
.54261 .1317 L
.54735 .13162 L
.54972 .1316 L
.5509 .13159 L
.55208 .13158 L
.55327 .13157 L
.55445 .13156 L
.55563 .13156 L
.55682 .13155 L
.558 .13155 L
.55919 .13155 L
.56037 .13156 L
.56155 .13156 L
.56274 .13157 L
.56392 .13158 L
.56629 .1316 L
.56866 .13163 L
.57102 .13166 L
.57576 .13175 L
.58049 .13188 L
.58523 .13203 L
.5947 .13241 L
.61364 .1335 L
.63258 .13495 L
.65152 .13681 L
.68939 .1417 L
.72727 .14805 L
.76515 .15591 L
Mistroke
.80303 .16514 L
.84091 .17575 L
.87879 .1877 L
.91667 .20093 L
.95455 .21536 L
Mfstroke
P
P
p
p
.001 w
.04545 .58994 m
.05019 .51637 L
.05492 .45955 L
.06439 .37393 L
.06913 .34174 L
.07386 .31427 L
.08333 .2697 L
.0928 .23517 L
.10227 .20788 L
.11174 .18567 L
.12121 .16732 L
.14015 .13887 L
.15909 .11782 L
.17803 .10184 L
.19697 .08952 L
.21591 .07967 L
.23485 .07185 L
.25379 .06558 L
.27273 .06051 L
.29167 .0564 L
.31061 .0531 L
.32955 .05051 L
.34848 .04848 L
.36742 .04697 L
.37689 .04639 L
.38636 .0459 L
.39583 .04551 L
.40057 .04536 L
.4053 .04523 L
.41004 .04513 L
.41477 .04507 L
.41714 .04504 L
.41832 .04503 L
.41951 .04502 L
.42069 .04502 L
.42188 .04501 L
.42306 .04501 L
.42424 .045 L
.42543 .045 L
.42661 .045 L
.42779 .045 L
.42898 .045 L
.43016 .045 L
.43134 .04501 L
.43253 .04501 L
.43371 .04502 L
.43608 .04503 L
.43845 .04506 L
.44318 .04512 L
.44792 .0452 L
Mistroke
.45265 .0453 L
.46212 .04557 L
.47159 .04594 L
.48106 .04641 L
.5 .04759 L
.51894 .04916 L
.53788 .05112 L
.57576 .0563 L
.61364 .06326 L
.65152 .07225 L
.68939 .08344 L
.72727 .09692 L
.76515 .11258 L
.80303 .13036 L
.84091 .1499 L
.87879 .17079 L
.91667 .19279 L
.95455 .21536 L
Mfstroke
P
P
p
p
.001 w
.04545 .58994 m
.04664 .52221 L
.04782 .46894 L
.05019 .38892 L
.05256 .33222 L
.05492 .29073 L
.05729 .25844 L
.05966 .23165 L
.06439 .19314 L
.06913 .16497 L
.07386 .1443 L
.0786 .12788 L
.08333 .11503 L
.0928 .09542 L
.09754 .08807 L
.10227 .08169 L
.11174 .0714 L
.12121 .06358 L
.13068 .05746 L
.14015 .0526 L
.14962 .04862 L
.15909 .0454 L
.17803 .0405 L
.1875 .03864 L
.19697 .03709 L
.20644 .03579 L
.21591 .03467 L
.23485 .03298 L
.24432 .03231 L
.25379 .03169 L
.26326 .03124 L
.27273 .03079 L
.2822 .03045 L
.28693 .03028 L
.29167 .03011 L
.2964 .02999 L
.30114 .02989 L
.31061 .02967 L
.32008 .0295 L
.32481 .02941 L
.32955 .02933 L
.33428 .02927 L
.33902 .02922 L
.34375 .02916 L
.34612 .02913 L
.3473 .02912 L
.34848 .0291 L
.35085 .02909 L
.35322 .02907 L
.35795 .02905 L
Mistroke
.36269 .02902 L
.36506 .029 L
.36624 .029 L
.36742 .02899 L
.36861 .02899 L
.36979 .02899 L
.37216 .02899 L
.37334 .02899 L
.37453 .02899 L
.37571 .02899 L
.37689 .02899 L
.38163 .02896 L
.38281 .02895 L
.384 .02895 L
.38518 .02894 L
.38636 .02894 L
.38755 .02894 L
.38873 .02895 L
.3911 .02896 L
.39347 .02898 L
.39465 .02898 L
.39583 .02899 L
.39702 .02899 L
.3982 .02899 L
.40057 .02899 L
.40175 .02899 L
.40294 .02899 L
.40412 .02899 L
.4053 .02899 L
.40767 .029 L
.41004 .02902 L
.41477 .02905 L
.42424 .0291 L
.42898 .02913 L
.43134 .02914 L
.43371 .02916 L
.43608 .02918 L
.43845 .02921 L
.44318 .02927 L
.46212 .02961 L
.47159 .02978 L
.48106 .03 L
.5 .03062 L
.51894 .03141 L
.53788 .03247 L
.55682 .03388 L
.57576 .03568 L
.5947 .03809 L
.61364 .04113 L
.63258 .04501 L
Mistroke
.65152 .04977 L
.68939 .06243 L
.72727 .07939 L
.76515 .09971 L
.80303 .12211 L
.84091 .14518 L
.87879 .16854 L
.91667 .192 L
.95455 .21536 L
Mfstroke
P
P
P
% End of Graphics
MathPictureEnd
end
showpage
%%EndDocument
 @endspecial 587 1335 a(Figure)j(27:)j(T)m(est)d(Problem)f(27,)g
Fl(y)q Fm(\()p Fl(x)p Fm(\))i(v)o(ersus)g Fl(x)p eop
%%Page: 28 28
28 27 bop 262 307 a Fn(T)l(est)15 b(Problem)e(28)h Fm(\(Nonlinear\))g
(\(see)h(e.g.)j([4)o(,)13 b(pp.29-38])f(and)i([6)o(,)g(p.159]\))262
357 y Fl(\017y)300 342 y Fk(00)331 357 y Fm(+)9 b Fl(y)q(y)414
342 y Fk(0)437 357 y Fj(\000)g Fl(y)14 b Fm(=)d(0,)60
b Fl(y)q Fm(\(0\))12 b(=)g(1)p Fl(;)18 b(y)q Fm(\(1\))12
b(=)964 341 y Fi(3)p 964 348 17 2 v 964 371 a(2)985 357
y Fm(.)262 407 y(The)i(solution)f(has)h(a)g(b)q(oundary)f(la)o(y)o(er)h
(at)g Fl(x)d Fm(=)h(0.)439 1710 y @beginspecial 72 @llx
72 @lly 540 @urx 720 @ury 2834 @rwi @setspecial
%%BeginDocument: ../PLOTS/pr28.ps

/Mathdict 150 dict def
Mathdict begin
/Mlmarg		1.0 72 mul def
/Mrmarg		1.0 72 mul def
/Mbmarg		1.0 72 mul def
/Mtmarg		1.0 72 mul def
/Mwidth		8.5 72 mul def
/Mheight	11 72 mul def
/Mtransform	{  } bind def
/Mnodistort	true def
/Mfixwid	true	def
/Mfixdash	false def
/Mrot		0	def
/Mpstart {
MathPictureStart
} bind def
/Mpend {
MathPictureEnd
} bind def
/Mscale {
0 1 0 1
5 -1 roll
MathScale
} bind def
/ISOLatin1Encoding dup where
{ pop pop }
{
[
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft
/logicalnot /hyphen /registered /macron
/degree /plusminus /twosuperior /threesuperior
/acute /mu /paragraph /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright
/onequarter /onehalf /threequarters /questiondown
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis
] def
} ifelse
/MFontDict 50 dict def
/MStrCat
{
exch
dup length
2 index length add
string
dup 3 1 roll
copy
length
exch dup
4 2 roll exch
putinterval
} def
/MCreateEncoding
{
1 index
255 string cvs
(-) MStrCat
1 index MStrCat
cvn exch
(Encoding) MStrCat
cvn dup where
{
exch get
}
{
pop
StandardEncoding
} ifelse
3 1 roll
dup MFontDict exch known not
{
1 index findfont
dup length dict
begin
{1 index /FID ne
{def}
{pop pop}
ifelse} forall
/Encoding 3 index
def
currentdict
end
1 index exch definefont pop
MFontDict 1 index
null put
}
if
exch pop
exch pop
} def
/ISOLatin1 { (ISOLatin1) MCreateEncoding } def
/ISO8859 { (ISOLatin1) MCreateEncoding } def
/Mcopyfont {
dup
maxlength
dict
exch
{
1 index
/FID
eq
{
pop pop
}
{
2 index
3 1 roll
put
}
ifelse
}
forall
} def
/Plain	/Courier findfont Mcopyfont definefont pop
/Bold	/Courier-Bold findfont Mcopyfont definefont pop
/Italic /Courier-Oblique findfont Mcopyfont definefont pop
/MathPictureStart {
gsave
Mtransform
Mlmarg
Mbmarg
translate
Mwidth
Mlmarg Mrmarg add
sub
/Mwidth exch def
Mheight
Mbmarg Mtmarg add
sub
/Mheight exch def
/Mtmatrix
matrix currentmatrix
def
/Mgmatrix
matrix currentmatrix
def
} bind def
/MathPictureEnd {
grestore
} bind def
/MFill {
0 0 		moveto
Mwidth 0 	lineto
Mwidth Mheight 	lineto
0 Mheight 	lineto
fill
} bind def
/MPlotRegion {
3 index
Mwidth mul
2 index
Mheight mul
translate
exch sub
Mheight mul
/Mheight
exch def
exch sub
Mwidth mul
/Mwidth
exch def
} bind def
/MathSubStart {
Momatrix
Mgmatrix Mtmatrix
Mwidth Mheight
7 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
Mgmatrix setmatrix
9 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
2 copy translate
/Mtmatrix matrix currentmatrix def
3 -1 roll
exch sub
/Mheight exch def
sub
/Mwidth exch def
} bind def
/MathSubEnd {
/Mheight exch def
/Mwidth exch def
/Mtmatrix exch def
dup setmatrix
/Mgmatrix exch def
/Momatrix exch def
} bind def
/Mdot {
moveto
0 0 rlineto
stroke
} bind def
/Mtetra {
moveto
lineto
lineto
lineto
fill
} bind def
/Metetra {
moveto
lineto
lineto
lineto
closepath
gsave
fill
grestore
0 setgray
stroke
} bind def
/Mistroke {
flattenpath
0 0 0
{
4 2 roll
pop pop
}
{
4 -1 roll
2 index
sub dup mul
4 -1 roll
2 index
sub dup mul
add sqrt
4 -1 roll
add
3 1 roll
}
{
stop
}
{
stop
}
pathforall
pop pop
currentpoint
stroke
moveto
currentdash
3 -1 roll
add
setdash
} bind def
/Mfstroke {
stroke
currentdash
pop 0
setdash
} bind def
/Mrotsboxa {
gsave
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
grestore
Msboxa
3  -1 roll
/Mtmatrix
exch def
/Mrot
0 def
} bind def
/Msboxa {
newpath
5 -1 roll
Mvboxa
pop
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Msboxa1
5 -3 roll
Msboxa1
Mboxrot
[
7 -2 roll
2 copy
[
3 1 roll
10 -1 roll
9 -1 roll
]
6 1 roll
5 -2 roll
]
} bind def
/Msboxa1 {
sub
2 div
dup
2 index
1 add
mul
3 -1 roll
-1 add
3 -1 roll
mul
} bind def
/Mvboxa	{
Mfixwid
{
Mvboxa1
}
{
dup
Mwidthcal
0 exch
{
add
}
forall
exch
Mvboxa1
4 index
7 -1 roll
add
4 -1 roll
pop
3 1 roll
}
ifelse
} bind def
/Mvboxa1 {
gsave
newpath
[ true
3 -1 roll
{
Mbbox
5 -1 roll
{
0
5 1 roll
}
{
7 -1 roll
exch sub
(m) stringwidth pop
.3 mul
sub
7 1 roll
6 -1 roll
4 -1 roll
Mmin
3 -1 roll
5 index
add
5 -1 roll
4 -1 roll
Mmax
4 -1 roll
}
ifelse
false
}
forall
{ stop } if
counttomark
1 add
4 roll
]
grestore
} bind def
/Mbbox {
1 dict begin
0 0 moveto
/temp (T) def
{	gsave
currentpoint newpath moveto
temp 0 3 -1 roll put temp
false charpath flattenpath currentpoint
pathbbox
grestore moveto lineto moveto} forall
pathbbox
newpath
end
} bind def
/Mmin {
2 copy
gt
{ exch } if
pop
} bind def
/Mmax {
2 copy
lt
{ exch } if
pop
} bind def
/Mrotshowa {
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
Mgmatrix setmatrix
Mshowa
/Mtmatrix
exch def
/Mrot 0 def
} bind def
/Mshowa {
4 -2 roll
moveto
2 index
Mtmatrix setmatrix
Mvboxa
7 1 roll
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Mshowa1
4 1 roll
Mshowa1
rmoveto
currentpoint
Mfixwid
{
Mshowax
}
{
Mshoway
}
ifelse
pop pop pop pop
Mgmatrix setmatrix
} bind def
/Mshowax {	
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
Mfixdash
{
Mfixdashp		
}
if
show
} for
} bind def
/Mfixdashp {
dup
length
1
gt
1 index
true exch
{
45
eq
and
} forall
and
{
gsave
(--)		
stringwidth pop
(-)
stringwidth pop
sub
2 div
0 rmoveto
dup
length
1 sub
{
(-)
show
}
repeat
grestore
}
if
} bind def	
/Mshoway {
3 index
Mwidthcal
5 1 roll
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
[
6 index
aload
length
2 add
-1 roll
{
pop
Strform
stringwidth
pop
neg 
exch
add
0 rmoveto
}
exch
kshow
cleartomark
} for
pop	
} bind def
/Mwidthcal {
[
exch
{
Mwidthcal1
}
forall
]
[
exch
dup
Maxlen
-1 add
0 1
3 -1 roll
{
[
exch
2 index
{		 
1 index	
Mget
exch
}
forall		
pop
Maxget
exch
}
for
pop
]
Mreva
} bind def
/Mreva	{
[
exch
aload
length
-1 1
{1 roll}
for
]
} bind def
/Mget	{
1 index
length
-1 add
1 index
ge
{
get
}
{
pop pop
0
}
ifelse
} bind def
/Maxlen	{
[
exch
{
length
}
forall
Maxget
} bind def
/Maxget	{
counttomark
-1 add
1 1
3 -1 roll
{
pop
Mmax
}
for
exch
pop
} bind def
/Mwidthcal1 {
[
exch
{
Strform
stringwidth
pop
}
forall
]
} bind def
/Strform {
/tem (x) def
tem 0
3 -1 roll
put
tem
} bind def
/Mshowa1 {
2 copy
add
4 1 roll
sub
mul
sub
-2 div
} bind def
/MathScale {
Mwidth
Mheight
Mlp
translate
scale
/yscale exch def
/ybias exch def
/xscale exch def
/xbias exch def
/Momatrix
xscale yscale matrix scale
xbias ybias matrix translate
matrix concatmatrix def
/Mgmatrix
matrix currentmatrix
def
} bind def
/Mlp {
3 copy
Mlpfirst
{
Mnodistort
{
Mmin
dup
} if
4 index
2 index
2 index
Mlprun
11 index
11 -1 roll
10 -4 roll
Mlp1
8 index
9 -5 roll
Mlp1
4 -1 roll
and
{ exit } if
3 -1 roll
pop pop
} loop
exch
3 1 roll
7 -3 roll
pop pop pop
} bind def
/Mlpfirst {
3 -1 roll
dup length
2 copy
-2 add
get
aload
pop pop pop
4 -2 roll
-1 add
get
aload
pop pop pop
6 -1 roll
3 -1 roll
5 -1 roll
sub
div
4 1 roll
exch sub
div
} bind def
/Mlprun {
2 copy
4 index
0 get
dup
4 1 roll
Mlprun1
3 copy
8 -2 roll
9 -1 roll
{
3 copy
Mlprun1
3 copy
11 -3 roll
/gt Mlpminmax
8 3 roll
11 -3 roll
/lt Mlpminmax
8 3 roll
} forall
pop pop pop pop
3 1 roll
pop pop
aload pop
5 -1 roll
aload pop
exch
6 -1 roll
Mlprun2
8 2 roll
4 -1 roll
Mlprun2
6 2 roll
3 -1 roll
Mlprun2
4 2 roll
exch
Mlprun2
6 2 roll
} bind def
/Mlprun1 {
aload pop
exch
6 -1 roll
5 -1 roll
mul add
4 -2 roll
mul
3 -1 roll
add
} bind def
/Mlprun2 {
2 copy
add 2 div
3 1 roll
exch sub
} bind def
/Mlpminmax {
cvx
2 index
6 index
2 index
exec
{
7 -3 roll
4 -1 roll
} if
1 index
5 index
3 -1 roll
exec
{
4 1 roll
pop
5 -1 roll
aload
pop pop
4 -1 roll
aload pop
[
8 -2 roll
pop
5 -2 roll
pop
6 -2 roll
pop
5 -1 roll
]
4 1 roll
pop
}
{
pop pop pop
} ifelse
} bind def
/Mlp1 {
5 index
3 index	sub
5 index
2 index mul
1 index
le
1 index
0 le
or
dup
not
{
1 index
3 index	div
.99999 mul
8 -1 roll
pop
7 1 roll
}
if
8 -1 roll
2 div
7 -2 roll
pop sub
5 index
6 -3 roll
pop pop
mul sub
exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
outflag
1
eq
{
/outflag 0 def
/intop 0 def
/inrht 0 def
} if		
5 index
gsave
Mtmatrix setmatrix
Mvboxa pop
grestore
3 -1 roll
pop
dup
intop
gt
{
/intop
exch def
}
{ pop }
ifelse
dup
inrht
gt
{
/inrht
exch def
}
{ pop }
ifelse
pop
/inflag
1 def
} bind def
/Mouter {
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
inflag
1 eq
{
dup
0 lt
{
dup
intop
mul
neg
/yadtop
exch def
} if
dup
0 gt
{
dup
intop
mul
/yadbot
exch def
}
if
pop
dup
0 lt
{
dup
inrht
mul
neg
/xadrht
exch def
} if
dup
0 gt
{
dup
inrht
mul
/xadlft
exch def
} if
pop
/outflag 1 def
}
{ pop pop}
ifelse
/inflag 0 def
/inrht 0 def
/intop 0 def
} bind def	
/Mboxout {
outflag
1
eq
{
4 -1
roll
xadlft
leadjust
add
sub
4 1 roll
3 -1
roll
yadbot
leadjust
add
sub
3 1
roll
exch
xadrht
leadjust
add
add
exch
yadtop
leadjust
add
add
/outflag 0 def
/xadlft 0 def
/yadbot 0 def
/xadrht 0 def
/yadtop 0 def
} if
} bind def
/leadjust {
(m) stringwidth pop
.5 mul
} bind def
/Mrotcheck {
dup
90
eq
{
yadbot
/yadbot
xadrht
def	
/xadrht
yadtop
def
/yadtop
xadlft
def
/xadlft
exch
def
}
if
dup
cos
1 index
sin
Checkaux
dup
cos
1 index
sin neg
exch
Checkaux
3 1 roll
pop pop
} bind def
/Checkaux {
4 index
exch
4 index
mul
3 1 roll
mul add
4 1 roll
} bind def
/Mboxrot {
Mrot
90 eq
{
brotaux
4 2
roll
}
if
Mrot
180 eq
{
4 2
roll
brotaux
4 2
roll
brotaux
}	
if
Mrot
270 eq
{
4 2
roll
brotaux
}
if
} bind def
/brotaux {
neg
exch
neg
} bind def
/Mabsproc {
0
matrix defaultmatrix
dtransform idtransform
dup mul exch
dup mul
add sqrt
} bind def
/Mabswid {
Mabsproc
setlinewidth	
} bind def
/Mabsdash {
exch
[
exch
{
Mabsproc
}
forall
]
exch
setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop}
repeat
} bind def
} ifelse
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/setcmykcolor where
{ pop}
{ /setcmykcolor {
4 1
roll
[
4 1 
roll
]
{
1 index
sub
1
sub neg
dup
0
lt
{
pop
0
}
if
dup
1
gt
{
pop
1
}
if
exch
} forall
pop
setrgbcolor
} bind def
} ifelse
/Mcharproc
{
currentfile
(x)
readhexstring
pop
0 get
exch
div
} bind def
/Mshadeproc
{
dup
3 1
roll
{
dup
Mcharproc
3 1
roll
} repeat
1 eq
{
setgray
}
{
3 eq
{
setrgbcolor
}
{
setcmykcolor
} ifelse
} ifelse
} bind def
/Mrectproc
{
3 index
2 index
moveto
2 index
3 -1
roll
lineto
dup
3 1
roll
lineto
lineto
fill
} bind def
/Mcolorimage
{
7 1
roll
pop
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
9 index
Mshadeproc
Mrectproc
} for
pop
} for
pop pop pop pop
} bind def
/Mimage
{
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
Mcharproc
setgray
Mrectproc
} for
pop
} for
pop pop pop
} bind def

MathPictureStart
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0454545 0.909091 -0.214968 0.537421 [
[(0)] .04545 0 0 2 0 Minner Mrotsboxa
[(0.2)] .22727 0 0 2 0 Minner Mrotsboxa
[(0.4)] .40909 0 0 2 0 Minner Mrotsboxa
[(0.6)] .59091 0 0 2 0 Minner Mrotsboxa
[(0.8)] .77273 0 0 2 0 Minner Mrotsboxa
[(1)] .95455 0 0 2 0 Minner Mrotsboxa
[()] .5 0 0 2 0 0 -1 Mouter Mrotsboxa
[(0.4)] -0.0125 0 1 0 0 Minner Mrotsboxa
[(0.6)] -0.0125 .10748 1 0 0 Minner Mrotsboxa
[(0.8)] -0.0125 .21497 1 0 0 Minner Mrotsboxa
[(1)] -0.0125 .32245 1 0 0 Minner Mrotsboxa
[(1.2)] -0.0125 .42994 1 0 0 Minner Mrotsboxa
[(1.4)] -0.0125 .53742 1 0 0 Minner Mrotsboxa
[(Epsilon = 0.1, 0.03, 0.001)] .5 .61803 0 -4 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 .61903 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 g
p
p
.002 w
.04545 0 m
.04545 .00625 L
s
P
[(0)] .04545 0 0 2 0 Minner Mrotshowa
p
.002 w
.22727 0 m
.22727 .00625 L
s
P
[(0.2)] .22727 0 0 2 0 Minner Mrotshowa
p
.002 w
.40909 0 m
.40909 .00625 L
s
P
[(0.4)] .40909 0 0 2 0 Minner Mrotshowa
p
.002 w
.59091 0 m
.59091 .00625 L
s
P
[(0.6)] .59091 0 0 2 0 Minner Mrotshowa
p
.002 w
.77273 0 m
.77273 .00625 L
s
P
[(0.8)] .77273 0 0 2 0 Minner Mrotshowa
p
.002 w
.95455 0 m
.95455 .00625 L
s
P
[(1)] .95455 0 0 2 0 Minner Mrotshowa
p
.001 w
.08182 0 m
.08182 .00375 L
s
P
p
.001 w
.11818 0 m
.11818 .00375 L
s
P
p
.001 w
.15455 0 m
.15455 .00375 L
s
P
p
.001 w
.19091 0 m
.19091 .00375 L
s
P
p
.001 w
.26364 0 m
.26364 .00375 L
s
P
p
.001 w
.3 0 m
.3 .00375 L
s
P
p
.001 w
.33636 0 m
.33636 .00375 L
s
P
p
.001 w
.37273 0 m
.37273 .00375 L
s
P
p
.001 w
.44545 0 m
.44545 .00375 L
s
P
p
.001 w
.48182 0 m
.48182 .00375 L
s
P
p
.001 w
.51818 0 m
.51818 .00375 L
s
P
p
.001 w
.55455 0 m
.55455 .00375 L
s
P
p
.001 w
.62727 0 m
.62727 .00375 L
s
P
p
.001 w
.66364 0 m
.66364 .00375 L
s
P
p
.001 w
.7 0 m
.7 .00375 L
s
P
p
.001 w
.73636 0 m
.73636 .00375 L
s
P
p
.001 w
.80909 0 m
.80909 .00375 L
s
P
p
.001 w
.84545 0 m
.84545 .00375 L
s
P
p
.001 w
.88182 0 m
.88182 .00375 L
s
P
p
.001 w
.91818 0 m
.91818 .00375 L
s
P
p
.001 w
.00909 0 m
.00909 .00375 L
s
P
p
.001 w
.99091 0 m
.99091 .00375 L
s
P
[()] .5 0 0 2 0 0 -1 Mouter Mrotshowa
p
.002 w
0 0 m
1 0 L
s
P
p
.002 w
0 0 m
.00625 0 L
s
P
[(0.4)] -0.0125 0 1 0 0 Minner Mrotshowa
p
.002 w
0 .10748 m
.00625 .10748 L
s
P
[(0.6)] -0.0125 .10748 1 0 0 Minner Mrotshowa
p
.002 w
0 .21497 m
.00625 .21497 L
s
P
[(0.8)] -0.0125 .21497 1 0 0 Minner Mrotshowa
p
.002 w
0 .32245 m
.00625 .32245 L
s
P
[(1)] -0.0125 .32245 1 0 0 Minner Mrotshowa
p
.002 w
0 .42994 m
.00625 .42994 L
s
P
[(1.2)] -0.0125 .42994 1 0 0 Minner Mrotshowa
p
.002 w
0 .53742 m
.00625 .53742 L
s
P
[(1.4)] -0.0125 .53742 1 0 0 Minner Mrotshowa
p
.001 w
0 .0215 m
.00375 .0215 L
s
P
p
.001 w
0 .04299 m
.00375 .04299 L
s
P
p
.001 w
0 .06449 m
.00375 .06449 L
s
P
p
.001 w
0 .08599 m
.00375 .08599 L
s
P
p
.001 w
0 .12898 m
.00375 .12898 L
s
P
p
.001 w
0 .15048 m
.00375 .15048 L
s
P
p
.001 w
0 .17197 m
.00375 .17197 L
s
P
p
.001 w
0 .19347 m
.00375 .19347 L
s
P
p
.001 w
0 .23647 m
.00375 .23647 L
s
P
p
.001 w
0 .25796 m
.00375 .25796 L
s
P
p
.001 w
0 .27946 m
.00375 .27946 L
s
P
p
.001 w
0 .30096 m
.00375 .30096 L
s
P
p
.001 w
0 .34395 m
.00375 .34395 L
s
P
p
.001 w
0 .36545 m
.00375 .36545 L
s
P
p
.001 w
0 .38694 m
.00375 .38694 L
s
P
p
.001 w
0 .40844 m
.00375 .40844 L
s
P
p
.001 w
0 .45143 m
.00375 .45143 L
s
P
p
.001 w
0 .47293 m
.00375 .47293 L
s
P
p
.001 w
0 .49443 m
.00375 .49443 L
s
P
p
.001 w
0 .51592 m
.00375 .51592 L
s
P
p
.001 w
0 .55892 m
.00375 .55892 L
s
P
p
.001 w
0 .58041 m
.00375 .58041 L
s
P
p
.001 w
0 .60191 m
.00375 .60191 L
s
P
p
.002 w
0 0 m
0 .61803 L
s
P
P
p
p
.002 w
.04545 .61178 m
.04545 .61803 L
s
P
p
.002 w
.22727 .61178 m
.22727 .61803 L
s
P
p
.002 w
.40909 .61178 m
.40909 .61803 L
s
P
p
.002 w
.59091 .61178 m
.59091 .61803 L
s
P
p
.002 w
.77273 .61178 m
.77273 .61803 L
s
P
p
.002 w
.95455 .61178 m
.95455 .61803 L
s
P
p
.001 w
.08182 .61428 m
.08182 .61803 L
s
P
p
.001 w
.11818 .61428 m
.11818 .61803 L
s
P
p
.001 w
.15455 .61428 m
.15455 .61803 L
s
P
p
.001 w
.19091 .61428 m
.19091 .61803 L
s
P
p
.001 w
.26364 .61428 m
.26364 .61803 L
s
P
p
.001 w
.3 .61428 m
.3 .61803 L
s
P
p
.001 w
.33636 .61428 m
.33636 .61803 L
s
P
p
.001 w
.37273 .61428 m
.37273 .61803 L
s
P
p
.001 w
.44545 .61428 m
.44545 .61803 L
s
P
p
.001 w
.48182 .61428 m
.48182 .61803 L
s
P
p
.001 w
.51818 .61428 m
.51818 .61803 L
s
P
p
.001 w
.55455 .61428 m
.55455 .61803 L
s
P
p
.001 w
.62727 .61428 m
.62727 .61803 L
s
P
p
.001 w
.66364 .61428 m
.66364 .61803 L
s
P
p
.001 w
.7 .61428 m
.7 .61803 L
s
P
p
.001 w
.73636 .61428 m
.73636 .61803 L
s
P
p
.001 w
.80909 .61428 m
.80909 .61803 L
s
P
p
.001 w
.84545 .61428 m
.84545 .61803 L
s
P
p
.001 w
.88182 .61428 m
.88182 .61803 L
s
P
p
.001 w
.91818 .61428 m
.91818 .61803 L
s
P
p
.001 w
.00909 .61428 m
.00909 .61803 L
s
P
p
.001 w
.99091 .61428 m
.99091 .61803 L
s
P
[(Epsilon = 0.1, 0.03, 0.001)] .5 .61803 0 -4 Mshowa
p
.002 w
0 .61803 m
1 .61803 L
s
P
p
.002 w
.99375 0 m
1 0 L
s
P
p
.002 w
.99375 .10748 m
1 .10748 L
s
P
p
.002 w
.99375 .21497 m
1 .21497 L
s
P
p
.002 w
.99375 .32245 m
1 .32245 L
s
P
p
.002 w
.99375 .42994 m
1 .42994 L
s
P
p
.002 w
.99375 .53742 m
1 .53742 L
s
P
p
.001 w
.99625 .0215 m
1 .0215 L
s
P
p
.001 w
.99625 .04299 m
1 .04299 L
s
P
p
.001 w
.99625 .06449 m
1 .06449 L
s
P
p
.001 w
.99625 .08599 m
1 .08599 L
s
P
p
.001 w
.99625 .12898 m
1 .12898 L
s
P
p
.001 w
.99625 .15048 m
1 .15048 L
s
P
p
.001 w
.99625 .17197 m
1 .17197 L
s
P
p
.001 w
.99625 .19347 m
1 .19347 L
s
P
p
.001 w
.99625 .23647 m
1 .23647 L
s
P
p
.001 w
.99625 .25796 m
1 .25796 L
s
P
p
.001 w
.99625 .27946 m
1 .27946 L
s
P
p
.001 w
.99625 .30096 m
1 .30096 L
s
P
p
.001 w
.99625 .34395 m
1 .34395 L
s
P
p
.001 w
.99625 .36545 m
1 .36545 L
s
P
p
.001 w
.99625 .38694 m
1 .38694 L
s
P
p
.001 w
.99625 .40844 m
1 .40844 L
s
P
p
.001 w
.99625 .45143 m
1 .45143 L
s
P
p
.001 w
.99625 .47293 m
1 .47293 L
s
P
p
.001 w
.99625 .49443 m
1 .49443 L
s
P
p
.001 w
.99625 .51592 m
1 .51592 L
s
P
p
.001 w
.99625 .55892 m
1 .55892 L
s
P
p
.001 w
.99625 .58041 m
1 .58041 L
s
P
p
.001 w
.99625 .60191 m
1 .60191 L
s
P
p
.002 w
1 0 m
1 .61803 L
s
P
P
p
P
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
p
p
p
.001 w
.04545 .32245 m
.06439 .28968 L
.08333 .26488 L
.10227 .24603 L
.12121 .23215 L
.14015 .22233 L
.14962 .21866 L
.15909 .21572 L
.16856 .21348 L
.17803 .21189 L
.18277 .21132 L
.1875 .21087 L
.19223 .21055 L
.1946 .21043 L
.19579 .21039 L
.19697 .21035 L
.19815 .21032 L
.19934 .21029 L
.20052 .21028 L
.2017 .21027 L
.20289 .21027 L
.20407 .21027 L
.20526 .21029 L
.20644 .21031 L
.20762 .21034 L
.20881 .21037 L
.21117 .21047 L
.21354 .21059 L
.21591 .21074 L
.22538 .21158 L
.23485 .21277 L
.24432 .21433 L
.25379 .21619 L
.27273 .22083 L
.31061 .23296 L
.34848 .24819 L
.38636 .26549 L
.42424 .28439 L
.46212 .30447 L
.5 .32525 L
.53788 .34662 L
.57576 .36837 L
.61364 .39028 L
.65152 .4124 L
.68939 .43468 L
.72727 .45697 L
.76515 .47925 L
.80303 .50165 L
.84091 .52401 L
.87879 .54638 L
Mistroke
.91667 .5688 L
.95455 .59116 L
Mfstroke
P
P
p
p
.001 w
.04545 .32245 m
.05492 .26514 L
.06439 .22469 L
.07386 .19572 L
.08333 .17499 L
.0928 .15996 L
.09754 .15414 L
.10227 .14935 L
.11174 .14219 L
.11648 .13961 L
.12121 .13768 L
.12595 .13621 L
.12831 .13565 L
.13068 .13518 L
.13305 .13483 L
.13423 .13469 L
.13542 .13457 L
.1366 .13449 L
.13778 .13442 L
.13897 .13438 L
.14015 .13435 L
.14134 .13434 L
.14252 .13436 L
.1437 .1344 L
.14489 .13446 L
.14725 .13463 L
.14962 .13484 L
.15199 .13511 L
.15436 .13545 L
.15909 .13634 L
.16856 .13867 L
.17803 .14167 L
.19697 .14917 L
.23485 .16785 L
.27273 .18885 L
.31061 .21071 L
.34848 .23299 L
.38636 .25527 L
.42424 .27767 L
.46212 .30006 L
.5 .32245 L
.53788 .34485 L
.57576 .36724 L
.61364 .38963 L
.65152 .41202 L
.68939 .43442 L
.72727 .45681 L
.76515 .4792 L
.80303 .50159 L
.84091 .52399 L
Mistroke
.87879 .54638 L
.91667 .56877 L
.95455 .59116 L
Mfstroke
P
P
p
p
.001 w
.04545 .32245 m
.04664 .16704 L
.04782 .10821 L
.04901 .08234 L
.05019 .06976 L
.05137 .06394 L
.05256 .06141 L
.05374 .0604 L
.05492 .06024 L
.05611 .06049 L
.05729 .06097 L
.05848 .06159 L
.05966 .06219 L
.06439 .06494 L
.08333 .07613 L
.12121 .09853 L
.15909 .12092 L
.19697 .14331 L
.23485 .1657 L
.27273 .1881 L
.31061 .21049 L
.34848 .23288 L
.38636 .25527 L
.42424 .27767 L
.46212 .30006 L
.5 .32245 L
.53788 .34485 L
.57576 .36724 L
.61364 .38963 L
.65152 .41202 L
.68939 .43442 L
.72727 .45681 L
.76515 .4792 L
.80303 .50159 L
.84091 .52399 L
.87879 .54638 L
.91667 .56877 L
.95455 .59116 L
s
P
P
P
% End of Graphics
MathPictureEnd
end
showpage
%%EndDocument
 @endspecial 587 1329 a(Figure)i(28:)j(T)m(est)d(Problem)f(28,)g
Fl(y)q Fm(\()p Fl(x)p Fm(\))i(v)o(ersus)g Fl(x)p eop
%%Page: 29 29
29 28 bop 262 307 a Fn(T)l(est)15 b(Problem)e(29)h Fm(\(Nonlinear\))g
(\(see)h(e.g.)j([4)o(,)13 b(pp.29-38])f(and)i([6)o(,)g(p.159]\))262
357 y Fl(\017y)300 342 y Fk(00)331 357 y Fm(+)9 b Fl(y)q(y)414
342 y Fk(0)437 357 y Fj(\000)g Fl(y)14 b Fm(=)d(0,)60
b Fl(y)q Fm(\(0\))12 b(=)g(0)p Fl(;)18 b(y)q Fm(\(1\))12
b(=)964 341 y Fi(3)p 964 348 17 2 v 964 371 a(2)985 357
y Fm(.)262 407 y(The)i(solution)f(has)h(a)g(b)q(oundary)f(la)o(y)o(er)h
(at)g Fl(x)d Fm(=)h(0.)439 1710 y @beginspecial 72 @llx
72 @lly 540 @urx 720 @ury 2834 @rwi @setspecial
%%BeginDocument: ../PLOTS/pr29.ps

/Mathdict 150 dict def
Mathdict begin
/Mlmarg		1.0 72 mul def
/Mrmarg		1.0 72 mul def
/Mbmarg		1.0 72 mul def
/Mtmarg		1.0 72 mul def
/Mwidth		8.5 72 mul def
/Mheight	11 72 mul def
/Mtransform	{  } bind def
/Mnodistort	true def
/Mfixwid	true	def
/Mfixdash	false def
/Mrot		0	def
/Mpstart {
MathPictureStart
} bind def
/Mpend {
MathPictureEnd
} bind def
/Mscale {
0 1 0 1
5 -1 roll
MathScale
} bind def
/ISOLatin1Encoding dup where
{ pop pop }
{
[
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft
/logicalnot /hyphen /registered /macron
/degree /plusminus /twosuperior /threesuperior
/acute /mu /paragraph /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright
/onequarter /onehalf /threequarters /questiondown
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis
] def
} ifelse
/MFontDict 50 dict def
/MStrCat
{
exch
dup length
2 index length add
string
dup 3 1 roll
copy
length
exch dup
4 2 roll exch
putinterval
} def
/MCreateEncoding
{
1 index
255 string cvs
(-) MStrCat
1 index MStrCat
cvn exch
(Encoding) MStrCat
cvn dup where
{
exch get
}
{
pop
StandardEncoding
} ifelse
3 1 roll
dup MFontDict exch known not
{
1 index findfont
dup length dict
begin
{1 index /FID ne
{def}
{pop pop}
ifelse} forall
/Encoding 3 index
def
currentdict
end
1 index exch definefont pop
MFontDict 1 index
null put
}
if
exch pop
exch pop
} def
/ISOLatin1 { (ISOLatin1) MCreateEncoding } def
/ISO8859 { (ISOLatin1) MCreateEncoding } def
/Mcopyfont {
dup
maxlength
dict
exch
{
1 index
/FID
eq
{
pop pop
}
{
2 index
3 1 roll
put
}
ifelse
}
forall
} def
/Plain	/Courier findfont Mcopyfont definefont pop
/Bold	/Courier-Bold findfont Mcopyfont definefont pop
/Italic /Courier-Oblique findfont Mcopyfont definefont pop
/MathPictureStart {
gsave
Mtransform
Mlmarg
Mbmarg
translate
Mwidth
Mlmarg Mrmarg add
sub
/Mwidth exch def
Mheight
Mbmarg Mtmarg add
sub
/Mheight exch def
/Mtmatrix
matrix currentmatrix
def
/Mgmatrix
matrix currentmatrix
def
} bind def
/MathPictureEnd {
grestore
} bind def
/MFill {
0 0 		moveto
Mwidth 0 	lineto
Mwidth Mheight 	lineto
0 Mheight 	lineto
fill
} bind def
/MPlotRegion {
3 index
Mwidth mul
2 index
Mheight mul
translate
exch sub
Mheight mul
/Mheight
exch def
exch sub
Mwidth mul
/Mwidth
exch def
} bind def
/MathSubStart {
Momatrix
Mgmatrix Mtmatrix
Mwidth Mheight
7 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
Mgmatrix setmatrix
9 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
2 copy translate
/Mtmatrix matrix currentmatrix def
3 -1 roll
exch sub
/Mheight exch def
sub
/Mwidth exch def
} bind def
/MathSubEnd {
/Mheight exch def
/Mwidth exch def
/Mtmatrix exch def
dup setmatrix
/Mgmatrix exch def
/Momatrix exch def
} bind def
/Mdot {
moveto
0 0 rlineto
stroke
} bind def
/Mtetra {
moveto
lineto
lineto
lineto
fill
} bind def
/Metetra {
moveto
lineto
lineto
lineto
closepath
gsave
fill
grestore
0 setgray
stroke
} bind def
/Mistroke {
flattenpath
0 0 0
{
4 2 roll
pop pop
}
{
4 -1 roll
2 index
sub dup mul
4 -1 roll
2 index
sub dup mul
add sqrt
4 -1 roll
add
3 1 roll
}
{
stop
}
{
stop
}
pathforall
pop pop
currentpoint
stroke
moveto
currentdash
3 -1 roll
add
setdash
} bind def
/Mfstroke {
stroke
currentdash
pop 0
setdash
} bind def
/Mrotsboxa {
gsave
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
grestore
Msboxa
3  -1 roll
/Mtmatrix
exch def
/Mrot
0 def
} bind def
/Msboxa {
newpath
5 -1 roll
Mvboxa
pop
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Msboxa1
5 -3 roll
Msboxa1
Mboxrot
[
7 -2 roll
2 copy
[
3 1 roll
10 -1 roll
9 -1 roll
]
6 1 roll
5 -2 roll
]
} bind def
/Msboxa1 {
sub
2 div
dup
2 index
1 add
mul
3 -1 roll
-1 add
3 -1 roll
mul
} bind def
/Mvboxa	{
Mfixwid
{
Mvboxa1
}
{
dup
Mwidthcal
0 exch
{
add
}
forall
exch
Mvboxa1
4 index
7 -1 roll
add
4 -1 roll
pop
3 1 roll
}
ifelse
} bind def
/Mvboxa1 {
gsave
newpath
[ true
3 -1 roll
{
Mbbox
5 -1 roll
{
0
5 1 roll
}
{
7 -1 roll
exch sub
(m) stringwidth pop
.3 mul
sub
7 1 roll
6 -1 roll
4 -1 roll
Mmin
3 -1 roll
5 index
add
5 -1 roll
4 -1 roll
Mmax
4 -1 roll
}
ifelse
false
}
forall
{ stop } if
counttomark
1 add
4 roll
]
grestore
} bind def
/Mbbox {
1 dict begin
0 0 moveto
/temp (T) def
{	gsave
currentpoint newpath moveto
temp 0 3 -1 roll put temp
false charpath flattenpath currentpoint
pathbbox
grestore moveto lineto moveto} forall
pathbbox
newpath
end
} bind def
/Mmin {
2 copy
gt
{ exch } if
pop
} bind def
/Mmax {
2 copy
lt
{ exch } if
pop
} bind def
/Mrotshowa {
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
Mgmatrix setmatrix
Mshowa
/Mtmatrix
exch def
/Mrot 0 def
} bind def
/Mshowa {
4 -2 roll
moveto
2 index
Mtmatrix setmatrix
Mvboxa
7 1 roll
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Mshowa1
4 1 roll
Mshowa1
rmoveto
currentpoint
Mfixwid
{
Mshowax
}
{
Mshoway
}
ifelse
pop pop pop pop
Mgmatrix setmatrix
} bind def
/Mshowax {	
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
Mfixdash
{
Mfixdashp		
}
if
show
} for
} bind def
/Mfixdashp {
dup
length
1
gt
1 index
true exch
{
45
eq
and
} forall
and
{
gsave
(--)		
stringwidth pop
(-)
stringwidth pop
sub
2 div
0 rmoveto
dup
length
1 sub
{
(-)
show
}
repeat
grestore
}
if
} bind def	
/Mshoway {
3 index
Mwidthcal
5 1 roll
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
[
6 index
aload
length
2 add
-1 roll
{
pop
Strform
stringwidth
pop
neg 
exch
add
0 rmoveto
}
exch
kshow
cleartomark
} for
pop	
} bind def
/Mwidthcal {
[
exch
{
Mwidthcal1
}
forall
]
[
exch
dup
Maxlen
-1 add
0 1
3 -1 roll
{
[
exch
2 index
{		 
1 index	
Mget
exch
}
forall		
pop
Maxget
exch
}
for
pop
]
Mreva
} bind def
/Mreva	{
[
exch
aload
length
-1 1
{1 roll}
for
]
} bind def
/Mget	{
1 index
length
-1 add
1 index
ge
{
get
}
{
pop pop
0
}
ifelse
} bind def
/Maxlen	{
[
exch
{
length
}
forall
Maxget
} bind def
/Maxget	{
counttomark
-1 add
1 1
3 -1 roll
{
pop
Mmax
}
for
exch
pop
} bind def
/Mwidthcal1 {
[
exch
{
Strform
stringwidth
pop
}
forall
]
} bind def
/Strform {
/tem (x) def
tem 0
3 -1 roll
put
tem
} bind def
/Mshowa1 {
2 copy
add
4 1 roll
sub
mul
sub
-2 div
} bind def
/MathScale {
Mwidth
Mheight
Mlp
translate
scale
/yscale exch def
/ybias exch def
/xscale exch def
/xbias exch def
/Momatrix
xscale yscale matrix scale
xbias ybias matrix translate
matrix concatmatrix def
/Mgmatrix
matrix currentmatrix
def
} bind def
/Mlp {
3 copy
Mlpfirst
{
Mnodistort
{
Mmin
dup
} if
4 index
2 index
2 index
Mlprun
11 index
11 -1 roll
10 -4 roll
Mlp1
8 index
9 -5 roll
Mlp1
4 -1 roll
and
{ exit } if
3 -1 roll
pop pop
} loop
exch
3 1 roll
7 -3 roll
pop pop pop
} bind def
/Mlpfirst {
3 -1 roll
dup length
2 copy
-2 add
get
aload
pop pop pop
4 -2 roll
-1 add
get
aload
pop pop pop
6 -1 roll
3 -1 roll
5 -1 roll
sub
div
4 1 roll
exch sub
div
} bind def
/Mlprun {
2 copy
4 index
0 get
dup
4 1 roll
Mlprun1
3 copy
8 -2 roll
9 -1 roll
{
3 copy
Mlprun1
3 copy
11 -3 roll
/gt Mlpminmax
8 3 roll
11 -3 roll
/lt Mlpminmax
8 3 roll
} forall
pop pop pop pop
3 1 roll
pop pop
aload pop
5 -1 roll
aload pop
exch
6 -1 roll
Mlprun2
8 2 roll
4 -1 roll
Mlprun2
6 2 roll
3 -1 roll
Mlprun2
4 2 roll
exch
Mlprun2
6 2 roll
} bind def
/Mlprun1 {
aload pop
exch
6 -1 roll
5 -1 roll
mul add
4 -2 roll
mul
3 -1 roll
add
} bind def
/Mlprun2 {
2 copy
add 2 div
3 1 roll
exch sub
} bind def
/Mlpminmax {
cvx
2 index
6 index
2 index
exec
{
7 -3 roll
4 -1 roll
} if
1 index
5 index
3 -1 roll
exec
{
4 1 roll
pop
5 -1 roll
aload
pop pop
4 -1 roll
aload pop
[
8 -2 roll
pop
5 -2 roll
pop
6 -2 roll
pop
5 -1 roll
]
4 1 roll
pop
}
{
pop pop pop
} ifelse
} bind def
/Mlp1 {
5 index
3 index	sub
5 index
2 index mul
1 index
le
1 index
0 le
or
dup
not
{
1 index
3 index	div
.99999 mul
8 -1 roll
pop
7 1 roll
}
if
8 -1 roll
2 div
7 -2 roll
pop sub
5 index
6 -3 roll
pop pop
mul sub
exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
outflag
1
eq
{
/outflag 0 def
/intop 0 def
/inrht 0 def
} if		
5 index
gsave
Mtmatrix setmatrix
Mvboxa pop
grestore
3 -1 roll
pop
dup
intop
gt
{
/intop
exch def
}
{ pop }
ifelse
dup
inrht
gt
{
/inrht
exch def
}
{ pop }
ifelse
pop
/inflag
1 def
} bind def
/Mouter {
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
inflag
1 eq
{
dup
0 lt
{
dup
intop
mul
neg
/yadtop
exch def
} if
dup
0 gt
{
dup
intop
mul
/yadbot
exch def
}
if
pop
dup
0 lt
{
dup
inrht
mul
neg
/xadrht
exch def
} if
dup
0 gt
{
dup
inrht
mul
/xadlft
exch def
} if
pop
/outflag 1 def
}
{ pop pop}
ifelse
/inflag 0 def
/inrht 0 def
/intop 0 def
} bind def	
/Mboxout {
outflag
1
eq
{
4 -1
roll
xadlft
leadjust
add
sub
4 1 roll
3 -1
roll
yadbot
leadjust
add
sub
3 1
roll
exch
xadrht
leadjust
add
add
exch
yadtop
leadjust
add
add
/outflag 0 def
/xadlft 0 def
/yadbot 0 def
/xadrht 0 def
/yadtop 0 def
} if
} bind def
/leadjust {
(m) stringwidth pop
.5 mul
} bind def
/Mrotcheck {
dup
90
eq
{
yadbot
/yadbot
xadrht
def	
/xadrht
yadtop
def
/yadtop
xadlft
def
/xadlft
exch
def
}
if
dup
cos
1 index
sin
Checkaux
dup
cos
1 index
sin neg
exch
Checkaux
3 1 roll
pop pop
} bind def
/Checkaux {
4 index
exch
4 index
mul
3 1 roll
mul add
4 1 roll
} bind def
/Mboxrot {
Mrot
90 eq
{
brotaux
4 2
roll
}
if
Mrot
180 eq
{
4 2
roll
brotaux
4 2
roll
brotaux
}	
if
Mrot
270 eq
{
4 2
roll
brotaux
}
if
} bind def
/brotaux {
neg
exch
neg
} bind def
/Mabsproc {
0
matrix defaultmatrix
dtransform idtransform
dup mul exch
dup mul
add sqrt
} bind def
/Mabswid {
Mabsproc
setlinewidth	
} bind def
/Mabsdash {
exch
[
exch
{
Mabsproc
}
forall
]
exch
setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop}
repeat
} bind def
} ifelse
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/setcmykcolor where
{ pop}
{ /setcmykcolor {
4 1
roll
[
4 1 
roll
]
{
1 index
sub
1
sub neg
dup
0
lt
{
pop
0
}
if
dup
1
gt
{
pop
1
}
if
exch
} forall
pop
setrgbcolor
} bind def
} ifelse
/Mcharproc
{
currentfile
(x)
readhexstring
pop
0 get
exch
div
} bind def
/Mshadeproc
{
dup
3 1
roll
{
dup
Mcharproc
3 1
roll
} repeat
1 eq
{
setgray
}
{
3 eq
{
setrgbcolor
}
{
setcmykcolor
} ifelse
} ifelse
} bind def
/Mrectproc
{
3 index
2 index
moveto
2 index
3 -1
roll
lineto
dup
3 1
roll
lineto
lineto
fill
} bind def
/Mcolorimage
{
7 1
roll
pop
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
9 index
Mshadeproc
Mrectproc
} for
pop
} for
pop pop pop pop
} bind def
/Mimage
{
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
Mcharproc
setgray
Mrectproc
} for
pop
} for
pop pop pop
} bind def

MathPictureStart
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0454545 0.909091 0.0193136 0.386271 [
[(0)] .04545 0 0 2 0 Minner Mrotsboxa
[(0.2)] .22727 0 0 2 0 Minner Mrotsboxa
[(0.4)] .40909 0 0 2 0 Minner Mrotsboxa
[(0.6)] .59091 0 0 2 0 Minner Mrotsboxa
[(0.8)] .77273 0 0 2 0 Minner Mrotsboxa
[(1)] .95455 0 0 2 0 Minner Mrotsboxa
[()] .5 0 0 2 0 0 -1 Mouter Mrotsboxa
[(0)] -0.0125 .01931 1 0 0 Minner Mrotsboxa
[(0.2)] -0.0125 .09657 1 0 0 Minner Mrotsboxa
[(0.4)] -0.0125 .17382 1 0 0 Minner Mrotsboxa
[(0.6)] -0.0125 .25108 1 0 0 Minner Mrotsboxa
[(0.8)] -0.0125 .32833 1 0 0 Minner Mrotsboxa
[(1)] -0.0125 .40558 1 0 0 Minner Mrotsboxa
[(1.2)] -0.0125 .48284 1 0 0 Minner Mrotsboxa
[(1.4)] -0.0125 .56009 1 0 0 Minner Mrotsboxa
[(Epsilon = 0.1, 0.02, 0.005)] .5 .61803 0 -4 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 .61903 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 g
p
p
.002 w
.04545 0 m
.04545 .00625 L
s
P
[(0)] .04545 0 0 2 0 Minner Mrotshowa
p
.002 w
.22727 0 m
.22727 .00625 L
s
P
[(0.2)] .22727 0 0 2 0 Minner Mrotshowa
p
.002 w
.40909 0 m
.40909 .00625 L
s
P
[(0.4)] .40909 0 0 2 0 Minner Mrotshowa
p
.002 w
.59091 0 m
.59091 .00625 L
s
P
[(0.6)] .59091 0 0 2 0 Minner Mrotshowa
p
.002 w
.77273 0 m
.77273 .00625 L
s
P
[(0.8)] .77273 0 0 2 0 Minner Mrotshowa
p
.002 w
.95455 0 m
.95455 .00625 L
s
P
[(1)] .95455 0 0 2 0 Minner Mrotshowa
p
.001 w
.08182 0 m
.08182 .00375 L
s
P
p
.001 w
.11818 0 m
.11818 .00375 L
s
P
p
.001 w
.15455 0 m
.15455 .00375 L
s
P
p
.001 w
.19091 0 m
.19091 .00375 L
s
P
p
.001 w
.26364 0 m
.26364 .00375 L
s
P
p
.001 w
.3 0 m
.3 .00375 L
s
P
p
.001 w
.33636 0 m
.33636 .00375 L
s
P
p
.001 w
.37273 0 m
.37273 .00375 L
s
P
p
.001 w
.44545 0 m
.44545 .00375 L
s
P
p
.001 w
.48182 0 m
.48182 .00375 L
s
P
p
.001 w
.51818 0 m
.51818 .00375 L
s
P
p
.001 w
.55455 0 m
.55455 .00375 L
s
P
p
.001 w
.62727 0 m
.62727 .00375 L
s
P
p
.001 w
.66364 0 m
.66364 .00375 L
s
P
p
.001 w
.7 0 m
.7 .00375 L
s
P
p
.001 w
.73636 0 m
.73636 .00375 L
s
P
p
.001 w
.80909 0 m
.80909 .00375 L
s
P
p
.001 w
.84545 0 m
.84545 .00375 L
s
P
p
.001 w
.88182 0 m
.88182 .00375 L
s
P
p
.001 w
.91818 0 m
.91818 .00375 L
s
P
p
.001 w
.00909 0 m
.00909 .00375 L
s
P
p
.001 w
.99091 0 m
.99091 .00375 L
s
P
[()] .5 0 0 2 0 0 -1 Mouter Mrotshowa
p
.002 w
0 0 m
1 0 L
s
P
p
.002 w
0 .01931 m
.00625 .01931 L
s
P
[(0)] -0.0125 .01931 1 0 0 Minner Mrotshowa
p
.002 w
0 .09657 m
.00625 .09657 L
s
P
[(0.2)] -0.0125 .09657 1 0 0 Minner Mrotshowa
p
.002 w
0 .17382 m
.00625 .17382 L
s
P
[(0.4)] -0.0125 .17382 1 0 0 Minner Mrotshowa
p
.002 w
0 .25108 m
.00625 .25108 L
s
P
[(0.6)] -0.0125 .25108 1 0 0 Minner Mrotshowa
p
.002 w
0 .32833 m
.00625 .32833 L
s
P
[(0.8)] -0.0125 .32833 1 0 0 Minner Mrotshowa
p
.002 w
0 .40558 m
.00625 .40558 L
s
P
[(1)] -0.0125 .40558 1 0 0 Minner Mrotshowa
p
.002 w
0 .48284 m
.00625 .48284 L
s
P
[(1.2)] -0.0125 .48284 1 0 0 Minner Mrotshowa
p
.002 w
0 .56009 m
.00625 .56009 L
s
P
[(1.4)] -0.0125 .56009 1 0 0 Minner Mrotshowa
p
.001 w
0 .03476 m
.00375 .03476 L
s
P
p
.001 w
0 .05022 m
.00375 .05022 L
s
P
p
.001 w
0 .06567 m
.00375 .06567 L
s
P
p
.001 w
0 .08112 m
.00375 .08112 L
s
P
p
.001 w
0 .11202 m
.00375 .11202 L
s
P
p
.001 w
0 .12747 m
.00375 .12747 L
s
P
p
.001 w
0 .14292 m
.00375 .14292 L
s
P
p
.001 w
0 .15837 m
.00375 .15837 L
s
P
p
.001 w
0 .18927 m
.00375 .18927 L
s
P
p
.001 w
0 .20472 m
.00375 .20472 L
s
P
p
.001 w
0 .22017 m
.00375 .22017 L
s
P
p
.001 w
0 .23563 m
.00375 .23563 L
s
P
p
.001 w
0 .26653 m
.00375 .26653 L
s
P
p
.001 w
0 .28198 m
.00375 .28198 L
s
P
p
.001 w
0 .29743 m
.00375 .29743 L
s
P
p
.001 w
0 .31288 m
.00375 .31288 L
s
P
p
.001 w
0 .34378 m
.00375 .34378 L
s
P
p
.001 w
0 .35923 m
.00375 .35923 L
s
P
p
.001 w
0 .37468 m
.00375 .37468 L
s
P
p
.001 w
0 .39013 m
.00375 .39013 L
s
P
p
.001 w
0 .42104 m
.00375 .42104 L
s
P
p
.001 w
0 .43649 m
.00375 .43649 L
s
P
p
.001 w
0 .45194 m
.00375 .45194 L
s
P
p
.001 w
0 .46739 m
.00375 .46739 L
s
P
p
.001 w
0 .49829 m
.00375 .49829 L
s
P
p
.001 w
0 .51374 m
.00375 .51374 L
s
P
p
.001 w
0 .52919 m
.00375 .52919 L
s
P
p
.001 w
0 .54464 m
.00375 .54464 L
s
P
p
.001 w
0 .00386 m
.00375 .00386 L
s
P
p
.001 w
0 .57554 m
.00375 .57554 L
s
P
p
.001 w
0 .591 m
.00375 .591 L
s
P
p
.001 w
0 .60645 m
.00375 .60645 L
s
P
p
.002 w
0 0 m
0 .61803 L
s
P
P
p
p
.002 w
.04545 .61178 m
.04545 .61803 L
s
P
p
.002 w
.22727 .61178 m
.22727 .61803 L
s
P
p
.002 w
.40909 .61178 m
.40909 .61803 L
s
P
p
.002 w
.59091 .61178 m
.59091 .61803 L
s
P
p
.002 w
.77273 .61178 m
.77273 .61803 L
s
P
p
.002 w
.95455 .61178 m
.95455 .61803 L
s
P
p
.001 w
.08182 .61428 m
.08182 .61803 L
s
P
p
.001 w
.11818 .61428 m
.11818 .61803 L
s
P
p
.001 w
.15455 .61428 m
.15455 .61803 L
s
P
p
.001 w
.19091 .61428 m
.19091 .61803 L
s
P
p
.001 w
.26364 .61428 m
.26364 .61803 L
s
P
p
.001 w
.3 .61428 m
.3 .61803 L
s
P
p
.001 w
.33636 .61428 m
.33636 .61803 L
s
P
p
.001 w
.37273 .61428 m
.37273 .61803 L
s
P
p
.001 w
.44545 .61428 m
.44545 .61803 L
s
P
p
.001 w
.48182 .61428 m
.48182 .61803 L
s
P
p
.001 w
.51818 .61428 m
.51818 .61803 L
s
P
p
.001 w
.55455 .61428 m
.55455 .61803 L
s
P
p
.001 w
.62727 .61428 m
.62727 .61803 L
s
P
p
.001 w
.66364 .61428 m
.66364 .61803 L
s
P
p
.001 w
.7 .61428 m
.7 .61803 L
s
P
p
.001 w
.73636 .61428 m
.73636 .61803 L
s
P
p
.001 w
.80909 .61428 m
.80909 .61803 L
s
P
p
.001 w
.84545 .61428 m
.84545 .61803 L
s
P
p
.001 w
.88182 .61428 m
.88182 .61803 L
s
P
p
.001 w
.91818 .61428 m
.91818 .61803 L
s
P
p
.001 w
.00909 .61428 m
.00909 .61803 L
s
P
p
.001 w
.99091 .61428 m
.99091 .61803 L
s
P
[(Epsilon = 0.1, 0.02, 0.005)] .5 .61803 0 -4 Mshowa
p
.002 w
0 .61803 m
1 .61803 L
s
P
p
.002 w
.99375 .01931 m
1 .01931 L
s
P
p
.002 w
.99375 .09657 m
1 .09657 L
s
P
p
.002 w
.99375 .17382 m
1 .17382 L
s
P
p
.002 w
.99375 .25108 m
1 .25108 L
s
P
p
.002 w
.99375 .32833 m
1 .32833 L
s
P
p
.002 w
.99375 .40558 m
1 .40558 L
s
P
p
.002 w
.99375 .48284 m
1 .48284 L
s
P
p
.002 w
.99375 .56009 m
1 .56009 L
s
P
p
.001 w
.99625 .03476 m
1 .03476 L
s
P
p
.001 w
.99625 .05022 m
1 .05022 L
s
P
p
.001 w
.99625 .06567 m
1 .06567 L
s
P
p
.001 w
.99625 .08112 m
1 .08112 L
s
P
p
.001 w
.99625 .11202 m
1 .11202 L
s
P
p
.001 w
.99625 .12747 m
1 .12747 L
s
P
p
.001 w
.99625 .14292 m
1 .14292 L
s
P
p
.001 w
.99625 .15837 m
1 .15837 L
s
P
p
.001 w
.99625 .18927 m
1 .18927 L
s
P
p
.001 w
.99625 .20472 m
1 .20472 L
s
P
p
.001 w
.99625 .22017 m
1 .22017 L
s
P
p
.001 w
.99625 .23563 m
1 .23563 L
s
P
p
.001 w
.99625 .26653 m
1 .26653 L
s
P
p
.001 w
.99625 .28198 m
1 .28198 L
s
P
p
.001 w
.99625 .29743 m
1 .29743 L
s
P
p
.001 w
.99625 .31288 m
1 .31288 L
s
P
p
.001 w
.99625 .34378 m
1 .34378 L
s
P
p
.001 w
.99625 .35923 m
1 .35923 L
s
P
p
.001 w
.99625 .37468 m
1 .37468 L
s
P
p
.001 w
.99625 .39013 m
1 .39013 L
s
P
p
.001 w
.99625 .42104 m
1 .42104 L
s
P
p
.001 w
.99625 .43649 m
1 .43649 L
s
P
p
.001 w
.99625 .45194 m
1 .45194 L
s
P
p
.001 w
.99625 .46739 m
1 .46739 L
s
P
p
.001 w
.99625 .49829 m
1 .49829 L
s
P
p
.001 w
.99625 .51374 m
1 .51374 L
s
P
p
.001 w
.99625 .52919 m
1 .52919 L
s
P
p
.001 w
.99625 .54464 m
1 .54464 L
s
P
p
.001 w
.99625 .00386 m
1 .00386 L
s
P
p
.001 w
.99625 .57554 m
1 .57554 L
s
P
p
.001 w
.99625 .591 m
1 .591 L
s
P
p
.001 w
.99625 .60645 m
1 .60645 L
s
P
p
.002 w
1 0 m
1 .61803 L
s
P
P
p
P
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
p
p
p
.001 w
.04545 .01931 m
.08333 .06818 L
.12121 .11549 L
.15909 .15965 L
.19697 .19986 L
.23485 .23592 L
.27273 .26776 L
.31061 .29594 L
.34848 .32105 L
.38636 .34359 L
.42424 .36428 L
.46212 .38354 L
.5 .40176 L
.53788 .41925 L
.57576 .43627 L
.61364 .45294 L
.65152 .46938 L
.68939 .48575 L
.72727 .50196 L
.76515 .51813 L
.80303 .5343 L
.84091 .5504 L
.87879 .56649 L
.91667 .58263 L
.95455 .59872 L
s
P
P
p
p
.001 w
.04545 .01931 m
.06439 .08523 L
.08333 .14172 L
.10227 .18502 L
.11174 .20177 L
.12121 .21573 L
.14015 .2371 L
.15909 .25266 L
.19697 .27482 L
.23485 .2925 L
.27273 .30894 L
.31061 .32507 L
.34848 .34121 L
.38636 .3573 L
.42424 .3734 L
.46212 .38949 L
.5 .40558 L
.53788 .42168 L
.57576 .43777 L
.61364 .45387 L
.65152 .46996 L
.68939 .48606 L
.72727 .50215 L
.76515 .51825 L
.80303 .53434 L
.84091 .55044 L
.87879 .56653 L
.91667 .58263 L
.95455 .59872 L
s
P
P
p
p
.001 w
.04545 .01931 m
.05019 .07305 L
.05492 .11995 L
.05966 .15605 L
.06203 .17017 L
.06439 .18222 L
.06913 .19953 L
.0715 .20586 L
.07386 .21109 L
.0786 .2188 L
.08097 .22169 L
.08333 .22412 L
.0928 .23117 L
.10227 .23617 L
.12121 .2446 L
.15909 .26073 L
.19697 .27683 L
.23485 .29292 L
.27273 .30902 L
.31061 .32511 L
.34848 .34121 L
.38636 .3573 L
.42424 .3734 L
.46212 .38949 L
.5 .40558 L
.53788 .42168 L
.57576 .43777 L
.61364 .45387 L
.65152 .46996 L
.68939 .48606 L
.72727 .50215 L
.76515 .51825 L
.80303 .53434 L
.84091 .55044 L
.87879 .56653 L
.91667 .58263 L
.95455 .59872 L
s
P
P
P
% End of Graphics
MathPictureEnd
end
showpage
%%EndDocument
 @endspecial 587 1329 a(Figure)i(29:)j(T)m(est)d(Problem)f(29,)g
Fl(y)q Fm(\()p Fl(x)p Fm(\))i(v)o(ersus)g Fl(x)p eop
%%Page: 30 30
30 29 bop 262 307 a Fn(T)l(est)15 b(Problem)e(30)h Fm(\(Nonlinear\))g
(\(see)h(e.g.)j([4)o(,)13 b(pp.29-38])f(and)i([6)o(,)g(p.159]\))262
357 y Fl(\017y)300 342 y Fk(00)331 357 y Fm(+)9 b Fl(y)q(y)414
342 y Fk(0)437 357 y Fj(\000)g Fl(y)14 b Fm(=)d(0,)60
b Fl(y)q Fm(\(0\))12 b(=)g Fj(\000)815 341 y Fi(7)p 815
348 17 2 v 815 371 a(6)837 357 y Fl(;)18 b(y)q Fm(\(1\))12
b(=)1002 341 y Fi(3)p 1002 348 V 1002 371 a(2)1023 357
y Fm(.)262 407 y(The)i(solution)f(has)h(a)g(sho)q(c)o(k)g(la)o(y)o(er)f
(at)h Fl(x)d Fm(=)962 390 y Fi(1)p 962 397 V 962 421
a(3)984 407 y Fm(.)439 1717 y @beginspecial 72 @llx 72
@lly 540 @urx 720 @ury 2834 @rwi @setspecial
%%BeginDocument: ../PLOTS/pr30.ps

/Mathdict 150 dict def
Mathdict begin
/Mlmarg		1.0 72 mul def
/Mrmarg		1.0 72 mul def
/Mbmarg		1.0 72 mul def
/Mtmarg		1.0 72 mul def
/Mwidth		8.5 72 mul def
/Mheight	11 72 mul def
/Mtransform	{  } bind def
/Mnodistort	true def
/Mfixwid	true	def
/Mfixdash	false def
/Mrot		0	def
/Mpstart {
MathPictureStart
} bind def
/Mpend {
MathPictureEnd
} bind def
/Mscale {
0 1 0 1
5 -1 roll
MathScale
} bind def
/ISOLatin1Encoding dup where
{ pop pop }
{
[
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft
/logicalnot /hyphen /registered /macron
/degree /plusminus /twosuperior /threesuperior
/acute /mu /paragraph /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright
/onequarter /onehalf /threequarters /questiondown
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis
] def
} ifelse
/MFontDict 50 dict def
/MStrCat
{
exch
dup length
2 index length add
string
dup 3 1 roll
copy
length
exch dup
4 2 roll exch
putinterval
} def
/MCreateEncoding
{
1 index
255 string cvs
(-) MStrCat
1 index MStrCat
cvn exch
(Encoding) MStrCat
cvn dup where
{
exch get
}
{
pop
StandardEncoding
} ifelse
3 1 roll
dup MFontDict exch known not
{
1 index findfont
dup length dict
begin
{1 index /FID ne
{def}
{pop pop}
ifelse} forall
/Encoding 3 index
def
currentdict
end
1 index exch definefont pop
MFontDict 1 index
null put
}
if
exch pop
exch pop
} def
/ISOLatin1 { (ISOLatin1) MCreateEncoding } def
/ISO8859 { (ISOLatin1) MCreateEncoding } def
/Mcopyfont {
dup
maxlength
dict
exch
{
1 index
/FID
eq
{
pop pop
}
{
2 index
3 1 roll
put
}
ifelse
}
forall
} def
/Plain	/Courier findfont Mcopyfont definefont pop
/Bold	/Courier-Bold findfont Mcopyfont definefont pop
/Italic /Courier-Oblique findfont Mcopyfont definefont pop
/MathPictureStart {
gsave
Mtransform
Mlmarg
Mbmarg
translate
Mwidth
Mlmarg Mrmarg add
sub
/Mwidth exch def
Mheight
Mbmarg Mtmarg add
sub
/Mheight exch def
/Mtmatrix
matrix currentmatrix
def
/Mgmatrix
matrix currentmatrix
def
} bind def
/MathPictureEnd {
grestore
} bind def
/MFill {
0 0 		moveto
Mwidth 0 	lineto
Mwidth Mheight 	lineto
0 Mheight 	lineto
fill
} bind def
/MPlotRegion {
3 index
Mwidth mul
2 index
Mheight mul
translate
exch sub
Mheight mul
/Mheight
exch def
exch sub
Mwidth mul
/Mwidth
exch def
} bind def
/MathSubStart {
Momatrix
Mgmatrix Mtmatrix
Mwidth Mheight
7 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
Mgmatrix setmatrix
9 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
2 copy translate
/Mtmatrix matrix currentmatrix def
3 -1 roll
exch sub
/Mheight exch def
sub
/Mwidth exch def
} bind def
/MathSubEnd {
/Mheight exch def
/Mwidth exch def
/Mtmatrix exch def
dup setmatrix
/Mgmatrix exch def
/Momatrix exch def
} bind def
/Mdot {
moveto
0 0 rlineto
stroke
} bind def
/Mtetra {
moveto
lineto
lineto
lineto
fill
} bind def
/Metetra {
moveto
lineto
lineto
lineto
closepath
gsave
fill
grestore
0 setgray
stroke
} bind def
/Mistroke {
flattenpath
0 0 0
{
4 2 roll
pop pop
}
{
4 -1 roll
2 index
sub dup mul
4 -1 roll
2 index
sub dup mul
add sqrt
4 -1 roll
add
3 1 roll
}
{
stop
}
{
stop
}
pathforall
pop pop
currentpoint
stroke
moveto
currentdash
3 -1 roll
add
setdash
} bind def
/Mfstroke {
stroke
currentdash
pop 0
setdash
} bind def
/Mrotsboxa {
gsave
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
grestore
Msboxa
3  -1 roll
/Mtmatrix
exch def
/Mrot
0 def
} bind def
/Msboxa {
newpath
5 -1 roll
Mvboxa
pop
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Msboxa1
5 -3 roll
Msboxa1
Mboxrot
[
7 -2 roll
2 copy
[
3 1 roll
10 -1 roll
9 -1 roll
]
6 1 roll
5 -2 roll
]
} bind def
/Msboxa1 {
sub
2 div
dup
2 index
1 add
mul
3 -1 roll
-1 add
3 -1 roll
mul
} bind def
/Mvboxa	{
Mfixwid
{
Mvboxa1
}
{
dup
Mwidthcal
0 exch
{
add
}
forall
exch
Mvboxa1
4 index
7 -1 roll
add
4 -1 roll
pop
3 1 roll
}
ifelse
} bind def
/Mvboxa1 {
gsave
newpath
[ true
3 -1 roll
{
Mbbox
5 -1 roll
{
0
5 1 roll
}
{
7 -1 roll
exch sub
(m) stringwidth pop
.3 mul
sub
7 1 roll
6 -1 roll
4 -1 roll
Mmin
3 -1 roll
5 index
add
5 -1 roll
4 -1 roll
Mmax
4 -1 roll
}
ifelse
false
}
forall
{ stop } if
counttomark
1 add
4 roll
]
grestore
} bind def
/Mbbox {
1 dict begin
0 0 moveto
/temp (T) def
{	gsave
currentpoint newpath moveto
temp 0 3 -1 roll put temp
false charpath flattenpath currentpoint
pathbbox
grestore moveto lineto moveto} forall
pathbbox
newpath
end
} bind def
/Mmin {
2 copy
gt
{ exch } if
pop
} bind def
/Mmax {
2 copy
lt
{ exch } if
pop
} bind def
/Mrotshowa {
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
Mgmatrix setmatrix
Mshowa
/Mtmatrix
exch def
/Mrot 0 def
} bind def
/Mshowa {
4 -2 roll
moveto
2 index
Mtmatrix setmatrix
Mvboxa
7 1 roll
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Mshowa1
4 1 roll
Mshowa1
rmoveto
currentpoint
Mfixwid
{
Mshowax
}
{
Mshoway
}
ifelse
pop pop pop pop
Mgmatrix setmatrix
} bind def
/Mshowax {	
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
Mfixdash
{
Mfixdashp		
}
if
show
} for
} bind def
/Mfixdashp {
dup
length
1
gt
1 index
true exch
{
45
eq
and
} forall
and
{
gsave
(--)		
stringwidth pop
(-)
stringwidth pop
sub
2 div
0 rmoveto
dup
length
1 sub
{
(-)
show
}
repeat
grestore
}
if
} bind def	
/Mshoway {
3 index
Mwidthcal
5 1 roll
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
[
6 index
aload
length
2 add
-1 roll
{
pop
Strform
stringwidth
pop
neg 
exch
add
0 rmoveto
}
exch
kshow
cleartomark
} for
pop	
} bind def
/Mwidthcal {
[
exch
{
Mwidthcal1
}
forall
]
[
exch
dup
Maxlen
-1 add
0 1
3 -1 roll
{
[
exch
2 index
{		 
1 index	
Mget
exch
}
forall		
pop
Maxget
exch
}
for
pop
]
Mreva
} bind def
/Mreva	{
[
exch
aload
length
-1 1
{1 roll}
for
]
} bind def
/Mget	{
1 index
length
-1 add
1 index
ge
{
get
}
{
pop pop
0
}
ifelse
} bind def
/Maxlen	{
[
exch
{
length
}
forall
Maxget
} bind def
/Maxget	{
counttomark
-1 add
1 1
3 -1 roll
{
pop
Mmax
}
for
exch
pop
} bind def
/Mwidthcal1 {
[
exch
{
Strform
stringwidth
pop
}
forall
]
} bind def
/Strform {
/tem (x) def
tem 0
3 -1 roll
put
tem
} bind def
/Mshowa1 {
2 copy
add
4 1 roll
sub
mul
sub
-2 div
} bind def
/MathScale {
Mwidth
Mheight
Mlp
translate
scale
/yscale exch def
/ybias exch def
/xscale exch def
/xbias exch def
/Momatrix
xscale yscale matrix scale
xbias ybias matrix translate
matrix concatmatrix def
/Mgmatrix
matrix currentmatrix
def
} bind def
/Mlp {
3 copy
Mlpfirst
{
Mnodistort
{
Mmin
dup
} if
4 index
2 index
2 index
Mlprun
11 index
11 -1 roll
10 -4 roll
Mlp1
8 index
9 -5 roll
Mlp1
4 -1 roll
and
{ exit } if
3 -1 roll
pop pop
} loop
exch
3 1 roll
7 -3 roll
pop pop pop
} bind def
/Mlpfirst {
3 -1 roll
dup length
2 copy
-2 add
get
aload
pop pop pop
4 -2 roll
-1 add
get
aload
pop pop pop
6 -1 roll
3 -1 roll
5 -1 roll
sub
div
4 1 roll
exch sub
div
} bind def
/Mlprun {
2 copy
4 index
0 get
dup
4 1 roll
Mlprun1
3 copy
8 -2 roll
9 -1 roll
{
3 copy
Mlprun1
3 copy
11 -3 roll
/gt Mlpminmax
8 3 roll
11 -3 roll
/lt Mlpminmax
8 3 roll
} forall
pop pop pop pop
3 1 roll
pop pop
aload pop
5 -1 roll
aload pop
exch
6 -1 roll
Mlprun2
8 2 roll
4 -1 roll
Mlprun2
6 2 roll
3 -1 roll
Mlprun2
4 2 roll
exch
Mlprun2
6 2 roll
} bind def
/Mlprun1 {
aload pop
exch
6 -1 roll
5 -1 roll
mul add
4 -2 roll
mul
3 -1 roll
add
} bind def
/Mlprun2 {
2 copy
add 2 div
3 1 roll
exch sub
} bind def
/Mlpminmax {
cvx
2 index
6 index
2 index
exec
{
7 -3 roll
4 -1 roll
} if
1 index
5 index
3 -1 roll
exec
{
4 1 roll
pop
5 -1 roll
aload
pop pop
4 -1 roll
aload pop
[
8 -2 roll
pop
5 -2 roll
pop
6 -2 roll
pop
5 -1 roll
]
4 1 roll
pop
}
{
pop pop pop
} ifelse
} bind def
/Mlp1 {
5 index
3 index	sub
5 index
2 index mul
1 index
le
1 index
0 le
or
dup
not
{
1 index
3 index	div
.99999 mul
8 -1 roll
pop
7 1 roll
}
if
8 -1 roll
2 div
7 -2 roll
pop sub
5 index
6 -3 roll
pop pop
mul sub
exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
outflag
1
eq
{
/outflag 0 def
/intop 0 def
/inrht 0 def
} if		
5 index
gsave
Mtmatrix setmatrix
Mvboxa pop
grestore
3 -1 roll
pop
dup
intop
gt
{
/intop
exch def
}
{ pop }
ifelse
dup
inrht
gt
{
/inrht
exch def
}
{ pop }
ifelse
pop
/inflag
1 def
} bind def
/Mouter {
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
inflag
1 eq
{
dup
0 lt
{
dup
intop
mul
neg
/yadtop
exch def
} if
dup
0 gt
{
dup
intop
mul
/yadbot
exch def
}
if
pop
dup
0 lt
{
dup
inrht
mul
neg
/xadrht
exch def
} if
dup
0 gt
{
dup
inrht
mul
/xadlft
exch def
} if
pop
/outflag 1 def
}
{ pop pop}
ifelse
/inflag 0 def
/inrht 0 def
/intop 0 def
} bind def	
/Mboxout {
outflag
1
eq
{
4 -1
roll
xadlft
leadjust
add
sub
4 1 roll
3 -1
roll
yadbot
leadjust
add
sub
3 1
roll
exch
xadrht
leadjust
add
add
exch
yadtop
leadjust
add
add
/outflag 0 def
/xadlft 0 def
/yadbot 0 def
/xadrht 0 def
/yadtop 0 def
} if
} bind def
/leadjust {
(m) stringwidth pop
.5 mul
} bind def
/Mrotcheck {
dup
90
eq
{
yadbot
/yadbot
xadrht
def	
/xadrht
yadtop
def
/yadtop
xadlft
def
/xadlft
exch
def
}
if
dup
cos
1 index
sin
Checkaux
dup
cos
1 index
sin neg
exch
Checkaux
3 1 roll
pop pop
} bind def
/Checkaux {
4 index
exch
4 index
mul
3 1 roll
mul add
4 1 roll
} bind def
/Mboxrot {
Mrot
90 eq
{
brotaux
4 2
roll
}
if
Mrot
180 eq
{
4 2
roll
brotaux
4 2
roll
brotaux
}	
if
Mrot
270 eq
{
4 2
roll
brotaux
}
if
} bind def
/brotaux {
neg
exch
neg
} bind def
/Mabsproc {
0
matrix defaultmatrix
dtransform idtransform
dup mul exch
dup mul
add sqrt
} bind def
/Mabswid {
Mabsproc
setlinewidth	
} bind def
/Mabsdash {
exch
[
exch
{
Mabsproc
}
forall
]
exch
setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop}
repeat
} bind def
} ifelse
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/setcmykcolor where
{ pop}
{ /setcmykcolor {
4 1
roll
[
4 1 
roll
]
{
1 index
sub
1
sub neg
dup
0
lt
{
pop
0
}
if
dup
1
gt
{
pop
1
}
if
exch
} forall
pop
setrgbcolor
} bind def
} ifelse
/Mcharproc
{
currentfile
(x)
readhexstring
pop
0 get
exch
div
} bind def
/Mshadeproc
{
dup
3 1
roll
{
dup
Mcharproc
3 1
roll
} repeat
1 eq
{
setgray
}
{
3 eq
{
setrgbcolor
}
{
setcmykcolor
} ifelse
} ifelse
} bind def
/Mrectproc
{
3 index
2 index
moveto
2 index
3 -1
roll
lineto
dup
3 1
roll
lineto
lineto
fill
} bind def
/Mcolorimage
{
7 1
roll
pop
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
9 index
Mshadeproc
Mrectproc
} for
pop
} for
pop pop pop pop
} bind def
/Mimage
{
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
Mcharproc
setgray
Mrectproc
} for
pop
} for
pop pop pop
} bind def

MathPictureStart
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0454545 0.909091 0.27705 0.213115 [
[(0)] .04545 0 0 2 0 Minner Mrotsboxa
[(0.2)] .22727 0 0 2 0 Minner Mrotsboxa
[(0.4)] .40909 0 0 2 0 Minner Mrotsboxa
[(0.6)] .59091 0 0 2 0 Minner Mrotsboxa
[(0.8)] .77273 0 0 2 0 Minner Mrotsboxa
[(1)] .95455 0 0 2 0 Minner Mrotsboxa
[()] .5 0 0 2 0 0 -1 Mouter Mrotsboxa
[(-1)] -0.0125 .06393 1 0 0 Minner Mrotsboxa
[(-0.5)] -0.0125 .17049 1 0 0 Minner Mrotsboxa
[(0)] -0.0125 .27705 1 0 0 Minner Mrotsboxa
[(0.5)] -0.0125 .38361 1 0 0 Minner Mrotsboxa
[(1)] -0.0125 .49016 1 0 0 Minner Mrotsboxa
[(1.5)] -0.0125 .59672 1 0 0 Minner Mrotsboxa
[(Epsilon = 0.1, 0.02, 0.005)] .5 .61803 0 -4 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 .61903 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 g
p
p
.002 w
.04545 0 m
.04545 .00625 L
s
P
[(0)] .04545 0 0 2 0 Minner Mrotshowa
p
.002 w
.22727 0 m
.22727 .00625 L
s
P
[(0.2)] .22727 0 0 2 0 Minner Mrotshowa
p
.002 w
.40909 0 m
.40909 .00625 L
s
P
[(0.4)] .40909 0 0 2 0 Minner Mrotshowa
p
.002 w
.59091 0 m
.59091 .00625 L
s
P
[(0.6)] .59091 0 0 2 0 Minner Mrotshowa
p
.002 w
.77273 0 m
.77273 .00625 L
s
P
[(0.8)] .77273 0 0 2 0 Minner Mrotshowa
p
.002 w
.95455 0 m
.95455 .00625 L
s
P
[(1)] .95455 0 0 2 0 Minner Mrotshowa
p
.001 w
.08182 0 m
.08182 .00375 L
s
P
p
.001 w
.11818 0 m
.11818 .00375 L
s
P
p
.001 w
.15455 0 m
.15455 .00375 L
s
P
p
.001 w
.19091 0 m
.19091 .00375 L
s
P
p
.001 w
.26364 0 m
.26364 .00375 L
s
P
p
.001 w
.3 0 m
.3 .00375 L
s
P
p
.001 w
.33636 0 m
.33636 .00375 L
s
P
p
.001 w
.37273 0 m
.37273 .00375 L
s
P
p
.001 w
.44545 0 m
.44545 .00375 L
s
P
p
.001 w
.48182 0 m
.48182 .00375 L
s
P
p
.001 w
.51818 0 m
.51818 .00375 L
s
P
p
.001 w
.55455 0 m
.55455 .00375 L
s
P
p
.001 w
.62727 0 m
.62727 .00375 L
s
P
p
.001 w
.66364 0 m
.66364 .00375 L
s
P
p
.001 w
.7 0 m
.7 .00375 L
s
P
p
.001 w
.73636 0 m
.73636 .00375 L
s
P
p
.001 w
.80909 0 m
.80909 .00375 L
s
P
p
.001 w
.84545 0 m
.84545 .00375 L
s
P
p
.001 w
.88182 0 m
.88182 .00375 L
s
P
p
.001 w
.91818 0 m
.91818 .00375 L
s
P
p
.001 w
.00909 0 m
.00909 .00375 L
s
P
p
.001 w
.99091 0 m
.99091 .00375 L
s
P
[()] .5 0 0 2 0 0 -1 Mouter Mrotshowa
p
.002 w
0 0 m
1 0 L
s
P
p
.002 w
0 .06393 m
.00625 .06393 L
s
P
[(-1)] -0.0125 .06393 1 0 0 Minner Mrotshowa
p
.002 w
0 .17049 m
.00625 .17049 L
s
P
[(-0.5)] -0.0125 .17049 1 0 0 Minner Mrotshowa
p
.002 w
0 .27705 m
.00625 .27705 L
s
P
[(0)] -0.0125 .27705 1 0 0 Minner Mrotshowa
p
.002 w
0 .38361 m
.00625 .38361 L
s
P
[(0.5)] -0.0125 .38361 1 0 0 Minner Mrotshowa
p
.002 w
0 .49016 m
.00625 .49016 L
s
P
[(1)] -0.0125 .49016 1 0 0 Minner Mrotshowa
p
.002 w
0 .59672 m
.00625 .59672 L
s
P
[(1.5)] -0.0125 .59672 1 0 0 Minner Mrotshowa
p
.001 w
0 .08525 m
.00375 .08525 L
s
P
p
.001 w
0 .10656 m
.00375 .10656 L
s
P
p
.001 w
0 .12787 m
.00375 .12787 L
s
P
p
.001 w
0 .14918 m
.00375 .14918 L
s
P
p
.001 w
0 .1918 m
.00375 .1918 L
s
P
p
.001 w
0 .21312 m
.00375 .21312 L
s
P
p
.001 w
0 .23443 m
.00375 .23443 L
s
P
p
.001 w
0 .25574 m
.00375 .25574 L
s
P
p
.001 w
0 .29836 m
.00375 .29836 L
s
P
p
.001 w
0 .31967 m
.00375 .31967 L
s
P
p
.001 w
0 .34098 m
.00375 .34098 L
s
P
p
.001 w
0 .3623 m
.00375 .3623 L
s
P
p
.001 w
0 .40492 m
.00375 .40492 L
s
P
p
.001 w
0 .42623 m
.00375 .42623 L
s
P
p
.001 w
0 .44754 m
.00375 .44754 L
s
P
p
.001 w
0 .46885 m
.00375 .46885 L
s
P
p
.001 w
0 .51148 m
.00375 .51148 L
s
P
p
.001 w
0 .53279 m
.00375 .53279 L
s
P
p
.001 w
0 .5541 m
.00375 .5541 L
s
P
p
.001 w
0 .57541 m
.00375 .57541 L
s
P
p
.001 w
0 .04262 m
.00375 .04262 L
s
P
p
.001 w
0 .02131 m
.00375 .02131 L
s
P
p
.002 w
0 0 m
0 .61803 L
s
P
P
p
p
.002 w
.04545 .61178 m
.04545 .61803 L
s
P
p
.002 w
.22727 .61178 m
.22727 .61803 L
s
P
p
.002 w
.40909 .61178 m
.40909 .61803 L
s
P
p
.002 w
.59091 .61178 m
.59091 .61803 L
s
P
p
.002 w
.77273 .61178 m
.77273 .61803 L
s
P
p
.002 w
.95455 .61178 m
.95455 .61803 L
s
P
p
.001 w
.08182 .61428 m
.08182 .61803 L
s
P
p
.001 w
.11818 .61428 m
.11818 .61803 L
s
P
p
.001 w
.15455 .61428 m
.15455 .61803 L
s
P
p
.001 w
.19091 .61428 m
.19091 .61803 L
s
P
p
.001 w
.26364 .61428 m
.26364 .61803 L
s
P
p
.001 w
.3 .61428 m
.3 .61803 L
s
P
p
.001 w
.33636 .61428 m
.33636 .61803 L
s
P
p
.001 w
.37273 .61428 m
.37273 .61803 L
s
P
p
.001 w
.44545 .61428 m
.44545 .61803 L
s
P
p
.001 w
.48182 .61428 m
.48182 .61803 L
s
P
p
.001 w
.51818 .61428 m
.51818 .61803 L
s
P
p
.001 w
.55455 .61428 m
.55455 .61803 L
s
P
p
.001 w
.62727 .61428 m
.62727 .61803 L
s
P
p
.001 w
.66364 .61428 m
.66364 .61803 L
s
P
p
.001 w
.7 .61428 m
.7 .61803 L
s
P
p
.001 w
.73636 .61428 m
.73636 .61803 L
s
P
p
.001 w
.80909 .61428 m
.80909 .61803 L
s
P
p
.001 w
.84545 .61428 m
.84545 .61803 L
s
P
p
.001 w
.88182 .61428 m
.88182 .61803 L
s
P
p
.001 w
.91818 .61428 m
.91818 .61803 L
s
P
p
.001 w
.00909 .61428 m
.00909 .61803 L
s
P
p
.001 w
.99091 .61428 m
.99091 .61803 L
s
P
[(Epsilon = 0.1, 0.02, 0.005)] .5 .61803 0 -4 Mshowa
p
.002 w
0 .61803 m
1 .61803 L
s
P
p
.002 w
.99375 .06393 m
1 .06393 L
s
P
p
.002 w
.99375 .17049 m
1 .17049 L
s
P
p
.002 w
.99375 .27705 m
1 .27705 L
s
P
p
.002 w
.99375 .38361 m
1 .38361 L
s
P
p
.002 w
.99375 .49016 m
1 .49016 L
s
P
p
.002 w
.99375 .59672 m
1 .59672 L
s
P
p
.001 w
.99625 .08525 m
1 .08525 L
s
P
p
.001 w
.99625 .10656 m
1 .10656 L
s
P
p
.001 w
.99625 .12787 m
1 .12787 L
s
P
p
.001 w
.99625 .14918 m
1 .14918 L
s
P
p
.001 w
.99625 .1918 m
1 .1918 L
s
P
p
.001 w
.99625 .21312 m
1 .21312 L
s
P
p
.001 w
.99625 .23443 m
1 .23443 L
s
P
p
.001 w
.99625 .25574 m
1 .25574 L
s
P
p
.001 w
.99625 .29836 m
1 .29836 L
s
P
p
.001 w
.99625 .31967 m
1 .31967 L
s
P
p
.001 w
.99625 .34098 m
1 .34098 L
s
P
p
.001 w
.99625 .3623 m
1 .3623 L
s
P
p
.001 w
.99625 .40492 m
1 .40492 L
s
P
p
.001 w
.99625 .42623 m
1 .42623 L
s
P
p
.001 w
.99625 .44754 m
1 .44754 L
s
P
p
.001 w
.99625 .46885 m
1 .46885 L
s
P
p
.001 w
.99625 .51148 m
1 .51148 L
s
P
p
.001 w
.99625 .53279 m
1 .53279 L
s
P
p
.001 w
.99625 .5541 m
1 .5541 L
s
P
p
.001 w
.99625 .57541 m
1 .57541 L
s
P
p
.001 w
.99625 .04262 m
1 .04262 L
s
P
p
.001 w
.99625 .02131 m
1 .02131 L
s
P
p
.002 w
1 0 m
1 .61803 L
s
P
P
p
P
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
p
p
p
.001 w
.04545 .02841 m
.08333 .04148 L
.12121 .05704 L
.15909 .0761 L
.19697 .10004 L
.23485 .13022 L
.27273 .16732 L
.31061 .2111 L
.34848 .2597 L
.38636 .30955 L
.42424 .35691 L
.46212 .39888 L
.5 .43382 L
.53788 .46193 L
.57576 .48428 L
.61364 .50214 L
.65152 .51679 L
.68939 .52932 L
.72727 .54042 L
.76515 .55062 L
.80303 .56029 L
.84091 .56961 L
.87879 .57873 L
.91667 .58778 L
.95455 .59672 L
s
P
P
p
p
.001 w
.04545 .02841 m
.08333 .03729 L
.12121 .04619 L
.15909 .05507 L
.19697 .06406 L
.21591 .06875 L
.23485 .0739 L
.25379 .08017 L
.26326 .08428 L
.27273 .08949 L
.2822 .09645 L
.29167 .10602 L
.30114 .1194 L
.31061 .13779 L
.32008 .16288 L
.32955 .19528 L
.34848 .27719 L
.36742 .35871 L
.37689 .39113 L
.38636 .41624 L
.39583 .4348 L
.4053 .44815 L
.41477 .4577 L
.42424 .46459 L
.43371 .4698 L
.44318 .4739 L
.46212 .48022 L
.5 .49004 L
.53788 .49902 L
.57576 .50792 L
.61364 .5168 L
.65152 .52568 L
.68939 .53456 L
.72727 .54344 L
.76515 .55232 L
.80303 .5612 L
.84091 .57008 L
.87879 .57896 L
.91667 .58784 L
.95455 .59672 L
s
P
P
p
p
.001 w
.04545 .02841 m
.08333 .03729 L
.12121 .04619 L
.15909 .05504 L
.19697 .06394 L
.23485 .07283 L
.27273 .08169 L
.29167 .08615 L
.30114 .08841 L
.31061 .09084 L
.31534 .09236 L
.31771 .09331 L
.32008 .09444 L
.32244 .09593 L
.32481 .09802 L
.32599 .0993 L
.32718 .10084 L
.32836 .10266 L
.32955 .10487 L
.33191 .11077 L
.3331 .11465 L
.33428 .11931 L
.33665 .13164 L
.33902 .14894 L
.34138 .17239 L
.34375 .20242 L
.34848 .27756 L
.35322 .35254 L
.35559 .3824 L
.35795 .40489 L
.36032 .42226 L
.36151 .42929 L
.36269 .43484 L
.36506 .44319 L
.36742 .44917 L
.36861 .45138 L
.36979 .45335 L
.37216 .45614 L
.37453 .45814 L
.37689 .45964 L
.37926 .46078 L
.38163 .46173 L
.38636 .46325 L
.42424 .47241 L
.46212 .48129 L
.5 .49016 L
.53788 .49904 L
.57576 .50792 L
.61364 .5168 L
.65152 .52568 L
Mistroke
.68939 .53456 L
.72727 .54344 L
.76515 .55232 L
.80303 .5612 L
.84091 .57008 L
.87879 .57896 L
.91667 .58784 L
.95455 .59672 L
Mfstroke
P
P
P
% End of Graphics
MathPictureEnd
end
showpage
%%EndDocument
 @endspecial 587 1335 a(Figure)j(30:)j(T)m(est)d(Problem)f(30,)g
Fl(y)q Fm(\()p Fl(x)p Fm(\))i(v)o(ersus)g Fl(x)p eop
%%Page: 31 31
31 30 bop 262 307 a Fn(T)l(est)15 b(Problem)e(31)h Fm(\(Nonlinear\))g
([1)o(,)f(p.18])262 357 y Fl(y)283 342 y Fk(0)307 357
y Fm(=)e(sin)c Fl(\022)q(;)19 b(\022)479 342 y Fk(0)503
357 y Fm(=)11 b Fl(M)r(;)19 b(\017M)681 342 y Fk(0)704
357 y Fm(=)12 b Fj(\000)p Fl(Q;)18 b(\017Q)893 342 y
Fk(0)916 357 y Fm(=)11 b(\()p Fl(y)f Fj(\000)f Fm(1\))e(cos)g
Fl(\022)j Fj(\000)e Fl(M)d(T)s(;)18 b(T)g Fm(=)12 b(sec)c
Fl(\022)i Fm(+)e Fl(\017Q)f Fm(tan)f Fl(\022)q Fm(,)1044
407 y Fl(y)q Fm(\(0\))12 b(=)g Fl(y)q Fm(\(1\))g(=)g(0)p
Fl(;)18 b(M)5 b Fm(\(0\))11 b(=)h Fl(M)5 b Fm(\(1\))12
b(=)f(0.)262 457 y(This)i(equation)h(mo)q(dels)f(nonlinear)g(elastic)h
(b)q(eams.)439 1760 y @beginspecial 72 @llx 72 @lly 540
@urx 720 @ury 2834 @rwi @setspecial
%%BeginDocument: ../PLOTS/pr31.ps

/Mathdict 150 dict def
Mathdict begin
/Mlmarg		1.0 72 mul def
/Mrmarg		1.0 72 mul def
/Mbmarg		1.0 72 mul def
/Mtmarg		1.0 72 mul def
/Mwidth		8.5 72 mul def
/Mheight	11 72 mul def
/Mtransform	{  } bind def
/Mnodistort	true def
/Mfixwid	true	def
/Mfixdash	false def
/Mrot		0	def
/Mpstart {
MathPictureStart
} bind def
/Mpend {
MathPictureEnd
} bind def
/Mscale {
0 1 0 1
5 -1 roll
MathScale
} bind def
/ISOLatin1Encoding dup where
{ pop pop }
{
[
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft
/logicalnot /hyphen /registered /macron
/degree /plusminus /twosuperior /threesuperior
/acute /mu /paragraph /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright
/onequarter /onehalf /threequarters /questiondown
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis
] def
} ifelse
/MFontDict 50 dict def
/MStrCat
{
exch
dup length
2 index length add
string
dup 3 1 roll
copy
length
exch dup
4 2 roll exch
putinterval
} def
/MCreateEncoding
{
1 index
255 string cvs
(-) MStrCat
1 index MStrCat
cvn exch
(Encoding) MStrCat
cvn dup where
{
exch get
}
{
pop
StandardEncoding
} ifelse
3 1 roll
dup MFontDict exch known not
{
1 index findfont
dup length dict
begin
{1 index /FID ne
{def}
{pop pop}
ifelse} forall
/Encoding 3 index
def
currentdict
end
1 index exch definefont pop
MFontDict 1 index
null put
}
if
exch pop
exch pop
} def
/ISOLatin1 { (ISOLatin1) MCreateEncoding } def
/ISO8859 { (ISOLatin1) MCreateEncoding } def
/Mcopyfont {
dup
maxlength
dict
exch
{
1 index
/FID
eq
{
pop pop
}
{
2 index
3 1 roll
put
}
ifelse
}
forall
} def
/Plain	/Courier findfont Mcopyfont definefont pop
/Bold	/Courier-Bold findfont Mcopyfont definefont pop
/Italic /Courier-Oblique findfont Mcopyfont definefont pop
/MathPictureStart {
gsave
Mtransform
Mlmarg
Mbmarg
translate
Mwidth
Mlmarg Mrmarg add
sub
/Mwidth exch def
Mheight
Mbmarg Mtmarg add
sub
/Mheight exch def
/Mtmatrix
matrix currentmatrix
def
/Mgmatrix
matrix currentmatrix
def
} bind def
/MathPictureEnd {
grestore
} bind def
/MFill {
0 0 		moveto
Mwidth 0 	lineto
Mwidth Mheight 	lineto
0 Mheight 	lineto
fill
} bind def
/MPlotRegion {
3 index
Mwidth mul
2 index
Mheight mul
translate
exch sub
Mheight mul
/Mheight
exch def
exch sub
Mwidth mul
/Mwidth
exch def
} bind def
/MathSubStart {
Momatrix
Mgmatrix Mtmatrix
Mwidth Mheight
7 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
Mgmatrix setmatrix
9 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
2 copy translate
/Mtmatrix matrix currentmatrix def
3 -1 roll
exch sub
/Mheight exch def
sub
/Mwidth exch def
} bind def
/MathSubEnd {
/Mheight exch def
/Mwidth exch def
/Mtmatrix exch def
dup setmatrix
/Mgmatrix exch def
/Momatrix exch def
} bind def
/Mdot {
moveto
0 0 rlineto
stroke
} bind def
/Mtetra {
moveto
lineto
lineto
lineto
fill
} bind def
/Metetra {
moveto
lineto
lineto
lineto
closepath
gsave
fill
grestore
0 setgray
stroke
} bind def
/Mistroke {
flattenpath
0 0 0
{
4 2 roll
pop pop
}
{
4 -1 roll
2 index
sub dup mul
4 -1 roll
2 index
sub dup mul
add sqrt
4 -1 roll
add
3 1 roll
}
{
stop
}
{
stop
}
pathforall
pop pop
currentpoint
stroke
moveto
currentdash
3 -1 roll
add
setdash
} bind def
/Mfstroke {
stroke
currentdash
pop 0
setdash
} bind def
/Mrotsboxa {
gsave
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
grestore
Msboxa
3  -1 roll
/Mtmatrix
exch def
/Mrot
0 def
} bind def
/Msboxa {
newpath
5 -1 roll
Mvboxa
pop
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Msboxa1
5 -3 roll
Msboxa1
Mboxrot
[
7 -2 roll
2 copy
[
3 1 roll
10 -1 roll
9 -1 roll
]
6 1 roll
5 -2 roll
]
} bind def
/Msboxa1 {
sub
2 div
dup
2 index
1 add
mul
3 -1 roll
-1 add
3 -1 roll
mul
} bind def
/Mvboxa	{
Mfixwid
{
Mvboxa1
}
{
dup
Mwidthcal
0 exch
{
add
}
forall
exch
Mvboxa1
4 index
7 -1 roll
add
4 -1 roll
pop
3 1 roll
}
ifelse
} bind def
/Mvboxa1 {
gsave
newpath
[ true
3 -1 roll
{
Mbbox
5 -1 roll
{
0
5 1 roll
}
{
7 -1 roll
exch sub
(m) stringwidth pop
.3 mul
sub
7 1 roll
6 -1 roll
4 -1 roll
Mmin
3 -1 roll
5 index
add
5 -1 roll
4 -1 roll
Mmax
4 -1 roll
}
ifelse
false
}
forall
{ stop } if
counttomark
1 add
4 roll
]
grestore
} bind def
/Mbbox {
1 dict begin
0 0 moveto
/temp (T) def
{	gsave
currentpoint newpath moveto
temp 0 3 -1 roll put temp
false charpath flattenpath currentpoint
pathbbox
grestore moveto lineto moveto} forall
pathbbox
newpath
end
} bind def
/Mmin {
2 copy
gt
{ exch } if
pop
} bind def
/Mmax {
2 copy
lt
{ exch } if
pop
} bind def
/Mrotshowa {
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
Mgmatrix setmatrix
Mshowa
/Mtmatrix
exch def
/Mrot 0 def
} bind def
/Mshowa {
4 -2 roll
moveto
2 index
Mtmatrix setmatrix
Mvboxa
7 1 roll
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Mshowa1
4 1 roll
Mshowa1
rmoveto
currentpoint
Mfixwid
{
Mshowax
}
{
Mshoway
}
ifelse
pop pop pop pop
Mgmatrix setmatrix
} bind def
/Mshowax {	
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
Mfixdash
{
Mfixdashp		
}
if
show
} for
} bind def
/Mfixdashp {
dup
length
1
gt
1 index
true exch
{
45
eq
and
} forall
and
{
gsave
(--)		
stringwidth pop
(-)
stringwidth pop
sub
2 div
0 rmoveto
dup
length
1 sub
{
(-)
show
}
repeat
grestore
}
if
} bind def	
/Mshoway {
3 index
Mwidthcal
5 1 roll
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
[
6 index
aload
length
2 add
-1 roll
{
pop
Strform
stringwidth
pop
neg 
exch
add
0 rmoveto
}
exch
kshow
cleartomark
} for
pop	
} bind def
/Mwidthcal {
[
exch
{
Mwidthcal1
}
forall
]
[
exch
dup
Maxlen
-1 add
0 1
3 -1 roll
{
[
exch
2 index
{		 
1 index	
Mget
exch
}
forall		
pop
Maxget
exch
}
for
pop
]
Mreva
} bind def
/Mreva	{
[
exch
aload
length
-1 1
{1 roll}
for
]
} bind def
/Mget	{
1 index
length
-1 add
1 index
ge
{
get
}
{
pop pop
0
}
ifelse
} bind def
/Maxlen	{
[
exch
{
length
}
forall
Maxget
} bind def
/Maxget	{
counttomark
-1 add
1 1
3 -1 roll
{
pop
Mmax
}
for
exch
pop
} bind def
/Mwidthcal1 {
[
exch
{
Strform
stringwidth
pop
}
forall
]
} bind def
/Strform {
/tem (x) def
tem 0
3 -1 roll
put
tem
} bind def
/Mshowa1 {
2 copy
add
4 1 roll
sub
mul
sub
-2 div
} bind def
/MathScale {
Mwidth
Mheight
Mlp
translate
scale
/yscale exch def
/ybias exch def
/xscale exch def
/xbias exch def
/Momatrix
xscale yscale matrix scale
xbias ybias matrix translate
matrix concatmatrix def
/Mgmatrix
matrix currentmatrix
def
} bind def
/Mlp {
3 copy
Mlpfirst
{
Mnodistort
{
Mmin
dup
} if
4 index
2 index
2 index
Mlprun
11 index
11 -1 roll
10 -4 roll
Mlp1
8 index
9 -5 roll
Mlp1
4 -1 roll
and
{ exit } if
3 -1 roll
pop pop
} loop
exch
3 1 roll
7 -3 roll
pop pop pop
} bind def
/Mlpfirst {
3 -1 roll
dup length
2 copy
-2 add
get
aload
pop pop pop
4 -2 roll
-1 add
get
aload
pop pop pop
6 -1 roll
3 -1 roll
5 -1 roll
sub
div
4 1 roll
exch sub
div
} bind def
/Mlprun {
2 copy
4 index
0 get
dup
4 1 roll
Mlprun1
3 copy
8 -2 roll
9 -1 roll
{
3 copy
Mlprun1
3 copy
11 -3 roll
/gt Mlpminmax
8 3 roll
11 -3 roll
/lt Mlpminmax
8 3 roll
} forall
pop pop pop pop
3 1 roll
pop pop
aload pop
5 -1 roll
aload pop
exch
6 -1 roll
Mlprun2
8 2 roll
4 -1 roll
Mlprun2
6 2 roll
3 -1 roll
Mlprun2
4 2 roll
exch
Mlprun2
6 2 roll
} bind def
/Mlprun1 {
aload pop
exch
6 -1 roll
5 -1 roll
mul add
4 -2 roll
mul
3 -1 roll
add
} bind def
/Mlprun2 {
2 copy
add 2 div
3 1 roll
exch sub
} bind def
/Mlpminmax {
cvx
2 index
6 index
2 index
exec
{
7 -3 roll
4 -1 roll
} if
1 index
5 index
3 -1 roll
exec
{
4 1 roll
pop
5 -1 roll
aload
pop pop
4 -1 roll
aload pop
[
8 -2 roll
pop
5 -2 roll
pop
6 -2 roll
pop
5 -1 roll
]
4 1 roll
pop
}
{
pop pop pop
} ifelse
} bind def
/Mlp1 {
5 index
3 index	sub
5 index
2 index mul
1 index
le
1 index
0 le
or
dup
not
{
1 index
3 index	div
.99999 mul
8 -1 roll
pop
7 1 roll
}
if
8 -1 roll
2 div
7 -2 roll
pop sub
5 index
6 -3 roll
pop pop
mul sub
exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
outflag
1
eq
{
/outflag 0 def
/intop 0 def
/inrht 0 def
} if		
5 index
gsave
Mtmatrix setmatrix
Mvboxa pop
grestore
3 -1 roll
pop
dup
intop
gt
{
/intop
exch def
}
{ pop }
ifelse
dup
inrht
gt
{
/inrht
exch def
}
{ pop }
ifelse
pop
/inflag
1 def
} bind def
/Mouter {
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
inflag
1 eq
{
dup
0 lt
{
dup
intop
mul
neg
/yadtop
exch def
} if
dup
0 gt
{
dup
intop
mul
/yadbot
exch def
}
if
pop
dup
0 lt
{
dup
inrht
mul
neg
/xadrht
exch def
} if
dup
0 gt
{
dup
inrht
mul
/xadlft
exch def
} if
pop
/outflag 1 def
}
{ pop pop}
ifelse
/inflag 0 def
/inrht 0 def
/intop 0 def
} bind def	
/Mboxout {
outflag
1
eq
{
4 -1
roll
xadlft
leadjust
add
sub
4 1 roll
3 -1
roll
yadbot
leadjust
add
sub
3 1
roll
exch
xadrht
leadjust
add
add
exch
yadtop
leadjust
add
add
/outflag 0 def
/xadlft 0 def
/yadbot 0 def
/xadrht 0 def
/yadtop 0 def
} if
} bind def
/leadjust {
(m) stringwidth pop
.5 mul
} bind def
/Mrotcheck {
dup
90
eq
{
yadbot
/yadbot
xadrht
def	
/xadrht
yadtop
def
/yadtop
xadlft
def
/xadlft
exch
def
}
if
dup
cos
1 index
sin
Checkaux
dup
cos
1 index
sin neg
exch
Checkaux
3 1 roll
pop pop
} bind def
/Checkaux {
4 index
exch
4 index
mul
3 1 roll
mul add
4 1 roll
} bind def
/Mboxrot {
Mrot
90 eq
{
brotaux
4 2
roll
}
if
Mrot
180 eq
{
4 2
roll
brotaux
4 2
roll
brotaux
}	
if
Mrot
270 eq
{
4 2
roll
brotaux
}
if
} bind def
/brotaux {
neg
exch
neg
} bind def
/Mabsproc {
0
matrix defaultmatrix
dtransform idtransform
dup mul exch
dup mul
add sqrt
} bind def
/Mabswid {
Mabsproc
setlinewidth	
} bind def
/Mabsdash {
exch
[
exch
{
Mabsproc
}
forall
]
exch
setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop}
repeat
} bind def
} ifelse
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/setcmykcolor where
{ pop}
{ /setcmykcolor {
4 1
roll
[
4 1 
roll
]
{
1 index
sub
1
sub neg
dup
0
lt
{
pop
0
}
if
dup
1
gt
{
pop
1
}
if
exch
} forall
pop
setrgbcolor
} bind def
} ifelse
/Mcharproc
{
currentfile
(x)
readhexstring
pop
0 get
exch
div
} bind def
/Mshadeproc
{
dup
3 1
roll
{
dup
Mcharproc
3 1
roll
} repeat
1 eq
{
setgray
}
{
3 eq
{
setrgbcolor
}
{
setcmykcolor
} ifelse
} ifelse
} bind def
/Mrectproc
{
3 index
2 index
moveto
2 index
3 -1
roll
lineto
dup
3 1
roll
lineto
lineto
fill
} bind def
/Mcolorimage
{
7 1
roll
pop
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
9 index
Mshadeproc
Mrectproc
} for
pop
} for
pop pop pop pop
} bind def
/Mimage
{
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
Mcharproc
setgray
Mrectproc
} for
pop
} for
pop pop pop
} bind def

MathPictureStart
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0454545 0.909091 0.588604 0.588604 [
[(0)] .04545 0 0 2 0 Minner Mrotsboxa
[(0.2)] .22727 0 0 2 0 Minner Mrotsboxa
[(0.4)] .40909 0 0 2 0 Minner Mrotsboxa
[(0.6)] .59091 0 0 2 0 Minner Mrotsboxa
[(0.8)] .77273 0 0 2 0 Minner Mrotsboxa
[(1)] .95455 0 0 2 0 Minner Mrotsboxa
[()] .5 0 0 2 0 0 -1 Mouter Mrotsboxa
[(-1)] -0.0125 0 1 0 0 Minner Mrotsboxa
[(-0.8)] -0.0125 .11772 1 0 0 Minner Mrotsboxa
[(-0.6)] -0.0125 .23544 1 0 0 Minner Mrotsboxa
[(-0.4)] -0.0125 .35316 1 0 0 Minner Mrotsboxa
[(-0.2)] -0.0125 .47088 1 0 0 Minner Mrotsboxa
[(0)] -0.0125 .5886 1 0 0 Minner Mrotsboxa
[(Epsilon = 0.1, 0.05, 0.01)] .5 .61803 0 -4 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 .61903 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 g
p
p
.002 w
.04545 0 m
.04545 .00625 L
s
P
[(0)] .04545 0 0 2 0 Minner Mrotshowa
p
.002 w
.22727 0 m
.22727 .00625 L
s
P
[(0.2)] .22727 0 0 2 0 Minner Mrotshowa
p
.002 w
.40909 0 m
.40909 .00625 L
s
P
[(0.4)] .40909 0 0 2 0 Minner Mrotshowa
p
.002 w
.59091 0 m
.59091 .00625 L
s
P
[(0.6)] .59091 0 0 2 0 Minner Mrotshowa
p
.002 w
.77273 0 m
.77273 .00625 L
s
P
[(0.8)] .77273 0 0 2 0 Minner Mrotshowa
p
.002 w
.95455 0 m
.95455 .00625 L
s
P
[(1)] .95455 0 0 2 0 Minner Mrotshowa
p
.001 w
.08182 0 m
.08182 .00375 L
s
P
p
.001 w
.11818 0 m
.11818 .00375 L
s
P
p
.001 w
.15455 0 m
.15455 .00375 L
s
P
p
.001 w
.19091 0 m
.19091 .00375 L
s
P
p
.001 w
.26364 0 m
.26364 .00375 L
s
P
p
.001 w
.3 0 m
.3 .00375 L
s
P
p
.001 w
.33636 0 m
.33636 .00375 L
s
P
p
.001 w
.37273 0 m
.37273 .00375 L
s
P
p
.001 w
.44545 0 m
.44545 .00375 L
s
P
p
.001 w
.48182 0 m
.48182 .00375 L
s
P
p
.001 w
.51818 0 m
.51818 .00375 L
s
P
p
.001 w
.55455 0 m
.55455 .00375 L
s
P
p
.001 w
.62727 0 m
.62727 .00375 L
s
P
p
.001 w
.66364 0 m
.66364 .00375 L
s
P
p
.001 w
.7 0 m
.7 .00375 L
s
P
p
.001 w
.73636 0 m
.73636 .00375 L
s
P
p
.001 w
.80909 0 m
.80909 .00375 L
s
P
p
.001 w
.84545 0 m
.84545 .00375 L
s
P
p
.001 w
.88182 0 m
.88182 .00375 L
s
P
p
.001 w
.91818 0 m
.91818 .00375 L
s
P
p
.001 w
.00909 0 m
.00909 .00375 L
s
P
p
.001 w
.99091 0 m
.99091 .00375 L
s
P
[()] .5 0 0 2 0 0 -1 Mouter Mrotshowa
p
.002 w
0 0 m
1 0 L
s
P
p
.002 w
0 0 m
.00625 0 L
s
P
[(-1)] -0.0125 0 1 0 0 Minner Mrotshowa
p
.002 w
0 .11772 m
.00625 .11772 L
s
P
[(-0.8)] -0.0125 .11772 1 0 0 Minner Mrotshowa
p
.002 w
0 .23544 m
.00625 .23544 L
s
P
[(-0.6)] -0.0125 .23544 1 0 0 Minner Mrotshowa
p
.002 w
0 .35316 m
.00625 .35316 L
s
P
[(-0.4)] -0.0125 .35316 1 0 0 Minner Mrotshowa
p
.002 w
0 .47088 m
.00625 .47088 L
s
P
[(-0.2)] -0.0125 .47088 1 0 0 Minner Mrotshowa
p
.002 w
0 .5886 m
.00625 .5886 L
s
P
[(0)] -0.0125 .5886 1 0 0 Minner Mrotshowa
p
.001 w
0 .02354 m
.00375 .02354 L
s
P
p
.001 w
0 .04709 m
.00375 .04709 L
s
P
p
.001 w
0 .07063 m
.00375 .07063 L
s
P
p
.001 w
0 .09418 m
.00375 .09418 L
s
P
p
.001 w
0 .14126 m
.00375 .14126 L
s
P
p
.001 w
0 .16481 m
.00375 .16481 L
s
P
p
.001 w
0 .18835 m
.00375 .18835 L
s
P
p
.001 w
0 .2119 m
.00375 .2119 L
s
P
p
.001 w
0 .25899 m
.00375 .25899 L
s
P
p
.001 w
0 .28253 m
.00375 .28253 L
s
P
p
.001 w
0 .30607 m
.00375 .30607 L
s
P
p
.001 w
0 .32962 m
.00375 .32962 L
s
P
p
.001 w
0 .37671 m
.00375 .37671 L
s
P
p
.001 w
0 .40025 m
.00375 .40025 L
s
P
p
.001 w
0 .42379 m
.00375 .42379 L
s
P
p
.001 w
0 .44734 m
.00375 .44734 L
s
P
p
.001 w
0 .49443 m
.00375 .49443 L
s
P
p
.001 w
0 .51797 m
.00375 .51797 L
s
P
p
.001 w
0 .54152 m
.00375 .54152 L
s
P
p
.001 w
0 .56506 m
.00375 .56506 L
s
P
p
.001 w
0 .61215 m
.00375 .61215 L
s
P
p
.002 w
0 0 m
0 .61803 L
s
P
P
p
p
.002 w
.04545 .61178 m
.04545 .61803 L
s
P
p
.002 w
.22727 .61178 m
.22727 .61803 L
s
P
p
.002 w
.40909 .61178 m
.40909 .61803 L
s
P
p
.002 w
.59091 .61178 m
.59091 .61803 L
s
P
p
.002 w
.77273 .61178 m
.77273 .61803 L
s
P
p
.002 w
.95455 .61178 m
.95455 .61803 L
s
P
p
.001 w
.08182 .61428 m
.08182 .61803 L
s
P
p
.001 w
.11818 .61428 m
.11818 .61803 L
s
P
p
.001 w
.15455 .61428 m
.15455 .61803 L
s
P
p
.001 w
.19091 .61428 m
.19091 .61803 L
s
P
p
.001 w
.26364 .61428 m
.26364 .61803 L
s
P
p
.001 w
.3 .61428 m
.3 .61803 L
s
P
p
.001 w
.33636 .61428 m
.33636 .61803 L
s
P
p
.001 w
.37273 .61428 m
.37273 .61803 L
s
P
p
.001 w
.44545 .61428 m
.44545 .61803 L
s
P
p
.001 w
.48182 .61428 m
.48182 .61803 L
s
P
p
.001 w
.51818 .61428 m
.51818 .61803 L
s
P
p
.001 w
.55455 .61428 m
.55455 .61803 L
s
P
p
.001 w
.62727 .61428 m
.62727 .61803 L
s
P
p
.001 w
.66364 .61428 m
.66364 .61803 L
s
P
p
.001 w
.7 .61428 m
.7 .61803 L
s
P
p
.001 w
.73636 .61428 m
.73636 .61803 L
s
P
p
.001 w
.80909 .61428 m
.80909 .61803 L
s
P
p
.001 w
.84545 .61428 m
.84545 .61803 L
s
P
p
.001 w
.88182 .61428 m
.88182 .61803 L
s
P
p
.001 w
.91818 .61428 m
.91818 .61803 L
s
P
p
.001 w
.00909 .61428 m
.00909 .61803 L
s
P
p
.001 w
.99091 .61428 m
.99091 .61803 L
s
P
[(Epsilon = 0.1, 0.05, 0.01)] .5 .61803 0 -4 Mshowa
p
.002 w
0 .61803 m
1 .61803 L
s
P
p
.002 w
.99375 0 m
1 0 L
s
P
p
.002 w
.99375 .11772 m
1 .11772 L
s
P
p
.002 w
.99375 .23544 m
1 .23544 L
s
P
p
.002 w
.99375 .35316 m
1 .35316 L
s
P
p
.002 w
.99375 .47088 m
1 .47088 L
s
P
p
.002 w
.99375 .5886 m
1 .5886 L
s
P
p
.001 w
.99625 .02354 m
1 .02354 L
s
P
p
.001 w
.99625 .04709 m
1 .04709 L
s
P
p
.001 w
.99625 .07063 m
1 .07063 L
s
P
p
.001 w
.99625 .09418 m
1 .09418 L
s
P
p
.001 w
.99625 .14126 m
1 .14126 L
s
P
p
.001 w
.99625 .16481 m
1 .16481 L
s
P
p
.001 w
.99625 .18835 m
1 .18835 L
s
P
p
.001 w
.99625 .2119 m
1 .2119 L
s
P
p
.001 w
.99625 .25899 m
1 .25899 L
s
P
p
.001 w
.99625 .28253 m
1 .28253 L
s
P
p
.001 w
.99625 .30607 m
1 .30607 L
s
P
p
.001 w
.99625 .32962 m
1 .32962 L
s
P
p
.001 w
.99625 .37671 m
1 .37671 L
s
P
p
.001 w
.99625 .40025 m
1 .40025 L
s
P
p
.001 w
.99625 .42379 m
1 .42379 L
s
P
p
.001 w
.99625 .44734 m
1 .44734 L
s
P
p
.001 w
.99625 .49443 m
1 .49443 L
s
P
p
.001 w
.99625 .51797 m
1 .51797 L
s
P
p
.001 w
.99625 .54152 m
1 .54152 L
s
P
p
.001 w
.99625 .56506 m
1 .56506 L
s
P
p
.001 w
.99625 .61215 m
1 .61215 L
s
P
p
.002 w
1 0 m
1 .61803 L
s
P
P
p
P
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
p
p
p
.001 w
.04545 .5886 m
.06439 .48974 L
.08333 .41025 L
.12121 .29419 L
.14015 .252 L
.15909 .21773 L
.17803 .18988 L
.19697 .16708 L
.21591 .14846 L
.23485 .13306 L
.25379 .12051 L
.27273 .11007 L
.31061 .09442 L
.32955 .08858 L
.34848 .08381 L
.36742 .07987 L
.38636 .0767 L
.4053 .07414 L
.42424 .07217 L
.44318 .07067 L
.45265 .07009 L
.46212 .06963 L
.47159 .06927 L
.47633 .06912 L
.48106 .06901 L
.4858 .06892 L
.48816 .06888 L
.49053 .06886 L
.4929 .06883 L
.49408 .06883 L
.49527 .06882 L
.49645 .06881 L
.49763 .06881 L
.49882 .06881 L
.5 .06881 L
.50118 .06881 L
.50237 .06881 L
.50355 .06881 L
.50473 .06882 L
.50592 .06883 L
.5071 .06883 L
.50947 .06886 L
.51184 .06888 L
.5142 .06892 L
.51894 .06901 L
.52367 .06912 L
.52841 .06927 L
.53788 .06963 L
.54735 .07009 L
.55682 .07067 L
Mistroke
.57576 .07217 L
.5947 .07414 L
.61364 .0767 L
.63258 .07987 L
.65152 .08381 L
.67045 .0886 L
.68939 .09444 L
.70833 .10151 L
.72727 .11007 L
.74621 .12043 L
.76515 .13303 L
.78409 .14838 L
.80303 .16708 L
.82197 .18986 L
.84091 .21774 L
.85985 .25194 L
.87879 .29405 L
.91667 .41024 L
.93561 .48974 L
.95455 .5886 L
Mfstroke
P
P
p
p
.001 w
.04545 .5886 m
.05492 .49144 L
.06439 .4133 L
.08333 .29949 L
.0928 .2587 L
.10227 .22555 L
.11174 .1985 L
.12121 .17653 L
.14015 .14399 L
.14962 .13197 L
.15909 .12208 L
.17803 .10709 L
.1875 .10142 L
.19697 .09666 L
.21591 .08912 L
.23485 .08363 L
.25379 .07953 L
.27273 .07628 L
.31061 .07164 L
.32955 .06991 L
.34848 .06845 L
.36742 .06723 L
.38636 .0662 L
.4053 .06538 L
.42424 .06475 L
.44318 .06424 L
.45265 .06403 L
.46212 .06386 L
.47159 .06373 L
.47633 .06368 L
.48106 .06364 L
.4858 .06361 L
.48816 .0636 L
.49053 .06359 L
.4929 .06358 L
.49408 .06358 L
.49527 .06357 L
.49645 .06357 L
.49763 .06357 L
.49882 .06357 L
.5 .06357 L
.50118 .06357 L
.50237 .06357 L
.50355 .06357 L
.50473 .06357 L
.50592 .06358 L
.5071 .06358 L
.50947 .06359 L
.51184 .0636 L
.5142 .06361 L
Mistroke
.51894 .06364 L
.52367 .06368 L
.52841 .06373 L
.53788 .06386 L
.54735 .06403 L
.55682 .06423 L
.57576 .06475 L
.5947 .0654 L
.61364 .06622 L
.63258 .06723 L
.65152 .06845 L
.67045 .06991 L
.68939 .07164 L
.70833 .07372 L
.72727 .07628 L
.74621 .07948 L
.76515 .08366 L
.78409 .08916 L
.80303 .09666 L
.82197 .10703 L
.83144 .11384 L
.84091 .12205 L
.85038 .13197 L
.85985 .14395 L
.86932 .15855 L
.87879 .17646 L
.89773 .22546 L
.9072 .2587 L
.91667 .29949 L
.92614 .35032 L
.93561 .4133 L
.95455 .5886 L
Mfstroke
P
P
p
p
.001 w
.04545 .5886 m
.04782 .47049 L
.05019 .38388 L
.05256 .31548 L
.05492 .26455 L
.05729 .2257 L
.05966 .19601 L
.06203 .17277 L
.06439 .15557 L
.06676 .14201 L
.06913 .13184 L
.0715 .12377 L
.07386 .11752 L
.07623 .11279 L
.0786 .10914 L
.08097 .10621 L
.08333 .1039 L
.0857 .10204 L
.08807 .1005 L
.0928 .09823 L
.09754 .09657 L
.10227 .09533 L
.12121 .09176 L
.15909 .08624 L
.19697 .08147 L
.23485 .07722 L
.27273 .07358 L
.31061 .07058 L
.34848 .0681 L
.38636 .06619 L
.4053 .06545 L
.42424 .06481 L
.44318 .06435 L
.45265 .06418 L
.46212 .06404 L
.47159 .06392 L
.47633 .06387 L
.48106 .06383 L
.4858 .06379 L
.48816 .06378 L
.49053 .06377 L
.4929 .06376 L
.49408 .06376 L
.49527 .06375 L
.49645 .06375 L
.49763 .06375 L
.49882 .06375 L
.5 .06375 L
.50118 .06375 L
.50237 .06375 L
Mistroke
.50473 .06375 L
.50592 .06376 L
.5071 .06376 L
.50947 .06377 L
.5142 .06379 L
.51894 .06383 L
.52841 .06392 L
.53788 .06404 L
.55682 .06436 L
.57576 .06481 L
.5947 .06541 L
.61364 .06616 L
.65152 .0681 L
.68939 .07058 L
.72727 .07358 L
.76515 .07722 L
.80303 .08147 L
.84091 .08623 L
.85985 .08891 L
.87879 .09176 L
.88826 .09335 L
.89773 .09533 L
.90246 .09658 L
.9072 .09823 L
.91193 .1005 L
.9143 .10204 L
.91667 .1039 L
.9214 .10914 L
.92377 .11278 L
.92614 .11753 L
.9285 .12379 L
.93087 .1317 L
.93324 .14202 L
.93561 .15557 L
.93797 .17277 L
.94034 .19595 L
.94271 .22533 L
.94508 .2651 L
.94744 .31548 L
.94981 .38388 L
.95218 .47049 L
.95455 .5886 L
Mfstroke
P
P
P
% End of Graphics
MathPictureEnd
end
showpage
%%EndDocument
 @endspecial 575 1379 a(Figure)g(31:)k(T)m(est)c(Problem)f(31,)g
Fl(M)5 b Fm(\()p Fl(x)p Fm(\))13 b(v)o(ersus)i Fl(x)p
eop
%%Page: 32 32
32 31 bop 262 307 a Fn(T)l(est)15 b(Problem)e(32)h Fm(\(Nonlinear\))g
([1)o(,)f(p.8])262 357 y Fl(y)283 342 y Fk(0000)335 357
y Fm(=)f Fl(R)p Fm(\()p Fl(y)448 342 y Fk(0)461 357 y
Fl(y)482 342 y Fk(00)513 357 y Fj(\000)d Fl(y)q(y)596
342 y Fk(000)629 357 y Fm(\),)59 b Fl(y)q Fm(\(0\))13
b(=)f Fl(y)868 342 y Fk(0)880 357 y Fm(\(0\))g(=)g(0)p
Fl(;)17 b(y)q Fm(\(1\))c(=)f(1)p Fl(;)17 b(y)1241 342
y Fk(0)1254 357 y Fm(\(1\))11 b(=)h(0.)262 407 y(This)20
b(problem)f(arises)i(from)e(\015uid)h(injection)g(through)g(one)h(side)
f(of)g(a)g(long)g(v)o(ertical)262 457 y(c)o(hannel.)439
1752 y @beginspecial 72 @llx 72 @lly 540 @urx 720 @ury
2834 @rwi @setspecial
%%BeginDocument: ../PLOTS/pr32.ps

/Mathdict 150 dict def
Mathdict begin
/Mlmarg		1.0 72 mul def
/Mrmarg		1.0 72 mul def
/Mbmarg		1.0 72 mul def
/Mtmarg		1.0 72 mul def
/Mwidth		8.5 72 mul def
/Mheight	11 72 mul def
/Mtransform	{  } bind def
/Mnodistort	true def
/Mfixwid	true	def
/Mfixdash	false def
/Mrot		0	def
/Mpstart {
MathPictureStart
} bind def
/Mpend {
MathPictureEnd
} bind def
/Mscale {
0 1 0 1
5 -1 roll
MathScale
} bind def
/ISOLatin1Encoding dup where
{ pop pop }
{
[
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft
/logicalnot /hyphen /registered /macron
/degree /plusminus /twosuperior /threesuperior
/acute /mu /paragraph /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright
/onequarter /onehalf /threequarters /questiondown
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis
] def
} ifelse
/MFontDict 50 dict def
/MStrCat
{
exch
dup length
2 index length add
string
dup 3 1 roll
copy
length
exch dup
4 2 roll exch
putinterval
} def
/MCreateEncoding
{
1 index
255 string cvs
(-) MStrCat
1 index MStrCat
cvn exch
(Encoding) MStrCat
cvn dup where
{
exch get
}
{
pop
StandardEncoding
} ifelse
3 1 roll
dup MFontDict exch known not
{
1 index findfont
dup length dict
begin
{1 index /FID ne
{def}
{pop pop}
ifelse} forall
/Encoding 3 index
def
currentdict
end
1 index exch definefont pop
MFontDict 1 index
null put
}
if
exch pop
exch pop
} def
/ISOLatin1 { (ISOLatin1) MCreateEncoding } def
/ISO8859 { (ISOLatin1) MCreateEncoding } def
/Mcopyfont {
dup
maxlength
dict
exch
{
1 index
/FID
eq
{
pop pop
}
{
2 index
3 1 roll
put
}
ifelse
}
forall
} def
/Plain	/Courier findfont Mcopyfont definefont pop
/Bold	/Courier-Bold findfont Mcopyfont definefont pop
/Italic /Courier-Oblique findfont Mcopyfont definefont pop
/MathPictureStart {
gsave
Mtransform
Mlmarg
Mbmarg
translate
Mwidth
Mlmarg Mrmarg add
sub
/Mwidth exch def
Mheight
Mbmarg Mtmarg add
sub
/Mheight exch def
/Mtmatrix
matrix currentmatrix
def
/Mgmatrix
matrix currentmatrix
def
} bind def
/MathPictureEnd {
grestore
} bind def
/MFill {
0 0 		moveto
Mwidth 0 	lineto
Mwidth Mheight 	lineto
0 Mheight 	lineto
fill
} bind def
/MPlotRegion {
3 index
Mwidth mul
2 index
Mheight mul
translate
exch sub
Mheight mul
/Mheight
exch def
exch sub
Mwidth mul
/Mwidth
exch def
} bind def
/MathSubStart {
Momatrix
Mgmatrix Mtmatrix
Mwidth Mheight
7 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
Mgmatrix setmatrix
9 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
2 copy translate
/Mtmatrix matrix currentmatrix def
3 -1 roll
exch sub
/Mheight exch def
sub
/Mwidth exch def
} bind def
/MathSubEnd {
/Mheight exch def
/Mwidth exch def
/Mtmatrix exch def
dup setmatrix
/Mgmatrix exch def
/Momatrix exch def
} bind def
/Mdot {
moveto
0 0 rlineto
stroke
} bind def
/Mtetra {
moveto
lineto
lineto
lineto
fill
} bind def
/Metetra {
moveto
lineto
lineto
lineto
closepath
gsave
fill
grestore
0 setgray
stroke
} bind def
/Mistroke {
flattenpath
0 0 0
{
4 2 roll
pop pop
}
{
4 -1 roll
2 index
sub dup mul
4 -1 roll
2 index
sub dup mul
add sqrt
4 -1 roll
add
3 1 roll
}
{
stop
}
{
stop
}
pathforall
pop pop
currentpoint
stroke
moveto
currentdash
3 -1 roll
add
setdash
} bind def
/Mfstroke {
stroke
currentdash
pop 0
setdash
} bind def
/Mrotsboxa {
gsave
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
grestore
Msboxa
3  -1 roll
/Mtmatrix
exch def
/Mrot
0 def
} bind def
/Msboxa {
newpath
5 -1 roll
Mvboxa
pop
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Msboxa1
5 -3 roll
Msboxa1
Mboxrot
[
7 -2 roll
2 copy
[
3 1 roll
10 -1 roll
9 -1 roll
]
6 1 roll
5 -2 roll
]
} bind def
/Msboxa1 {
sub
2 div
dup
2 index
1 add
mul
3 -1 roll
-1 add
3 -1 roll
mul
} bind def
/Mvboxa	{
Mfixwid
{
Mvboxa1
}
{
dup
Mwidthcal
0 exch
{
add
}
forall
exch
Mvboxa1
4 index
7 -1 roll
add
4 -1 roll
pop
3 1 roll
}
ifelse
} bind def
/Mvboxa1 {
gsave
newpath
[ true
3 -1 roll
{
Mbbox
5 -1 roll
{
0
5 1 roll
}
{
7 -1 roll
exch sub
(m) stringwidth pop
.3 mul
sub
7 1 roll
6 -1 roll
4 -1 roll
Mmin
3 -1 roll
5 index
add
5 -1 roll
4 -1 roll
Mmax
4 -1 roll
}
ifelse
false
}
forall
{ stop } if
counttomark
1 add
4 roll
]
grestore
} bind def
/Mbbox {
1 dict begin
0 0 moveto
/temp (T) def
{	gsave
currentpoint newpath moveto
temp 0 3 -1 roll put temp
false charpath flattenpath currentpoint
pathbbox
grestore moveto lineto moveto} forall
pathbbox
newpath
end
} bind def
/Mmin {
2 copy
gt
{ exch } if
pop
} bind def
/Mmax {
2 copy
lt
{ exch } if
pop
} bind def
/Mrotshowa {
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
Mgmatrix setmatrix
Mshowa
/Mtmatrix
exch def
/Mrot 0 def
} bind def
/Mshowa {
4 -2 roll
moveto
2 index
Mtmatrix setmatrix
Mvboxa
7 1 roll
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Mshowa1
4 1 roll
Mshowa1
rmoveto
currentpoint
Mfixwid
{
Mshowax
}
{
Mshoway
}
ifelse
pop pop pop pop
Mgmatrix setmatrix
} bind def
/Mshowax {	
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
Mfixdash
{
Mfixdashp		
}
if
show
} for
} bind def
/Mfixdashp {
dup
length
1
gt
1 index
true exch
{
45
eq
and
} forall
and
{
gsave
(--)		
stringwidth pop
(-)
stringwidth pop
sub
2 div
0 rmoveto
dup
length
1 sub
{
(-)
show
}
repeat
grestore
}
if
} bind def	
/Mshoway {
3 index
Mwidthcal
5 1 roll
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
[
6 index
aload
length
2 add
-1 roll
{
pop
Strform
stringwidth
pop
neg 
exch
add
0 rmoveto
}
exch
kshow
cleartomark
} for
pop	
} bind def
/Mwidthcal {
[
exch
{
Mwidthcal1
}
forall
]
[
exch
dup
Maxlen
-1 add
0 1
3 -1 roll
{
[
exch
2 index
{		 
1 index	
Mget
exch
}
forall		
pop
Maxget
exch
}
for
pop
]
Mreva
} bind def
/Mreva	{
[
exch
aload
length
-1 1
{1 roll}
for
]
} bind def
/Mget	{
1 index
length
-1 add
1 index
ge
{
get
}
{
pop pop
0
}
ifelse
} bind def
/Maxlen	{
[
exch
{
length
}
forall
Maxget
} bind def
/Maxget	{
counttomark
-1 add
1 1
3 -1 roll
{
pop
Mmax
}
for
exch
pop
} bind def
/Mwidthcal1 {
[
exch
{
Strform
stringwidth
pop
}
forall
]
} bind def
/Strform {
/tem (x) def
tem 0
3 -1 roll
put
tem
} bind def
/Mshowa1 {
2 copy
add
4 1 roll
sub
mul
sub
-2 div
} bind def
/MathScale {
Mwidth
Mheight
Mlp
translate
scale
/yscale exch def
/ybias exch def
/xscale exch def
/xbias exch def
/Momatrix
xscale yscale matrix scale
xbias ybias matrix translate
matrix concatmatrix def
/Mgmatrix
matrix currentmatrix
def
} bind def
/Mlp {
3 copy
Mlpfirst
{
Mnodistort
{
Mmin
dup
} if
4 index
2 index
2 index
Mlprun
11 index
11 -1 roll
10 -4 roll
Mlp1
8 index
9 -5 roll
Mlp1
4 -1 roll
and
{ exit } if
3 -1 roll
pop pop
} loop
exch
3 1 roll
7 -3 roll
pop pop pop
} bind def
/Mlpfirst {
3 -1 roll
dup length
2 copy
-2 add
get
aload
pop pop pop
4 -2 roll
-1 add
get
aload
pop pop pop
6 -1 roll
3 -1 roll
5 -1 roll
sub
div
4 1 roll
exch sub
div
} bind def
/Mlprun {
2 copy
4 index
0 get
dup
4 1 roll
Mlprun1
3 copy
8 -2 roll
9 -1 roll
{
3 copy
Mlprun1
3 copy
11 -3 roll
/gt Mlpminmax
8 3 roll
11 -3 roll
/lt Mlpminmax
8 3 roll
} forall
pop pop pop pop
3 1 roll
pop pop
aload pop
5 -1 roll
aload pop
exch
6 -1 roll
Mlprun2
8 2 roll
4 -1 roll
Mlprun2
6 2 roll
3 -1 roll
Mlprun2
4 2 roll
exch
Mlprun2
6 2 roll
} bind def
/Mlprun1 {
aload pop
exch
6 -1 roll
5 -1 roll
mul add
4 -2 roll
mul
3 -1 roll
add
} bind def
/Mlprun2 {
2 copy
add 2 div
3 1 roll
exch sub
} bind def
/Mlpminmax {
cvx
2 index
6 index
2 index
exec
{
7 -3 roll
4 -1 roll
} if
1 index
5 index
3 -1 roll
exec
{
4 1 roll
pop
5 -1 roll
aload
pop pop
4 -1 roll
aload pop
[
8 -2 roll
pop
5 -2 roll
pop
6 -2 roll
pop
5 -1 roll
]
4 1 roll
pop
}
{
pop pop pop
} ifelse
} bind def
/Mlp1 {
5 index
3 index	sub
5 index
2 index mul
1 index
le
1 index
0 le
or
dup
not
{
1 index
3 index	div
.99999 mul
8 -1 roll
pop
7 1 roll
}
if
8 -1 roll
2 div
7 -2 roll
pop sub
5 index
6 -3 roll
pop pop
mul sub
exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
outflag
1
eq
{
/outflag 0 def
/intop 0 def
/inrht 0 def
} if		
5 index
gsave
Mtmatrix setmatrix
Mvboxa pop
grestore
3 -1 roll
pop
dup
intop
gt
{
/intop
exch def
}
{ pop }
ifelse
dup
inrht
gt
{
/inrht
exch def
}
{ pop }
ifelse
pop
/inflag
1 def
} bind def
/Mouter {
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
inflag
1 eq
{
dup
0 lt
{
dup
intop
mul
neg
/yadtop
exch def
} if
dup
0 gt
{
dup
intop
mul
/yadbot
exch def
}
if
pop
dup
0 lt
{
dup
inrht
mul
neg
/xadrht
exch def
} if
dup
0 gt
{
dup
inrht
mul
/xadlft
exch def
} if
pop
/outflag 1 def
}
{ pop pop}
ifelse
/inflag 0 def
/inrht 0 def
/intop 0 def
} bind def	
/Mboxout {
outflag
1
eq
{
4 -1
roll
xadlft
leadjust
add
sub
4 1 roll
3 -1
roll
yadbot
leadjust
add
sub
3 1
roll
exch
xadrht
leadjust
add
add
exch
yadtop
leadjust
add
add
/outflag 0 def
/xadlft 0 def
/yadbot 0 def
/xadrht 0 def
/yadtop 0 def
} if
} bind def
/leadjust {
(m) stringwidth pop
.5 mul
} bind def
/Mrotcheck {
dup
90
eq
{
yadbot
/yadbot
xadrht
def	
/xadrht
yadtop
def
/yadtop
xadlft
def
/xadlft
exch
def
}
if
dup
cos
1 index
sin
Checkaux
dup
cos
1 index
sin neg
exch
Checkaux
3 1 roll
pop pop
} bind def
/Checkaux {
4 index
exch
4 index
mul
3 1 roll
mul add
4 1 roll
} bind def
/Mboxrot {
Mrot
90 eq
{
brotaux
4 2
roll
}
if
Mrot
180 eq
{
4 2
roll
brotaux
4 2
roll
brotaux
}	
if
Mrot
270 eq
{
4 2
roll
brotaux
}
if
} bind def
/brotaux {
neg
exch
neg
} bind def
/Mabsproc {
0
matrix defaultmatrix
dtransform idtransform
dup mul exch
dup mul
add sqrt
} bind def
/Mabswid {
Mabsproc
setlinewidth	
} bind def
/Mabsdash {
exch
[
exch
{
Mabsproc
}
forall
]
exch
setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop}
repeat
} bind def
} ifelse
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/setcmykcolor where
{ pop}
{ /setcmykcolor {
4 1
roll
[
4 1 
roll
]
{
1 index
sub
1
sub neg
dup
0
lt
{
pop
0
}
if
dup
1
gt
{
pop
1
}
if
exch
} forall
pop
setrgbcolor
} bind def
} ifelse
/Mcharproc
{
currentfile
(x)
readhexstring
pop
0 get
exch
div
} bind def
/Mshadeproc
{
dup
3 1
roll
{
dup
Mcharproc
3 1
roll
} repeat
1 eq
{
setgray
}
{
3 eq
{
setrgbcolor
}
{
setcmykcolor
} ifelse
} ifelse
} bind def
/Mrectproc
{
3 index
2 index
moveto
2 index
3 -1
roll
lineto
dup
3 1
roll
lineto
lineto
fill
} bind def
/Mcolorimage
{
7 1
roll
pop
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
9 index
Mshadeproc
Mrectproc
} for
pop
} for
pop pop pop pop
} bind def
/Mimage
{
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
Mcharproc
setgray
Mrectproc
} for
pop
} for
pop pop pop
} bind def

MathPictureStart
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0454545 0.909091 0.0176581 0.353162 [
[(0)] .04545 0 0 2 0 Minner Mrotsboxa
[(0.2)] .22727 0 0 2 0 Minner Mrotsboxa
[(0.4)] .40909 0 0 2 0 Minner Mrotsboxa
[(0.6)] .59091 0 0 2 0 Minner Mrotsboxa
[(0.8)] .77273 0 0 2 0 Minner Mrotsboxa
[(1)] .95455 0 0 2 0 Minner Mrotsboxa
[()] .5 0 0 2 0 0 -1 Mouter Mrotsboxa
[(0)] -0.0125 .01766 1 0 0 Minner Mrotsboxa
[(0.25)] -0.0125 .10595 1 0 0 Minner Mrotsboxa
[(0.5)] -0.0125 .19424 1 0 0 Minner Mrotsboxa
[(0.75)] -0.0125 .28253 1 0 0 Minner Mrotsboxa
[(1)] -0.0125 .37082 1 0 0 Minner Mrotsboxa
[(1.25)] -0.0125 .45911 1 0 0 Minner Mrotsboxa
[(1.5)] -0.0125 .5474 1 0 0 Minner Mrotsboxa
[(R = 100, 500, 10000)] .5 .61803 0 -4 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 .61903 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 g
p
p
.002 w
.04545 0 m
.04545 .00625 L
s
P
[(0)] .04545 0 0 2 0 Minner Mrotshowa
p
.002 w
.22727 0 m
.22727 .00625 L
s
P
[(0.2)] .22727 0 0 2 0 Minner Mrotshowa
p
.002 w
.40909 0 m
.40909 .00625 L
s
P
[(0.4)] .40909 0 0 2 0 Minner Mrotshowa
p
.002 w
.59091 0 m
.59091 .00625 L
s
P
[(0.6)] .59091 0 0 2 0 Minner Mrotshowa
p
.002 w
.77273 0 m
.77273 .00625 L
s
P
[(0.8)] .77273 0 0 2 0 Minner Mrotshowa
p
.002 w
.95455 0 m
.95455 .00625 L
s
P
[(1)] .95455 0 0 2 0 Minner Mrotshowa
p
.001 w
.08182 0 m
.08182 .00375 L
s
P
p
.001 w
.11818 0 m
.11818 .00375 L
s
P
p
.001 w
.15455 0 m
.15455 .00375 L
s
P
p
.001 w
.19091 0 m
.19091 .00375 L
s
P
p
.001 w
.26364 0 m
.26364 .00375 L
s
P
p
.001 w
.3 0 m
.3 .00375 L
s
P
p
.001 w
.33636 0 m
.33636 .00375 L
s
P
p
.001 w
.37273 0 m
.37273 .00375 L
s
P
p
.001 w
.44545 0 m
.44545 .00375 L
s
P
p
.001 w
.48182 0 m
.48182 .00375 L
s
P
p
.001 w
.51818 0 m
.51818 .00375 L
s
P
p
.001 w
.55455 0 m
.55455 .00375 L
s
P
p
.001 w
.62727 0 m
.62727 .00375 L
s
P
p
.001 w
.66364 0 m
.66364 .00375 L
s
P
p
.001 w
.7 0 m
.7 .00375 L
s
P
p
.001 w
.73636 0 m
.73636 .00375 L
s
P
p
.001 w
.80909 0 m
.80909 .00375 L
s
P
p
.001 w
.84545 0 m
.84545 .00375 L
s
P
p
.001 w
.88182 0 m
.88182 .00375 L
s
P
p
.001 w
.91818 0 m
.91818 .00375 L
s
P
p
.001 w
.00909 0 m
.00909 .00375 L
s
P
p
.001 w
.99091 0 m
.99091 .00375 L
s
P
[()] .5 0 0 2 0 0 -1 Mouter Mrotshowa
p
.002 w
0 0 m
1 0 L
s
P
p
.002 w
0 .01766 m
.00625 .01766 L
s
P
[(0)] -0.0125 .01766 1 0 0 Minner Mrotshowa
p
.002 w
0 .10595 m
.00625 .10595 L
s
P
[(0.25)] -0.0125 .10595 1 0 0 Minner Mrotshowa
p
.002 w
0 .19424 m
.00625 .19424 L
s
P
[(0.5)] -0.0125 .19424 1 0 0 Minner Mrotshowa
p
.002 w
0 .28253 m
.00625 .28253 L
s
P
[(0.75)] -0.0125 .28253 1 0 0 Minner Mrotshowa
p
.002 w
0 .37082 m
.00625 .37082 L
s
P
[(1)] -0.0125 .37082 1 0 0 Minner Mrotshowa
p
.002 w
0 .45911 m
.00625 .45911 L
s
P
[(1.25)] -0.0125 .45911 1 0 0 Minner Mrotshowa
p
.002 w
0 .5474 m
.00625 .5474 L
s
P
[(1.5)] -0.0125 .5474 1 0 0 Minner Mrotshowa
p
.001 w
0 .03532 m
.00375 .03532 L
s
P
p
.001 w
0 .05297 m
.00375 .05297 L
s
P
p
.001 w
0 .07063 m
.00375 .07063 L
s
P
p
.001 w
0 .08829 m
.00375 .08829 L
s
P
p
.001 w
0 .12361 m
.00375 .12361 L
s
P
p
.001 w
0 .14126 m
.00375 .14126 L
s
P
p
.001 w
0 .15892 m
.00375 .15892 L
s
P
p
.001 w
0 .17658 m
.00375 .17658 L
s
P
p
.001 w
0 .2119 m
.00375 .2119 L
s
P
p
.001 w
0 .22956 m
.00375 .22956 L
s
P
p
.001 w
0 .24721 m
.00375 .24721 L
s
P
p
.001 w
0 .26487 m
.00375 .26487 L
s
P
p
.001 w
0 .30019 m
.00375 .30019 L
s
P
p
.001 w
0 .31785 m
.00375 .31785 L
s
P
p
.001 w
0 .3355 m
.00375 .3355 L
s
P
p
.001 w
0 .35316 m
.00375 .35316 L
s
P
p
.001 w
0 .38848 m
.00375 .38848 L
s
P
p
.001 w
0 .40614 m
.00375 .40614 L
s
P
p
.001 w
0 .42379 m
.00375 .42379 L
s
P
p
.001 w
0 .44145 m
.00375 .44145 L
s
P
p
.001 w
0 .47677 m
.00375 .47677 L
s
P
p
.001 w
0 .49443 m
.00375 .49443 L
s
P
p
.001 w
0 .51209 m
.00375 .51209 L
s
P
p
.001 w
0 .52974 m
.00375 .52974 L
s
P
p
.001 w
0 .56506 m
.00375 .56506 L
s
P
p
.001 w
0 .58272 m
.00375 .58272 L
s
P
p
.001 w
0 .60038 m
.00375 .60038 L
s
P
p
.002 w
0 0 m
0 .61803 L
s
P
P
p
p
.002 w
.04545 .61178 m
.04545 .61803 L
s
P
p
.002 w
.22727 .61178 m
.22727 .61803 L
s
P
p
.002 w
.40909 .61178 m
.40909 .61803 L
s
P
p
.002 w
.59091 .61178 m
.59091 .61803 L
s
P
p
.002 w
.77273 .61178 m
.77273 .61803 L
s
P
p
.002 w
.95455 .61178 m
.95455 .61803 L
s
P
p
.001 w
.08182 .61428 m
.08182 .61803 L
s
P
p
.001 w
.11818 .61428 m
.11818 .61803 L
s
P
p
.001 w
.15455 .61428 m
.15455 .61803 L
s
P
p
.001 w
.19091 .61428 m
.19091 .61803 L
s
P
p
.001 w
.26364 .61428 m
.26364 .61803 L
s
P
p
.001 w
.3 .61428 m
.3 .61803 L
s
P
p
.001 w
.33636 .61428 m
.33636 .61803 L
s
P
p
.001 w
.37273 .61428 m
.37273 .61803 L
s
P
p
.001 w
.44545 .61428 m
.44545 .61803 L
s
P
p
.001 w
.48182 .61428 m
.48182 .61803 L
s
P
p
.001 w
.51818 .61428 m
.51818 .61803 L
s
P
p
.001 w
.55455 .61428 m
.55455 .61803 L
s
P
p
.001 w
.62727 .61428 m
.62727 .61803 L
s
P
p
.001 w
.66364 .61428 m
.66364 .61803 L
s
P
p
.001 w
.7 .61428 m
.7 .61803 L
s
P
p
.001 w
.73636 .61428 m
.73636 .61803 L
s
P
p
.001 w
.80909 .61428 m
.80909 .61803 L
s
P
p
.001 w
.84545 .61428 m
.84545 .61803 L
s
P
p
.001 w
.88182 .61428 m
.88182 .61803 L
s
P
p
.001 w
.91818 .61428 m
.91818 .61803 L
s
P
p
.001 w
.00909 .61428 m
.00909 .61803 L
s
P
p
.001 w
.99091 .61428 m
.99091 .61803 L
s
P
[(R = 100, 500, 10000)] .5 .61803 0 -4 Mshowa
p
.002 w
0 .61803 m
1 .61803 L
s
P
p
.002 w
.99375 .01766 m
1 .01766 L
s
P
p
.002 w
.99375 .10595 m
1 .10595 L
s
P
p
.002 w
.99375 .19424 m
1 .19424 L
s
P
p
.002 w
.99375 .28253 m
1 .28253 L
s
P
p
.002 w
.99375 .37082 m
1 .37082 L
s
P
p
.002 w
.99375 .45911 m
1 .45911 L
s
P
p
.002 w
.99375 .5474 m
1 .5474 L
s
P
p
.001 w
.99625 .03532 m
1 .03532 L
s
P
p
.001 w
.99625 .05297 m
1 .05297 L
s
P
p
.001 w
.99625 .07063 m
1 .07063 L
s
P
p
.001 w
.99625 .08829 m
1 .08829 L
s
P
p
.001 w
.99625 .12361 m
1 .12361 L
s
P
p
.001 w
.99625 .14126 m
1 .14126 L
s
P
p
.001 w
.99625 .15892 m
1 .15892 L
s
P
p
.001 w
.99625 .17658 m
1 .17658 L
s
P
p
.001 w
.99625 .2119 m
1 .2119 L
s
P
p
.001 w
.99625 .22956 m
1 .22956 L
s
P
p
.001 w
.99625 .24721 m
1 .24721 L
s
P
p
.001 w
.99625 .26487 m
1 .26487 L
s
P
p
.001 w
.99625 .30019 m
1 .30019 L
s
P
p
.001 w
.99625 .31785 m
1 .31785 L
s
P
p
.001 w
.99625 .3355 m
1 .3355 L
s
P
p
.001 w
.99625 .35316 m
1 .35316 L
s
P
p
.001 w
.99625 .38848 m
1 .38848 L
s
P
p
.001 w
.99625 .40614 m
1 .40614 L
s
P
p
.001 w
.99625 .42379 m
1 .42379 L
s
P
p
.001 w
.99625 .44145 m
1 .44145 L
s
P
p
.001 w
.99625 .47677 m
1 .47677 L
s
P
p
.001 w
.99625 .49443 m
1 .49443 L
s
P
p
.001 w
.99625 .51209 m
1 .51209 L
s
P
p
.001 w
.99625 .52974 m
1 .52974 L
s
P
p
.001 w
.99625 .56506 m
1 .56506 L
s
P
p
.001 w
.99625 .58272 m
1 .58272 L
s
P
p
.001 w
.99625 .60038 m
1 .60038 L
s
P
p
.002 w
1 0 m
1 .61803 L
s
P
P
p
P
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
p
p
p
.001 w
.04545 .01766 m
.06439 .18996 L
.08333 .32148 L
.0928 .37392 L
.10227 .41818 L
.11174 .45503 L
.12121 .48537 L
.13068 .50972 L
.14015 .52933 L
.14962 .54466 L
.15909 .55641 L
.16856 .56514 L
.17803 .5714 L
.18277 .57375 L
.1875 .57564 L
.19223 .5771 L
.19697 .57819 L
.19934 .57863 L
.2017 .57899 L
.20407 .57928 L
.20644 .5795 L
.20762 .57959 L
.20881 .57965 L
.20999 .57971 L
.21117 .57974 L
.21236 .57977 L
.21354 .57978 L
.21473 .57977 L
.21591 .57975 L
.21709 .57972 L
.21828 .57968 L
.22064 .57956 L
.22301 .5794 L
.22538 .57918 L
.23011 .57862 L
.23485 .57791 L
.25379 .57397 L
.27273 .56859 L
.31061 .55494 L
.34848 .53838 L
.38636 .51933 L
.42424 .49787 L
.46212 .47407 L
.5 .44809 L
.53788 .42007 L
.57576 .39004 L
.61364 .35828 L
.65152 .32487 L
.68939 .28985 L
.72727 .25357 L
Mistroke
.76515 .21611 L
.80303 .17766 L
.84091 .1384 L
.87879 .09852 L
.91667 .0582 L
.95455 .01766 L
Mfstroke
P
P
p
p
.001 w
.04545 .01766 m
.05492 .20008 L
.06439 .33576 L
.06913 .38763 L
.07386 .4309 L
.0786 .46627 L
.08333 .49434 L
.08807 .51689 L
.0928 .53429 L
.09754 .54754 L
.10227 .55764 L
.10701 .56502 L
.11174 .57023 L
.11411 .57225 L
.11648 .57392 L
.11884 .57527 L
.12121 .57634 L
.12358 .5772 L
.12595 .57785 L
.12831 .57835 L
.1295 .57854 L
.13068 .57871 L
.13187 .57885 L
.13305 .57895 L
.13423 .57904 L
.13542 .57909 L
.1366 .57913 L
.13778 .57914 L
.13897 .57914 L
.14015 .57912 L
.14134 .57908 L
.14252 .57903 L
.14489 .57889 L
.14725 .57869 L
.14962 .57846 L
.15909 .57724 L
.17803 .57395 L
.19697 .56998 L
.23485 .56007 L
.27273 .54775 L
.31061 .53308 L
.34848 .51604 L
.38636 .49676 L
.42424 .47536 L
.46212 .45192 L
.5 .42649 L
.53788 .39923 L
.57576 .37027 L
.61364 .33975 L
.65152 .30777 L
Mistroke
.68939 .27444 L
.72727 .23994 L
.76515 .20445 L
.80303 .16813 L
.84091 .13113 L
.87879 .09361 L
.91667 .05574 L
.95455 .01766 L
Mfstroke
P
P
p
p
.001 w
.04545 .01766 m
.04782 .21358 L
.05019 .35365 L
.05137 .40678 L
.05256 .44779 L
.05374 .48003 L
.05492 .5064 L
.05611 .52538 L
.05729 .53998 L
.05848 .55109 L
.05966 .5589 L
.06084 .56436 L
.06203 .5681 L
.06321 .57063 L
.06439 .57226 L
.06558 .57331 L
.06676 .57398 L
.06795 .57439 L
.06913 .5746 L
.07031 .57471 L
.0715 .57476 L
.07268 .57478 L
.07386 .57477 L
.07623 .57467 L
.0786 .57456 L
.08333 .57435 L
.08807 .57407 L
.0928 .57374 L
.10227 .57297 L
.12121 .57102 L
.14015 .56845 L
.15909 .5653 L
.19697 .55723 L
.23485 .54683 L
.27273 .53413 L
.31061 .51919 L
.34848 .50208 L
.38636 .48285 L
.42424 .46163 L
.46212 .4385 L
.5 .41353 L
.53788 .38687 L
.57576 .35861 L
.61364 .32889 L
.65152 .29781 L
.68939 .26549 L
.72727 .2321 L
.76515 .19779 L
.80303 .1627 L
.84091 .127 L
Mistroke
.87879 .09082 L
.91667 .05433 L
.95455 .01766 L
Mfstroke
P
P
P
% End of Graphics
MathPictureEnd
end
showpage
%%EndDocument
 @endspecial 581 1371 a(Figure)14 b(32:)j(T)m(est)e(Problem)d(32,)h
Fl(y)1129 1356 y Fk(0)1142 1371 y Fm(\()p Fl(x)p Fm(\))h(v)o(ersus)h
Fl(x)p eop
%%Page: 33 33
33 32 bop 262 307 a Fb(References)282 398 y Fm([1])20
b(U.)g(Asc)o(her,)i(R.M.M.)c(Mattheij,)j(and)f(R.D.)f(Russell.)36
b Fa(Numeric)n(al)20 b(Solution)h(of)347 448 y(Boundary)e(V)m(alue)e
(Pr)n(oblems)g(for)g(Or)n(dinary)g(Di\013er)n(ential)g(Equations)p
Fm(.)27 b(Pren)o(tice-)347 498 y(Hall,)12 b(Englew)o(o)q(o)q(d)i
(Cli\013s,)f(N.J.,)g(1988.)282 581 y([2])20 b(J.R.)d(Cash.)32
b(A)19 b(comparison)e(of)h(some)g(global)f(metho)q(ds)h(for)g(solving)g
(t)o(w)o(o-p)q(oin)o(t)347 631 y(b)q(oundary)c(v)n(alue)f(problems.)k
Fa(Appl.)d(Math.)i(Comput.)p Fm(,)d(31:449{462,)d(1989.)282
714 y([3])20 b(J.R.)15 b(Cash)h(and)h(M.H.)e(W)m(righ)o(t.)24
b(A)16 b(deferred)i(correction)g(metho)q(d)d(for)h(nonlinear)347
763 y(t)o(w)o(o-p)q(oin)o(t)c(b)q(oundary)h(v)n(alue)f(problems:)k
(Implemen)o(tation)10 b(and)j(n)o(umerical)e(ev)n(alu-)347
813 y(ation.)17 b Fa(SIAM)e(J.)g(Sci.)f(Stat.)h(Comput.)p
Fm(,)e(12:971{989,)e(1991.)282 896 y([4])20 b(J.D.)j(Cole.)50
b Fa(Perturb)n(ation)24 b(Metho)n(ds)i(in)e(Applie)n(d)h(Mathematics)p
Fm(.)50 b(Blaisdell,)347 946 y(W)m(altham,)10 b(MA,)k(1968.)282
1029 y([5])20 b(C.)e(de)h(Bo)q(or)g(and)f(R.)g(W)m(eiss.)32
b(SOL)-5 b(VEBLOK:)20 b(A)f(pac)o(k)n(age)f(for)g(solving)f(almost)347
1079 y(blo)q(c)o(k)12 b(diagonal)e(linear)i(systems.)k
Fa(A)o(CM)d(T)m(r)n(ans.)g(Math.)g(Softwar)n(e)p Fm(,)f(6:80{87,)e
(1980.)282 1162 y([6])20 b(P)m(.W.)8 b(Hemk)o(er.)j Fa(A)g(Numeric)n
(al)f(Study)i(of)f(Sti\013)h(Two-Point)f(Boundary)h(V)m(alue)f(Pr)n
(ob-)347 1212 y(lems)p Fm(.)17 b(Mathematisc)o(h)c(Cen)o(trum,)g
(Amsterdam,)f(1977.)282 1295 y([7])20 b(M.)10 b(Len)o(tini)f(and)h(V.)g
(P)o(ereyra.)j(An)d(adaptiv)o(e)g(\014nite)g(di\013erence)i(solv)o(er)e
(for)g(nonlinear)347 1345 y(t)o(w)o(o-p)q(oin)o(t)15
b(b)q(oundary)h(v)n(alue)f(problems)g(with)g(mild)f(b)q(oundary)i(la)o
(y)o(ers.)24 b Fa(SIAM)17 b(J.)347 1394 y(Numer.)d(A)o(nal.)p
Fm(,)f(14:91{111,)e(1977.)282 1477 y([8])20 b(M.R.)c(Maier.)29
b(Numerical)17 b(solution)f(of)i(singularly)e(p)q(erturb)q(ed)k(b)q
(oundary)d(v)n(alue)347 1527 y(problems)g(using)g(a)h(collo)q(cation)e
(metho)q(d)h(with)h(tension)g(splines.)30 b(In)18 b(U.)f(Asc)o(her)347
1577 y(and)10 b(R.D.)f(Russell,)i(editors,)g Fa(Numeric)n(al)g
(Boundary)i(V)m(alue)f(Or)n(dinary)f(Di\013er)n(ential)347
1627 y(Equations)p Fm(,)j(pages)g(207{225.)e(Birkh\177)-21
b(auser,)14 b(Boston,)g(MA,)g(1985.)282 1710 y([9])20
b(R.E.)9 b(O'Malley)m(,)h(Jr.)j Fa(Intr)n(o)n(duction)g(to)f(Singular)g
(Perturb)n(ations)p Fm(.)g(Academic)e(Press,)347 1760
y(New)k(Y)m(ork,)f(1974.)262 1843 y([10])19 b(C.E.)f(P)o(earson.)32
b(On)19 b(nonlinear)f(ordinary)g(di\013eren)o(tial)g(equations)h(of)f
(b)q(oundary)347 1892 y(la)o(y)o(er)13 b(t)o(yp)q(e.)19
b Fa(J.)14 b(Math.)h(Phys.)p Fm(,)f(47:351{358,)c(1968.)262
1976 y([11])19 b(M.R.)d(Scott)h(and)g(H.A.)g(W)m(atts.)27
b(Computational)14 b(solution)i(of)h(linear)g(t)o(w)o(o-p)q(oin)o(t)347
2025 y(b)q(oundary)d(v)n(alue)f(problems)f(via)h(orthonormalization.)i
Fa(SIAM)g(J.)f(Numer.)g(A)o(nal.)p Fm(,)347 2075 y(14:40{70,)d(1977.)
262 2158 y([12])19 b(W.)f(W)m(aso)o(w.)33 b(The)20 b(capriciousness)g
(of)f(singular)f(p)q(erturbations.)35 b Fa(Nieuw)19 b(A)o(r)n(ch.)347
2208 y(Wisk)p Fm(,)13 b(18:190{210,)e(1970.)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
