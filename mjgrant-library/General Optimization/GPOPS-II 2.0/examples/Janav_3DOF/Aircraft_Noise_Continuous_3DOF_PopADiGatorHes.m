% This code was generated using ADiGator version 1.3
% ©2010-2014 Matthew J. Weinstein and Anil V. Rao
% ADiGator may be obtained at https://sourceforge.net/projects/adigator/ 
% Contact: mweinstein@ufl.edu
% Bugs/suggestions may be reported to the sourceforge forums
%                    DISCLAIMER
% ADiGator is a general-purpose software distributed under the GNU General
% Public License version 3.0. While the software is distributed with the
% hope that it will be useful, both the software and generated code are
% provided 'AS IS' with NO WARRANTIES OF ANY KIND and no merchantability
% or fitness for any purpose or application.

function output = Aircraft_Noise_Continuous_3DOF_PopADiGatorHes(input)
global ADiGator_Aircraft_Noise_Continuous_3DOF_PopADiGatorHes
if isempty(ADiGator_Aircraft_Noise_Continuous_3DOF_PopADiGatorHes); ADiGator_LoadData(); end
Gator1Data = ADiGator_Aircraft_Noise_Continuous_3DOF_PopADiGatorHes.Aircraft_Noise_Continuous_3DOF_PopADiGatorHes.Gator1Data;
Gator2Data = ADiGator_Aircraft_Noise_Continuous_3DOF_PopADiGatorHes.Aircraft_Noise_Continuous_3DOF_PopADiGatorHes.Gator2Data;
% ADiGator Start Derivative Computations
%User Line: %----------------------------------------%
%User Line: % Begin File:  Aircraft Noise Continuous %
%User Line: %----------------------------------------%
%User Line: % Constants
mass = input.auxdata.mass;
%User Line: mass = input.auxdata.mass;
g0 = input.auxdata.g0;
%User Line: g0 = input.auxdata.g0;
C3 = input.auxdata.C3;
%User Line: C3 = input.auxdata.C3;
C1 = input.auxdata.C1;
%User Line: C1 = input.auxdata.C1;
C2 = input.auxdata.C2;
%User Line: C2 = input.auxdata.C2;
%User Line: % States and time
t.dV = input.phase.time.dV;
t.f = input.phase.time.f;
%User Line: t = input.phase.time;
state.dV = input.phase.state.dV;
state.f = input.phase.state.f;
%User Line: state = input.phase.state;
x.dV = state.dV(:,1);
x.f = state.f(:,1);
%User Line: x = state(:,1);
y.dV = state.dV(:,2);
y.f = state.f(:,2);
%User Line: y = state(:,2);
z.dV = state.dV(:,3);
z.f = state.f(:,3);
%User Line: z = state(:,3);
v.dV = state.dV(:,4);
v.f = state.f(:,4);
%User Line: v = state(:,4);
psi.dV = state.dV(:,5);
psi.f = state.f(:,5);
%User Line: psi = state(:,5);
gam.dV = state.dV(:,6);
gam.f = state.f(:,6);
%User Line: gam = state(:,6);
%User Line: % Controls
bank.dV = input.phase.control.dV(:,1);
bank.f = input.phase.control.f(:,1);
%User Line: bank = input.phase.control(:,1);
aoa.dV = input.phase.control.dV(:,2);
aoa.f = input.phase.control.f(:,2);
%User Line: aoa  = input.phase.control(:,2);
T.dV = input.phase.control.dV(:,3);
T.f = input.phase.control.f(:,3);
%User Line: T = input.phase.control(:,3);
%User Line: % Important parameters
L.f = mass*g0;
%User Line: L = mass.*g0;
cada2f1dV = 1.*v.f.^(1-1).*v.dV;
cada2f1 = v.f.^1;
cada2f2dV = 2.*cada2f1dV;
cada2f2 = 2*cada2f1;
cada1f1dVdV = v.dV.*cada2f2dV;
cada1f1dV = cada2f2.*v.dV;
cada1f1 = v.f.^2;
cada1f2dVdV = 0.226.*cada1f1dVdV;
cada1f2dV = 0.226*cada1f1dV;
cada1f2 = 0.226*cada1f1;
cada2f1dV = 1.*v.f.^(1-1).*v.dV;
cada2f1 = v.f.^1;
cada2f2dV = 2.*cada2f1dV;
cada2f2 = 2*cada2f1;
cada1f3dVdV = v.dV.*cada2f2dV;
cada1f3dV = cada2f2.*v.dV;
cada1f3 = v.f.^2;
cada2f1dV = 2.*cada1f3.^(2-1).*cada1f3dV;
cada2f1 = cada1f3.^2;
cada2f2dV = --5200000./cada2f1.^2.*cada2f1dV;
cada2f2 = -5200000./cada2f1;
cada2td1 = cada1f3dV.*cada2f2dV;
cada2td1 = cada2td1 + cada2f2.*cada1f3dVdV;
cada1f4dVdV = cada2td1;
cada1f4dV = cada2f2.*cada1f3dV;
cada1f4 = 5200000./cada1f3;
cada1td1dV = cada1f2dVdV; cada1td1 = cada1f2dV;
cada2td1 = cada1td1dV;
cada2td1 = cada2td1 + cada1f4dVdV;
cada1td1dV = cada2td1;
cada1td1 = cada1td1 + cada1f4dV;
D.dVdV = cada1td1dV; D.dV = cada1td1;
D.f = cada1f2 + cada1f4;
%User Line: D = 0.226.*v.^2 + 5.2e6./(v.^2);
gravity = g0;
%User Line: gravity = g0;
cada2f1dV = -sin(gam.f).*gam.dV;
cada2f1 = cos(gam.f);
sgam.dVdV = gam.dV.*cada2f1dV;
sgam.dV = cada2f1.*gam.dV;
sgam.f = sin(gam.f);
%User Line: sgam = sin(gam);
cada2f1dV = cos(gam.f).*gam.dV;
cada2f1 = sin(gam.f);
cada2f2dV = -cada2f1dV;
cada2f2 = uminus(cada2f1);
cgam.dVdV = gam.dV.*cada2f2dV;
cgam.dV = cada2f2.*gam.dV;
cgam.f = cos(gam.f);
%User Line: cgam = cos(gam);
%User Line: % Approximate population
%User Line: % keyboard
%User Line: % for count = 1:1:length(x)
%User Line: % pop(count) = population(x(count)/1000,y(count)/1000);
%User Line: % end
%User Line: % pop = -0.093425*x.^3 + 0.017248*x.^2.*y +...
%User Line: %     0.040138*x.^2 - 0.0035582*x.*y.^2 + 0.076212*x.*y +...
%User Line: %     1.3537*x - 0.0069758*x.^3 - 0.059675*y.^2 + 0.062387*y + 2.481;
%User Line: % Below code works
%User Line: % pop = 1;
%User Line: %
%User Line: % integrand  = log(C3)+5.2*log(T)+log(cos(gam))-(log(v)+2.5*log(h+50));
%User Line: % x1 = x/1000;
%User Line: % y1 = y/1000;
cada1f1dV = uminus(x.dV);
cada1f1 = 5500 - x.f;
cada2f1dV = exp(cada1f1).*cada1f1dV;
cada2f1 = exp(cada1f1);
pop.dVdV = cada1f1dV.*cada2f1dV;
pop.dV = cada2f1.*cada1f1dV;
pop.f = exp(cada1f1);
%User Line: pop = exp(5500-x);
%User Line: % pop = 2*(5500 -x);
%User Line: % pop = -0.093425*x1.^3 + 0.017248.*x1.^2.*y1 + 0.74082.*x1.^2 - 0.0035582.*x1.*y1.^2 - 0.010029.*x1.*y1 - 0.59874.*x1 - 0.0069758.*y1.^3 - 0.05078.*y1.^2 - 0.020341.*y1 + 0.8075;
cada1f1dVdV = C3.*pop.dVdV;
cada1f1dV = C3*pop.dV;
cada1f1 = pop.f*C3;
cada2f1dV = 4.2.*T.f.^(4.2-1).*T.dV;
cada2f1 = T.f.^4.2;
cada2f2dV = 5.2.*cada2f1dV;
cada2f2 = 5.2*cada2f1;
cada1f2dVdV = T.dV.*cada2f2dV;
cada1f2dV = cada2f2.*T.dV;
cada1f2 = T.f.^5.2;
cada2f1 = size(cada1f1dV,1);
cada1td1 = zeros(cada2f1,2);
cada2td1 = zeros(size(cada1f2dV,1),2);
cada2td1(:,2) = cada1f1dV.*cada1f2dV;
cada2td1(:,1) = cada2td1(:,1) + cada1f2.*cada1f1dVdV;
cada2f1dV = cada2td1;
cada2f1 = cada1f2.*cada1f1dV;
cada1td1dV = cada2f1dV;
cada1td1(:,1) = cada2f1;
cada2f1 = cada1td1(:,2);
cada2td1 = zeros(size(cada1f1dV,1),2);
cada2td1(:,1) = cada1f2dV.*cada1f1dV;
cada2td1(:,2) = cada2td1(:,2) + cada1f1.*cada1f2dVdV;
cada2f2dV = cada2td1;
cada2f2 = cada1f1.*cada1f2dV;
cada2f3dV = cada2f2dV;
cada2f3 = cada2f1 + cada2f2;
cada2td1 = zeros(size(cada1td1,1),4);
cada2td1(:,Gator2Data.Index1) = cada2f3dV;
cada2td1(:,Gator2Data.Index2) = cada1td1dV(:,Gator2Data.Index3);
cada1td1dV = cada2td1;
cada1td1(:,2) = cada2f3;
cada1f3dVdV = cada1td1dV; cada1f3dV = cada1td1;
cada1f3 = cada1f1.*cada1f2;
cada2f1dV = cos(gam.f).*gam.dV;
cada2f1 = sin(gam.f);
cada2f2dV = -cada2f1dV;
cada2f2 = uminus(cada2f1);
cada1f4dVdV = gam.dV.*cada2f2dV;
cada1f4dV = cada2f2.*gam.dV;
cada1f4 = cos(gam.f);
cada1tf1dV = cada1f4dV(:,Gator2Data.Index4);
cada1tf1 = cada1f4(:,Gator1Data.Index1);
cada2f1 = size(cada1f3dV,1);
cada1td1 = zeros(cada2f1,3);
cada2td1 = zeros(size(cada1tf1dV,1),6);
cada2td1(:,Gator2Data.Index5) = cada1f3dV.*cada1tf1dV;
cada2tf1 = cada1tf1(:,Gator2Data.Index6);
cada2td1(:,Gator2Data.Index7) = cada2td1(:,Gator2Data.Index7) + cada2tf1.*cada1f3dVdV;
cada2f1dV = cada2td1;
cada2f1 = cada1tf1.*cada1f3dV;
cada1td1dV = cada2f1dV;
cada1td1(:,Gator1Data.Index2) = cada2f1;
cada2f1 = cada1td1(:,2);
cada2tf1 = cada1f4dV(:,Gator2Data.Index8);
cada2td1 = zeros(size(cada1f3dV,1),3);
cada2td1(:,Gator2Data.Index9) = cada2tf1.*cada1f3dV;
cada2td1(:,2) = cada2td1(:,2) + cada1f3.*cada1f4dVdV;
cada2f2dV = cada2td1;
cada2f2 = cada1f3.*cada1f4dV;
cada2f3dV = cada2f2dV;
cada2f3 = cada2f1 + cada2f2;
cada2td1 = zeros(size(cada1td1,1),9);
cada2td1(:,Gator2Data.Index10) = cada2f3dV;
cada2td1(:,Gator2Data.Index11) = cada1td1dV(:,Gator2Data.Index12);
cada1td1dV = cada2td1;
cada1td1(:,2) = cada2f3;
cada1f5dVdV = cada1td1dV; cada1f5dV = cada1td1;
cada1f5 = cada1f3.*cada1f4;
cada1f6dV = z.dV;
cada1f6 = z.f + 50;
cada2f1dV = 1.5.*cada1f6.^(1.5-1).*cada1f6dV;
cada2f1 = cada1f6.^1.5;
cada2f2dV = 2.5.*cada2f1dV;
cada2f2 = 2.5*cada2f1;
cada1f7dVdV = cada1f6dV.*cada2f2dV;
cada1f7dV = cada2f2.*cada1f6dV;
cada1f7 = cada1f6.^2.5;
cada2f1 = size(v.dV,1);
cada1td1 = zeros(cada2f1,2);
cada2f1dV = v.dV.*cada1f7dV;
cada2f1 = cada1f7.*v.dV;
cada1td1dV = cada2f1dV;
cada1td1(:,2) = cada2f1;
cada2f1 = cada1td1(:,1);
cada2td1 = zeros(size(v.dV,1),2);
cada2td1(:,2) = cada1f7dV.*v.dV;
cada2td1(:,1) = cada2td1(:,1) + v.f.*cada1f7dVdV;
cada2f2dV = cada2td1;
cada2f2 = v.f.*cada1f7dV;
cada2f3dV = cada2f2dV;
cada2f3 = cada2f1 + cada2f2;
cada2td1 = zeros(size(cada1td1,1),3);
cada2td1(:,Gator2Data.Index13) = cada2f3dV;
cada2td1(:,2) = cada1td1dV(:,1);
cada1td1dV = cada2td1;
cada1td1(:,1) = cada2f3;
cada1f8dVdV = cada1td1dV; cada1f8dV = cada1td1;
cada1f8 = v.f.*cada1f7;
cada1tf1dV = cada1f8dV(:,Gator2Data.Index14);
cada1tf1 = cada1f8(:,Gator1Data.Index3);
cada2f1 = size(cada1f5dV,1);
cada1td1 = zeros(cada2f1,5);
cada2tf1 = cada1tf1(:,Gator2Data.Index15);
cada2td1 = zeros(size(cada1f5dVdV,1),15);
cada2td1(:,Gator2Data.Index16) = cada1f5dVdV./cada2tf1;
cada2tf1 = cada1f5dV(:,Gator2Data.Index17);
cada2tf2 = cada1tf1(:,Gator2Data.Index18);
cada2td1(:,Gator2Data.Index19) = cada2td1(:,Gator2Data.Index19) + -cada2tf1./cada2tf2.^2.*cada1tf1dV;
cada2f1dV = cada2td1;
cada2f1 = cada1f5dV./cada1tf1;
cada1td1dV = cada2f1dV;
cada1td1(:,Gator1Data.Index4) = cada2f1;
cada1tf1dV = cada1f5dV(:,Gator2Data.Index20);
cada1tf1 = cada1f5(:,Gator1Data.Index5);
cada1tf2dV = cada1f8dV(:,Gator2Data.Index21);
cada1tf2 = cada1f8(:,Gator1Data.Index6);
cada2f1 = cada1td1(:,Gator1Data.Index7);
cada2f2dV = -cada1tf1dV;
cada2f2 = uminus(cada1tf1);
cada2tf2 = cada1tf2(:,Gator2Data.Index22);
cada2f3dV = 2.*cada2tf2.^(2-1).*cada1tf2dV;
cada2f3 = cada1tf2.^2;
cada2tf1 = cada2f3(:,Gator2Data.Index23);
cada2td1 = zeros(size(cada2f2dV,1),10);
cada2td1(:,Gator2Data.Index24) = cada2f2dV./cada2tf1;
cada2tf1 = cada2f2(:,Gator2Data.Index25);
cada2tf2 = cada2f3(:,Gator2Data.Index26);
cada2td1(:,Gator2Data.Index27) = cada2td1(:,Gator2Data.Index27) + -cada2tf1./cada2tf2.^2.*cada2f3dV;
cada2f4dV = cada2td1;
cada2f4 = cada2f2./cada2f3;
cada2tf1 = cada1f8dV(:,Gator2Data.Index28);
cada2td1 = cada2tf1.*cada2f4dV;
cada2tf1 = cada2f4(:,Gator2Data.Index29);
cada2td1(:,Gator2Data.Index30) = cada2td1(:,Gator2Data.Index30) + cada2tf1.*cada1f8dVdV;
cada2f5dV = cada2td1;
cada2f5 = cada2f4.*cada1f8dV;
cada2f6dV = cada2f5dV;
cada2f6 = cada2f1 + cada2f5;
cada2td1 = zeros(size(cada1td1,1),25);
cada2td1(:,Gator2Data.Index31) = cada2f6dV;
cada2td1(:,Gator2Data.Index32) = cada1td1dV(:,Gator2Data.Index33);
cada1td1dV = cada2td1;
cada1td1(:,Gator1Data.Index7) = cada2f6;
integrand.dVdV = cada1td1dV; integrand.dV = cada1td1;
integrand.f = cada1f5./cada1f8;
%User Line: integrand = pop.*C3.*T.^(5.2).*cos(gam)./(v.*(z+50).^(2.5));
%User Line: % integrand = C3*T.^2./(v.*(h+50));
%User Line: % Equations of motion
cada2f1 = size(v.dV,1);
cada1td1 = zeros(cada2f1,2);
cada2f1dV = v.dV.*cgam.dV;
cada2f1 = cgam.f.*v.dV;
cada1td1dV = cada2f1dV;
cada1td1(:,1) = cada2f1;
cada2f1 = cada1td1(:,2);
cada2td1 = zeros(size(v.dV,1),2);
cada2td1(:,1) = cgam.dV.*v.dV;
cada2td1(:,2) = cada2td1(:,2) + v.f.*cgam.dVdV;
cada2f2dV = cada2td1;
cada2f2 = v.f.*cgam.dV;
cada2f3dV = cada2f2dV;
cada2f3 = cada2f1 + cada2f2;
cada2td1 = zeros(size(cada1td1,1),3);
cada2td1(:,Gator2Data.Index34) = cada2f3dV;
cada2td1(:,2) = cada1td1dV(:,1);
cada1td1dV = cada2td1;
cada1td1(:,2) = cada2f3;
cada1f1dVdV = cada1td1dV; cada1f1dV = cada1td1;
cada1f1 = v.f.*cgam.f;
cada2f1dV = cos(psi.f).*psi.dV;
cada2f1 = sin(psi.f);
cada2f2dV = -cada2f1dV;
cada2f2 = uminus(cada2f1);
cada1f2dVdV = psi.dV.*cada2f2dV;
cada1f2dV = cada2f2.*psi.dV;
cada1f2 = cos(psi.f);
cada1tf1dV = cada1f2dV(:,Gator2Data.Index35);
cada1tf1 = cada1f2(:,Gator1Data.Index8);
cada2f1 = size(cada1f1dV,1);
cada1td1 = zeros(cada2f1,3);
cada2td1 = zeros(size(cada1tf1dV,1),5);
cada2td1(:,Gator2Data.Index36) = cada1f1dV.*cada1tf1dV;
cada2tf1 = cada1tf1(:,Gator2Data.Index37);
cada2td1(:,Gator2Data.Index38) = cada2td1(:,Gator2Data.Index38) + cada2tf1.*cada1f1dVdV;
cada2f1dV = cada2td1;
cada2f1 = cada1tf1.*cada1f1dV;
cada1td1dV = cada2f1dV;
cada1td1(:,Gator1Data.Index9) = cada2f1;
cada2f1 = cada1td1(:,2);
cada2tf1 = cada1f2dV(:,Gator2Data.Index39);
cada2td1 = zeros(size(cada1f1dV,1),3);
cada2td1(:,Gator2Data.Index40) = cada2tf1.*cada1f1dV;
cada2td1(:,2) = cada2td1(:,2) + cada1f1.*cada1f2dVdV;
cada2f2dV = cada2td1;
cada2f2 = cada1f1.*cada1f2dV;
cada2f3dV = cada2f2dV;
cada2f3 = cada2f1 + cada2f2;
cada2td1 = zeros(size(cada1td1,1),8);
cada2td1(:,Gator2Data.Index41) = cada2f3dV;
cada2td1(:,Gator2Data.Index42) = cada1td1dV(:,Gator2Data.Index43);
cada1td1dV = cada2td1;
cada1td1(:,2) = cada2f3;
xdot.dVdV = cada1td1dV; xdot.dV = cada1td1;
xdot.f = cada1f1.*cada1f2;
%User Line: xdot = v.*cgam.*cos(psi);
cada2f1 = size(v.dV,1);
cada1td1 = zeros(cada2f1,2);
cada2f1dV = v.dV.*cgam.dV;
cada2f1 = cgam.f.*v.dV;
cada1td1dV = cada2f1dV;
cada1td1(:,1) = cada2f1;
cada2f1 = cada1td1(:,2);
cada2td1 = zeros(size(v.dV,1),2);
cada2td1(:,1) = cgam.dV.*v.dV;
cada2td1(:,2) = cada2td1(:,2) + v.f.*cgam.dVdV;
cada2f2dV = cada2td1;
cada2f2 = v.f.*cgam.dV;
cada2f3dV = cada2f2dV;
cada2f3 = cada2f1 + cada2f2;
cada2td1 = zeros(size(cada1td1,1),3);
cada2td1(:,Gator2Data.Index44) = cada2f3dV;
cada2td1(:,2) = cada1td1dV(:,1);
cada1td1dV = cada2td1;
cada1td1(:,2) = cada2f3;
cada1f1dVdV = cada1td1dV; cada1f1dV = cada1td1;
cada1f1 = v.f.*cgam.f;
cada2f1dV = -sin(psi.f).*psi.dV;
cada2f1 = cos(psi.f);
cada1f2dVdV = psi.dV.*cada2f1dV;
cada1f2dV = cada2f1.*psi.dV;
cada1f2 = sin(psi.f);
cada1tf1dV = cada1f2dV(:,Gator2Data.Index45);
cada1tf1 = cada1f2(:,Gator1Data.Index10);
cada2f1 = size(cada1f1dV,1);
cada1td1 = zeros(cada2f1,3);
cada2td1 = zeros(size(cada1tf1dV,1),5);
cada2td1(:,Gator2Data.Index46) = cada1f1dV.*cada1tf1dV;
cada2tf1 = cada1tf1(:,Gator2Data.Index47);
cada2td1(:,Gator2Data.Index48) = cada2td1(:,Gator2Data.Index48) + cada2tf1.*cada1f1dVdV;
cada2f1dV = cada2td1;
cada2f1 = cada1tf1.*cada1f1dV;
cada1td1dV = cada2f1dV;
cada1td1(:,Gator1Data.Index11) = cada2f1;
cada2f1 = cada1td1(:,2);
cada2tf1 = cada1f2dV(:,Gator2Data.Index49);
cada2td1 = zeros(size(cada1f1dV,1),3);
cada2td1(:,Gator2Data.Index50) = cada2tf1.*cada1f1dV;
cada2td1(:,2) = cada2td1(:,2) + cada1f1.*cada1f2dVdV;
cada2f2dV = cada2td1;
cada2f2 = cada1f1.*cada1f2dV;
cada2f3dV = cada2f2dV;
cada2f3 = cada2f1 + cada2f2;
cada2td1 = zeros(size(cada1td1,1),8);
cada2td1(:,Gator2Data.Index51) = cada2f3dV;
cada2td1(:,Gator2Data.Index52) = cada1td1dV(:,Gator2Data.Index53);
cada1td1dV = cada2td1;
cada1td1(:,2) = cada2f3;
ydot.dVdV = cada1td1dV; ydot.dV = cada1td1;
ydot.f = cada1f1.*cada1f2;
%User Line: ydot = v.*cgam.*sin(psi);
cada2f1 = size(v.dV,1);
cada1td1 = zeros(cada2f1,2);
cada2f1dV = v.dV.*sgam.dV;
cada2f1 = sgam.f.*v.dV;
cada1td1dV = cada2f1dV;
cada1td1(:,1) = cada2f1;
cada2f1 = cada1td1(:,2);
cada2td1 = zeros(size(v.dV,1),2);
cada2td1(:,1) = sgam.dV.*v.dV;
cada2td1(:,2) = cada2td1(:,2) + v.f.*sgam.dVdV;
cada2f2dV = cada2td1;
cada2f2 = v.f.*sgam.dV;
cada2f3dV = cada2f2dV;
cada2f3 = cada2f1 + cada2f2;
cada2td1 = zeros(size(cada1td1,1),3);
cada2td1(:,Gator2Data.Index54) = cada2f3dV;
cada2td1(:,2) = cada1td1dV(:,1);
cada1td1dV = cada2td1;
cada1td1(:,2) = cada2f3;
zdot.dVdV = cada1td1dV; zdot.dV = cada1td1;
zdot.f = v.f.*sgam.f;
%User Line: zdot   = v.*sgam;
cada2f1dV = cos(aoa.f).*aoa.dV;
cada2f1 = sin(aoa.f);
cada2f2dV = -cada2f1dV;
cada2f2 = uminus(cada2f1);
cada1f1dVdV = aoa.dV.*cada2f2dV;
cada1f1dV = cada2f2.*aoa.dV;
cada1f1 = cos(aoa.f);
cada2f1 = size(T.dV,1);
cada1td1 = zeros(cada2f1,2);
cada2f1dV = T.dV.*cada1f1dV;
cada2f1 = cada1f1.*T.dV;
cada1td1dV = cada2f1dV;
cada1td1(:,2) = cada2f1;
cada2f1 = cada1td1(:,1);
cada2td1 = zeros(size(T.dV,1),2);
cada2td1(:,2) = cada1f1dV.*T.dV;
cada2td1(:,1) = cada2td1(:,1) + T.f.*cada1f1dVdV;
cada2f2dV = cada2td1;
cada2f2 = T.f.*cada1f1dV;
cada2f3dV = cada2f2dV;
cada2f3 = cada2f1 + cada2f2;
cada2td1 = zeros(size(cada1td1,1),3);
cada2td1(:,Gator2Data.Index55) = cada2f3dV;
cada2td1(:,2) = cada1td1dV(:,1);
cada1td1dV = cada2td1;
cada1td1(:,1) = cada2f3;
cada1f2dVdV = cada1td1dV; cada1f2dV = cada1td1;
cada1f2 = T.f.*cada1f1;
cada2f1 = size(cada1f2dV,1);
cada1td1 = zeros(cada2f1,3);
cada1td1dV = cada1f2dVdV;
cada1td1(:,Gator1Data.Index12) = cada1f2dV;
cada2f1 = cada1td1(:,1);
cada2f2dV = -D.dVdV;
cada2f2 = uminus(D.dV);
cada2f3dV = cada2f2dV;
cada2f3 = cada2f1 + cada2f2;
cada2td1 = zeros(size(cada1td1,1),4);
cada2td1(:,1) = cada2f3dV;
cada2td1(:,Gator2Data.Index56) = cada1td1dV(:,Gator2Data.Index57);
cada1td1dV = cada2td1;
cada1td1(:,1) = cada2f3;
cada1f3dVdV = cada1td1dV; cada1f3dV = cada1td1;
cada1f3 = cada1f2 - D.f;
cada1f4dVdV = cada1f3dVdV./mass;
cada1f4dV = cada1f3dV/mass;
cada1f4 = cada1f3/mass;
cada1f5dVdV = gravity.*sgam.dVdV;
cada1f5dV = gravity*sgam.dV;
cada1f5 = gravity*sgam.f;
cada2f1 = size(cada1f4dV,1);
cada1td1 = zeros(cada2f1,4);
cada1td1dV = cada1f4dVdV;
cada1td1(:,Gator1Data.Index13) = cada1f4dV;
cada2f1 = cada1td1(:,2);
cada2f2dV = -cada1f5dVdV;
cada2f2 = uminus(cada1f5dV);
cada2f3dV = cada2f2dV;
cada2f3 = cada2f1 + cada2f2;
cada2td1 = zeros(size(cada1td1,1),5);
cada2td1(:,2) = cada2f3dV;
cada2td1(:,Gator2Data.Index58) = cada1td1dV(:,Gator2Data.Index59);
cada1td1dV = cada2td1;
cada1td1(:,2) = cada2f3;
vdot.dVdV = cada1td1dV; vdot.dV = cada1td1;
vdot.f = cada1f4 - cada1f5;
%User Line: vdot = (T.*cos(aoa)-D)./mass-gravity.*sgam;
cada2f1dV = -sin(aoa.f).*aoa.dV;
cada2f1 = cos(aoa.f);
cada1f1dVdV = aoa.dV.*cada2f1dV;
cada1f1dV = cada2f1.*aoa.dV;
cada1f1 = sin(aoa.f);
cada2f1 = size(T.dV,1);
cada1td1 = zeros(cada2f1,2);
cada2f1dV = T.dV.*cada1f1dV;
cada2f1 = cada1f1.*T.dV;
cada1td1dV = cada2f1dV;
cada1td1(:,2) = cada2f1;
cada2f1 = cada1td1(:,1);
cada2td1 = zeros(size(T.dV,1),2);
cada2td1(:,2) = cada1f1dV.*T.dV;
cada2td1(:,1) = cada2td1(:,1) + T.f.*cada1f1dVdV;
cada2f2dV = cada2td1;
cada2f2 = T.f.*cada1f1dV;
cada2f3dV = cada2f2dV;
cada2f3 = cada2f1 + cada2f2;
cada2td1 = zeros(size(cada1td1,1),3);
cada2td1(:,Gator2Data.Index60) = cada2f3dV;
cada2td1(:,2) = cada1td1dV(:,1);
cada1td1dV = cada2td1;
cada1td1(:,1) = cada2f3;
cada1f2dVdV = cada1td1dV; cada1f2dV = cada1td1;
cada1f2 = T.f.*cada1f1;
cada1f3dVdV = cada1f2dVdV; cada1f3dV = cada1f2dV;
cada1f3 = cada1f2 + L.f;
cada2f1dV = -sin(bank.f).*bank.dV;
cada2f1 = cos(bank.f);
cada1f4dVdV = bank.dV.*cada2f1dV;
cada1f4dV = cada2f1.*bank.dV;
cada1f4 = sin(bank.f);
cada1tf1dV = cada1f4dV(:,Gator2Data.Index61);
cada1tf1 = cada1f4(:,Gator1Data.Index14);
cada2f1 = size(cada1f3dV,1);
cada1td1 = zeros(cada2f1,3);
cada2td1 = zeros(size(cada1tf1dV,1),5);
cada2td1(:,Gator2Data.Index62) = cada1f3dV.*cada1tf1dV;
cada2tf1 = cada1tf1(:,Gator2Data.Index63);
cada2td1(:,Gator2Data.Index64) = cada2td1(:,Gator2Data.Index64) + cada2tf1.*cada1f3dVdV;
cada2f1dV = cada2td1;
cada2f1 = cada1tf1.*cada1f3dV;
cada1td1dV = cada2f1dV;
cada1td1(:,Gator1Data.Index15) = cada2f1;
cada2f1 = cada1td1(:,1);
cada2tf1 = cada1f4dV(:,Gator2Data.Index65);
cada2td1 = zeros(size(cada1f3dV,1),3);
cada2td1(:,Gator2Data.Index66) = cada2tf1.*cada1f3dV;
cada2td1(:,1) = cada2td1(:,1) + cada1f3.*cada1f4dVdV;
cada2f2dV = cada2td1;
cada2f2 = cada1f3.*cada1f4dV;
cada2f3dV = cada2f2dV;
cada2f3 = cada2f1 + cada2f2;
cada2td1 = zeros(size(cada1td1,1),8);
cada2td1(:,Gator2Data.Index67) = cada2f3dV;
cada2td1(:,Gator2Data.Index68) = cada1td1dV(:,Gator2Data.Index69);
cada1td1dV = cada2td1;
cada1td1(:,1) = cada2f3;
cada1f5dVdV = cada1td1dV; cada1f5dV = cada1td1;
cada1f5 = cada1f3.*cada1f4;
cada1f6dV = mass*v.dV;
cada1f6 = mass*v.f;
cada2f1 = size(cada1f6dV,1);
cada1td1 = zeros(cada2f1,2);
cada2f1dV = cada1f6dV.*cgam.dV;
cada2f1 = cgam.f.*cada1f6dV;
cada1td1dV = cada2f1dV;
cada1td1(:,1) = cada2f1;
cada2f1 = cada1td1(:,2);
cada2td1 = zeros(size(cada1f6dV,1),2);
cada2td1(:,1) = cgam.dV.*cada1f6dV;
cada2td1(:,2) = cada2td1(:,2) + cada1f6.*cgam.dVdV;
cada2f2dV = cada2td1;
cada2f2 = cada1f6.*cgam.dV;
cada2f3dV = cada2f2dV;
cada2f3 = cada2f1 + cada2f2;
cada2td1 = zeros(size(cada1td1,1),3);
cada2td1(:,Gator2Data.Index70) = cada2f3dV;
cada2td1(:,2) = cada1td1dV(:,1);
cada1td1dV = cada2td1;
cada1td1(:,2) = cada2f3;
cada1f7dVdV = cada1td1dV; cada1f7dV = cada1td1;
cada1f7 = cada1f6.*cgam.f;
cada1tf1dV = cada1f7dV(:,Gator2Data.Index71);
cada1tf1 = cada1f7(:,Gator1Data.Index16);
cada2f1 = size(cada1f5dV,1);
cada1td1 = zeros(cada2f1,5);
cada2tf1 = cada1tf1(:,Gator2Data.Index72);
cada2td1 = zeros(size(cada1f5dVdV,1),14);
cada2td1(:,Gator2Data.Index73) = cada1f5dVdV./cada2tf1;
cada2tf1 = cada1f5dV(:,Gator2Data.Index74);
cada2tf2 = cada1tf1(:,Gator2Data.Index75);
cada2td1(:,Gator2Data.Index76) = cada2td1(:,Gator2Data.Index76) + -cada2tf1./cada2tf2.^2.*cada1tf1dV;
cada2f1dV = cada2td1;
cada2f1 = cada1f5dV./cada1tf1;
cada1td1dV = cada2f1dV;
cada1td1(:,Gator1Data.Index17) = cada2f1;
cada1tf1dV = cada1f5dV(:,Gator2Data.Index77);
cada1tf1 = cada1f5(:,Gator1Data.Index18);
cada1tf2dV = cada1f7dV(:,Gator2Data.Index78);
cada1tf2 = cada1f7(:,Gator1Data.Index19);
cada2f1 = cada1td1(:,Gator1Data.Index20);
cada2f2dV = -cada1tf1dV;
cada2f2 = uminus(cada1tf1);
cada2tf2 = cada1tf2(:,Gator2Data.Index79);
cada2f3dV = 2.*cada2tf2.^(2-1).*cada1tf2dV;
cada2f3 = cada1tf2.^2;
cada2tf1 = cada2f3(:,Gator2Data.Index80);
cada2td1 = zeros(size(cada2f2dV,1),10);
cada2td1(:,Gator2Data.Index81) = cada2f2dV./cada2tf1;
cada2tf1 = cada2f2(:,Gator2Data.Index82);
cada2tf2 = cada2f3(:,Gator2Data.Index83);
cada2td1(:,Gator2Data.Index84) = cada2td1(:,Gator2Data.Index84) + -cada2tf1./cada2tf2.^2.*cada2f3dV;
cada2f4dV = cada2td1;
cada2f4 = cada2f2./cada2f3;
cada2tf1 = cada1f7dV(:,Gator2Data.Index85);
cada2td1 = cada2tf1.*cada2f4dV;
cada2tf1 = cada2f4(:,Gator2Data.Index86);
cada2td1(:,Gator2Data.Index87) = cada2td1(:,Gator2Data.Index87) + cada2tf1.*cada1f7dVdV;
cada2f5dV = cada2td1;
cada2f5 = cada2f4.*cada1f7dV;
cada2f6dV = cada2f5dV;
cada2f6 = cada2f1 + cada2f5;
cada2td1 = zeros(size(cada1td1,1),24);
cada2td1(:,Gator2Data.Index88) = cada2f6dV;
cada2td1(:,Gator2Data.Index89) = cada1td1dV(:,Gator2Data.Index90);
cada1td1dV = cada2td1;
cada1td1(:,Gator1Data.Index20) = cada2f6;
psidot.dVdV = cada1td1dV; psidot.dV = cada1td1;
psidot.f = cada1f5./cada1f7;
%User Line: psidot = (T.*sin(aoa)+L).*sin(bank)./(mass.*v.*cgam);
cada2f1dV = -sin(aoa.f).*aoa.dV;
cada2f1 = cos(aoa.f);
cada1f1dVdV = aoa.dV.*cada2f1dV;
cada1f1dV = cada2f1.*aoa.dV;
cada1f1 = sin(aoa.f);
cada2f1 = size(T.dV,1);
cada1td1 = zeros(cada2f1,2);
cada2f1dV = T.dV.*cada1f1dV;
cada2f1 = cada1f1.*T.dV;
cada1td1dV = cada2f1dV;
cada1td1(:,2) = cada2f1;
cada2f1 = cada1td1(:,1);
cada2td1 = zeros(size(T.dV,1),2);
cada2td1(:,2) = cada1f1dV.*T.dV;
cada2td1(:,1) = cada2td1(:,1) + T.f.*cada1f1dVdV;
cada2f2dV = cada2td1;
cada2f2 = T.f.*cada1f1dV;
cada2f3dV = cada2f2dV;
cada2f3 = cada2f1 + cada2f2;
cada2td1 = zeros(size(cada1td1,1),3);
cada2td1(:,Gator2Data.Index91) = cada2f3dV;
cada2td1(:,2) = cada1td1dV(:,1);
cada1td1dV = cada2td1;
cada1td1(:,1) = cada2f3;
cada1f2dVdV = cada1td1dV; cada1f2dV = cada1td1;
cada1f2 = T.f.*cada1f1;
cada1f3dVdV = cada1f2dVdV; cada1f3dV = cada1f2dV;
cada1f3 = cada1f2 + L.f;
cada2f1dV = cos(bank.f).*bank.dV;
cada2f1 = sin(bank.f);
cada2f2dV = -cada2f1dV;
cada2f2 = uminus(cada2f1);
cada1f4dVdV = bank.dV.*cada2f2dV;
cada1f4dV = cada2f2.*bank.dV;
cada1f4 = cos(bank.f);
cada1tf1dV = cada1f4dV(:,Gator2Data.Index92);
cada1tf1 = cada1f4(:,Gator1Data.Index21);
cada2f1 = size(cada1f3dV,1);
cada1td1 = zeros(cada2f1,3);
cada2td1 = zeros(size(cada1tf1dV,1),5);
cada2td1(:,Gator2Data.Index93) = cada1f3dV.*cada1tf1dV;
cada2tf1 = cada1tf1(:,Gator2Data.Index94);
cada2td1(:,Gator2Data.Index95) = cada2td1(:,Gator2Data.Index95) + cada2tf1.*cada1f3dVdV;
cada2f1dV = cada2td1;
cada2f1 = cada1tf1.*cada1f3dV;
cada1td1dV = cada2f1dV;
cada1td1(:,Gator1Data.Index22) = cada2f1;
cada2f1 = cada1td1(:,1);
cada2tf1 = cada1f4dV(:,Gator2Data.Index96);
cada2td1 = zeros(size(cada1f3dV,1),3);
cada2td1(:,Gator2Data.Index97) = cada2tf1.*cada1f3dV;
cada2td1(:,1) = cada2td1(:,1) + cada1f3.*cada1f4dVdV;
cada2f2dV = cada2td1;
cada2f2 = cada1f3.*cada1f4dV;
cada2f3dV = cada2f2dV;
cada2f3 = cada2f1 + cada2f2;
cada2td1 = zeros(size(cada1td1,1),8);
cada2td1(:,Gator2Data.Index98) = cada2f3dV;
cada2td1(:,Gator2Data.Index99) = cada1td1dV(:,Gator2Data.Index100);
cada1td1dV = cada2td1;
cada1td1(:,1) = cada2f3;
cada1f5dVdV = cada1td1dV; cada1f5dV = cada1td1;
cada1f5 = cada1f3.*cada1f4;
cada1f6dVdV = cada1f5dVdV./mass;
cada1f6dV = cada1f5dV/mass;
cada1f6 = cada1f5/mass;
cada1f7dVdV = gravity.*cgam.dVdV;
cada1f7dV = gravity*cgam.dV;
cada1f7 = cgam.f*gravity;
cada2f1 = size(cada1f6dV,1);
cada1td1 = zeros(cada2f1,4);
cada1td1dV = cada1f6dVdV;
cada1td1(:,Gator1Data.Index23) = cada1f6dV;
cada2f1 = cada1td1(:,1);
cada2f2dV = -cada1f7dVdV;
cada2f2 = uminus(cada1f7dV);
cada2f3dV = cada2f2dV;
cada2f3 = cada2f1 + cada2f2;
cada2td1 = zeros(size(cada1td1,1),9);
cada2td1(:,1) = cada2f3dV;
cada2td1(:,Gator2Data.Index101) = cada1td1dV(:,Gator2Data.Index102);
cada1td1dV = cada2td1;
cada1td1(:,1) = cada2f3;
cada1f8dVdV = cada1td1dV; cada1f8dV = cada1td1;
cada1f8 = cada1f6 - cada1f7;
cada1tf1dV = v.dV(:,Gator2Data.Index103);
cada1tf1 = v.f(:,Gator1Data.Index24);
cada2f1 = size(cada1f8dV,1);
cada1td1 = zeros(cada2f1,5);
cada2tf1 = cada1tf1(:,Gator2Data.Index104);
cada2td1 = zeros(size(cada1f8dVdV,1),13);
cada2td1(:,Gator2Data.Index105) = cada1f8dVdV./cada2tf1;
cada2td1(:,Gator2Data.Index106) = cada2td1(:,Gator2Data.Index106) + -cada1f8dV./cada1tf1.^2.*cada1tf1dV;
cada2f1dV = cada2td1;
cada2f1 = cada1f8dV./cada1tf1;
cada1td1dV = cada2f1dV;
cada1td1(:,Gator1Data.Index25) = cada2f1;
cada2f1 = cada1td1(:,1);
cada2f2dV = -cada1f8dV;
cada2f2 = uminus(cada1f8);
cada2f3dV = 2.*v.f.^(2-1).*v.dV;
cada2f3 = v.f.^2;
cada2tf1 = cada2f3(:,Gator2Data.Index107);
cada2td1 = zeros(size(cada2f2dV,1),5);
cada2td1(:,Gator2Data.Index108) = cada2f2dV./cada2tf1;
cada2td1(:,1) = cada2td1(:,1) + -cada2f2./cada2f3.^2.*cada2f3dV;
cada2f4dV = cada2td1;
cada2f4 = cada2f2./cada2f3;
cada2tf1 = v.dV(:,Gator2Data.Index109);
cada2f5dV = cada2tf1.*cada2f4dV;
cada2f5 = cada2f4.*v.dV;
cada2f6dV = cada2f5dV;
cada2f6 = cada2f1 + cada2f5;
cada2td1 = zeros(size(cada1td1,1),18);
cada2td1(:,Gator2Data.Index110) = cada2f6dV;
cada2td1(:,Gator2Data.Index111) = cada1td1dV(:,Gator2Data.Index112);
cada1td1dV = cada2td1;
cada1td1(:,1) = cada2f6;
gamdot.dVdV = cada1td1dV; gamdot.dV = cada1td1;
gamdot.f = cada1f8./v.f;
%User Line: gamdot   = ((T.*sin(aoa)+L).*cos(bank)./mass-cgam.*gravity)./v;
cada2f1 = size(xdot.f,1);
cada1td1 = zeros(cada2f1,22);
cada1td1dV = xdot.dVdV;
cada1td1(:,Gator1Data.Index26) = xdot.dV;
cada2td1 = zeros(size(cada1td1,1),16);
cada2td1(:,Gator2Data.Index113) = ydot.dVdV;
cada2td1(:,Gator2Data.Index114) = cada1td1dV(:,Gator2Data.Index115);
cada1td1dV = cada2td1;
cada1td1(:,Gator1Data.Index27) = ydot.dV;
cada2td1 = zeros(size(cada1td1,1),19);
cada2td1(:,Gator2Data.Index116) = zdot.dVdV;
cada2td1(:,Gator2Data.Index117) = cada1td1dV(:,Gator2Data.Index118);
cada1td1dV = cada2td1;
cada1td1(:,Gator1Data.Index28) = zdot.dV;
cada2td1 = zeros(size(cada1td1,1),24);
cada2td1(:,Gator2Data.Index119) = vdot.dVdV;
cada2td1(:,Gator2Data.Index120) = cada1td1dV(:,Gator2Data.Index121);
cada1td1dV = cada2td1;
cada1td1(:,Gator1Data.Index29) = vdot.dV;
cada2td1 = zeros(size(cada1td1,1),48);
cada2td1(:,Gator2Data.Index122) = psidot.dVdV;
cada2td1(:,Gator2Data.Index123) = cada1td1dV(:,Gator2Data.Index124);
cada1td1dV = cada2td1;
cada1td1(:,Gator1Data.Index30) = psidot.dV;
cada2td1 = zeros(size(cada1td1,1),66);
cada2td1(:,Gator2Data.Index125) = gamdot.dVdV;
cada2td1(:,Gator2Data.Index126) = cada1td1dV(:,Gator2Data.Index127);
cada1td1dV = cada2td1;
cada1td1(:,Gator1Data.Index31) = gamdot.dV;
output.dynamics.dVdV = cada1td1dV; output.dynamics.dV = cada1td1;
output.dynamics.f = [xdot.f ydot.f zdot.f vdot.f psidot.f gamdot.f];
%User Line: output.dynamics  = [xdot, ydot, zdot ,vdot, psidot, gamdot];
output.integrand.dVdV = integrand.dVdV; output.integrand.dV = integrand.dV;
output.integrand.f = integrand.f;
%User Line: output.integrand = integrand;
%User Line: %------------------------------------%
%User Line: % End File:  goddardRocketContinuous %
%User Line: %------------------------------------%
output.dynamics.dV_size = [6 10];
output.dynamics.dV_location = Gator1Data.Index32;
output.integrand.dV_size = 10;
output.integrand.dV_location = Gator1Data.Index33;
output.dynamics.dVdV_size = [output.dynamics.dV_size,10];
output.dynamics.dVdV_location = [output.dynamics.dV_location(Gator2Data.Index128,:), Gator2Data.Index129];
output.integrand.dVdV_size = [output.integrand.dV_size,10];
output.integrand.dVdV_location = [output.integrand.dV_location(Gator2Data.Index130,:), Gator2Data.Index131];
end


function ADiGator_LoadData()
global ADiGator_Aircraft_Noise_Continuous_3DOF_PopADiGatorHes
ADiGator_Aircraft_Noise_Continuous_3DOF_PopADiGatorHes = load('Aircraft_Noise_Continuous_3DOF_PopADiGatorHes.mat');
return
end