function varargout = axesMenuToolbar(varargin)
% AXESMENUTOOLBAR Example for creating GUIs with menus, toolbar, and plots
%       AXESMENUTOOLBAR is an example GUI for demonstrating how to creating
%       GUIs using nested functions. It shows how to generate different
%       plots and how to add menus and toolbar to the GUIs.

%   Copyright 1984-2006 The MathWorks, Inc.

% Declare non-UI data so that they can be used in any functions in this GUI
% file, including functions triggered by creating the GUI layout below
mOutputArgs     = {};       % Variable for storing output when GUI returns
mPlotTypes      = {...      % Example plot types shown by this GUI
                    'plot(rand(5))',         @(a)plot(a, rand(5));
                    'plot(sin(1:0.01:25))',  @(a)plot(a, sin(1:0.01:25));
                    'bar(1:.5:10)',          @(a)bar(a,1:.5:10); 
                    'plot(membrane)',        @(a)plot(a, membrane);
                    'surf(peaks)',           @(a)surf(a, peaks)};

% Declare and create all the UI objects in this GUI here so that they can
% be used in any functions
hMainFigure    =   figure(...       % the main GUI figure
                        'MenuBar','none', ...
                        'Toolbar','none', ...
                        'HandleVisibility','callback', ...
                        'Name', mfilename, ...
                        'NumberTitle','off', ...
                        'Color', get(0, 'defaultuicontrolbackgroundcolor'));
hPlotAxes      =   axes(...         % the axes for plotting selected plot
                        'Parent', hMainFigure, ...
                        'Units', 'normalized', ...
                        'HandleVisibility','callback', ...
                        'Position',[0.11 0.13 0.80 0.67]);
hPlotsPopupmenu=   uicontrol(...    % list of available types of plot
                        'Parent', hMainFigure, ...
                        'Units','normalized',...
                        'Position',[0.11 0.85 0.45 0.1],...
                        'HandleVisibility','callback', ...
                        'String',mPlotTypes(:,1),...
                        'Style','popupmenu');
hUpdateButton  =   uicontrol(...    % button for updating selected plot 
                        'Parent', hMainFigure, ...
                        'Units','normalized',...
                        'HandleVisibility','callback', ...
                        'Position',[0.6 0.85 0.3 0.1],...
                        'String','Update',...
                        'Callback', @hUpdateButtonCallback);
hFileMenu      =   uimenu(...       % File menu
                        'Parent',hMainFigure,...
                        'HandleVisibility','callback', ...
                        'Label','File');
hOpenMenuitem  =   uimenu(...       % Open menu item
                        'Parent',hFileMenu,...
                        'Label','Open',...
                        'HandleVisibility','callback', ...
                        'Callback', @hOpenMenuitemCallback);
hPrintMenuitem  =  uimenu(...       % Print menu item
                        'Parent',hFileMenu,...
                        'Label','Print',...
                        'HandleVisibility','callback', ...
                        'Callback', @hPrintMenuitemCallback);
hCloseMenuitem  =  uimenu(...       % Close menu item
                        'Parent',hFileMenu,...
                        'Label','Close',...
                        'Separator','on',...
                        'HandleVisibility','callback', ...
                        'Callback', @hCloseMenuitemCallback');
hToolbar       =   uitoolbar(...    % Toolbar for Open and Print buttons
                        'Parent',hMainFigure, ...
                        'HandleVisibility','callback');
hOpenPushtool  =   uipushtool(...   % Open toolbar button
                        'Parent',hToolbar,...
                        'TooltipString','Open File',...
                        'CData',iconRead(fullfile(matlabroot, '/toolbox/matlab/icons/opendoc.mat')),...
                        'HandleVisibility','callback', ...
                        'ClickedCallback', @hOpenMenuitemCallback);
hPrintPushtool =   uipushtool(...    % Print toolbar button
                        'Parent',hToolbar,...
                        'TooltipString','Print Figure',...
                        'CData',iconRead(fullfile(matlabroot, '/toolbox/matlab/icons/printdoc.mat')),...
                        'HandleVisibility','callback', ...
                        'ClickedCallback', @hPrintMenuitemCallback);        

% Update the plot with the initial plot type
localUpdatePlot();

% Define default output and return it if it is requested by users
mOutputArgs{1} = hMainFigure;
if nargout>0
    [varargout{1:nargout}] = mOutputArgs{:};
end

    %----------------------------------------------------------------------
    function hUpdateButtonCallback(hObject, eventdata)   
    % Callback function run when the update button is pressed
        localUpdatePlot();
    end

    %----------------------------------------------------------------------
    function hOpenMenuitemCallback(hObject, eventdata)
    % Callback function run when the Open menu item is selected    
        file = uigetfile('*.fig');
        if ~isequal(file, 0)
            open(file);
        end
    end

    %----------------------------------------------------------------------
    function hPrintMenuitemCallback(hObject, eventdata)
    % Callback function run when the Print menu item is selected    
        printdlg(hMainFigure);
    end

    %----------------------------------------------------------------------
    function hCloseMenuitemCallback(hObject, eventdata)
    % Callback function run when the Close menu item is selected    
        selection = questdlg(['Close ' get(hMainFigure,'Name') '?'],...
                             ['Close ' get(hMainFigure,'Name') '...'],...
                             'Yes','No','Yes');
        if strcmp(selection,'No')
            return;
        end

        delete(hMainFigure);
    end

    %----------------------------------------------------------------------
    function localUpdatePlot
    % Helper function for ploting the selected plot type
        mPlotTypes{get(hPlotsPopupmenu, 'Value'), 2}(hPlotAxes);
    end

end % end of axesMenuToolbar
